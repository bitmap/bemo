* {
  box-sizing: border-box;
}

.form__control,
.btn {
  color: inherit;
  font-size: 1em;
  font-family: inherit;
  line-height: normal;
  text-transform: none;
  margin: 0;
}

.btn::-moz-focus-inner {
  padding: 0;
  border: 0;
}

html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  margin: 0;
  font-size: 16px;
  line-height: 1.4;
  color: #333;
}

a {
  color: #00f;
  cursor: pointer;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* components */

.h1 {
  font-size: 2.027em;
}

.h2 {
  font-size: 1.602em;
}

.h3 {
  font-size: 1.424em;
}

.h4 {
  font-size: 1.266em;
}

.h5 {
  font-size: 1.266em;
}

.h6 {
  font-size: 1.125em;
}

.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin: 1em 0;
  font-weight: normal;
}

.h4 {
  font-style: italic;
}

.p {
  margin: 0 0 1em;
}

.p--lead {
  margin-bottom: 1.5em;
  font-size: 1.15rem;
}

.p > img {
  display: block;
  margin: 1em auto 2em;
}

.small {
  font-size: 80%;
  font-weight: normal;
}

.blockquote {
  margin: 0 0 0 1em;
  padding: 1em 2.5em;
  border-left: 2px solid;
}

.blockquote .p:last-child,
.blockquote .list:last-child {
  margin-bottom: 0;
}

.mark {
  background-color: #FAD232;
  padding: 0.2em;
}

.list {
  margin-top: 0;
  margin-bottom: 1em;
  padding-left: 2.5em;
}

.list .list {
  margin-bottom: 0;
}

.list--unstyled {
  padding-left: 0;
  list-style: none;
}

hr {
  border: none;
  height: 2px;
  background: black;
  margin-top: 2em;
}

.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 1rem;
}

.col-1 {
  width: 8.33333%;
}

.col-2 {
  width: 16.66667%;
}

.col-3 {
  width: 25%;
}

.col-4 {
  width: 33.33333%;
}

.col-5 {
  width: 41.66667%;
}

.col-6 {
  width: 50%;
}

.col-7 {
  width: 58.33333%;
}

.col-8 {
  width: 66.66667%;
}

.col-9 {
  width: 75%;
}

.col-10 {
  width: 83.33333%;
}

.col-11 {
  width: 91.66667%;
}

.col-12 {
  width: 100%;
}

.grid__unit {
  float: left;
  padding: 0.5em;
}

.grid--table {
  display: table;
  width: 100%;
}

.grid--flex {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.grid--table > .grid__unit {
  display: table-cell;
  vertical-align: top;
  overflow: hidden;
}

.grid--flex > .grid__unit {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.menu {
  background-color: #eee;
}

.menu,
.submenu {
  list-style-type: none;
  margin: 0;
  padding: 0;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.menu__title {
  font-weight: bold;
  font-size: 1.424em;
  padding: 0 1em;
  color: #0CABE0;
}

.menu__item {
  display: block;
  color: inherit;
  padding: 1em;
}

a.menu__item:hover {
  color: #00f;
  text-decoration: none;
}

.has-submenu:hover .submenu,
.submenu:hover {
  visibility: visible;
  opacity: 1;
}

.menu--horizontal > li {
  display: inline-block;
  vertical-align: middle;
}

.has-submenu {
  position: relative;
}

.has-submenu > .menu__item {
  padding-right: 2em;
}

.has-submenu > .menu__item::after {
  content: '';
  position: absolute;
  margin: 0.35em;
  height: 0;
  width: 0;
  border-right: 0.35em solid transparent;
  border-left: 0.35em solid transparent;
  border-top: 0.5em solid;
  right: 0.5em;
  top: 1em;
}

.submenu {
  background-color: #eee;
  min-width: 150px;
  border-radius: 2px;
  transition: visibility 500ms, opacity 250ms 250ms;
  position: absolute;
  left: -1em;
  right: -1em;
  visibility: hidden;
  opacity: 0;
}

.alert {
  padding: 0.25em 0.5em;
  border-radius: 2px;
  margin: 0.5em 0;
}

.alert--error {
  background-color: rgb(238, 168, 166);
  color: rgb(166, 61, 57);
}

.alert--success {
  background-color: rgb(128, 229, 223);
  color: rgb(0, 152, 143);
}

.alert--info {
  background-color: rgb(253, 233, 153);
  color: rgb(188, 158, 38);
}

.btn {
  background-color: gray;
  background: transparent;
  display: inline-block;
  border: 2px solid rgba(0,0,0,0.1);
  border-radius: 2px;
  padding: 0.5em 1em;
  cursor: pointer;
}

.btn:focus,
.btn:hover {
  outline: 0;
  border-color: rgba(0,0,0,0.25);
  box-shadow: inset 0 50px 0 rgba(255,255,255,0.25);
  text-decoration: none;
}

.btn:active {
  box-shadow: inset 0 50px 0 rgba(0,0,0,0.1);
}

.btn--primary {
  background-color: #0CABE0;
  color: white;
}

.btn--secondary {
  background-color: #00CABE;
  color: white;
}

.btn--tertiary {
  background-color: #CABE00;
  color: white;
}

.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.media {
  display: block;
  overflow: hidden;
}

.media__body {
  overflow: hidden;
  padding: 1em;
}

.form__radio > input,
.form__checkbox > input {
  font-size: 100%;
  line-height: normal;
  vertical-align: baseline;
  margin: 0 0.5em;
}

fieldset {
  padding: 0 2em 2em;
  border: 2px solid;
  border-radius: 2px;
}

legend {
  padding: 1em;
  font-weight: bold;
}

label {
  display: block;
  min-width: 6em;
  margin: 0.25em 0;
}

.form__radio,
.form__checkbox {
  margin: .5em 0;
  display: block;
}

.form__control {
  display: block;
  border: 2px solid rgba(0,0,0,0.1);
  border-radius: 2px;
  padding: 0.5em 1em;
  margin-bottom: 1em;
}

.form__control:hover,
.form__control:focus {
  border-color: #0CABE0;
  outline: 0;
}

.table {
  border-collapse: collapse;
}

.table td,
.table th {
  padding: 0.5em;
  text-align: left;
  min-width: 110px;
}

.table thead th {
  vertical-align: bottom;
  border-bottom: 2px solid #BBB;
}

.table tfoot td {
  vertical-align: top;
  border-top: 2px solid #BBB;
}

.table--zebra-row tbody tr:nth-child(even) {
  background-color: #EEE;
}

.table--zebra-col th:nth-child(even),
.table--zebra-col td:nth-child(even) {
  background-color: #EEE;
}

.table--border-all td,
.table--border-all th {
  border: 2px solid #BBB;
}

.table--border-row td {
  border-top: 2px solid #BBB;
}

.table--border-col td,
.table--border-col th {
  border-left: 2px solid #BBB;
}

.table--border-col td:first-child,
.table--border-col th:first-child {
  border-left: 0;
}

/* utilities */

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-nowrap {
  white-space: nowrap;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.u-clearfix:before,
.u-clearfix:after {
  content: "";
  display: table;
}

.u-clearfix:after {
  clear: both;
}

.u-block {
  display: block;
}

.u-iblock {
  display: inline-block;
}

.u-inline {
  display: inline;
}

.bordered {
  border: 2px solid #BBB;
  border-radius: 2px;
}

/* attribute helpers */

[disabled] {
  background: #EEE;
  color: #A9A9A9;
  border-color: #EEE;
  box-shadow: none;
  text-shadow: none;
  cursor: default;
  pointer-events: none;
}

[hidden] {
  display: none;
}


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9vYmVsaXNrL2dpdGh1Yi9iZW1vL3NyYy9iYXNlL19yZXNldC5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvYmVtby5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fdHlwZS5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fZ3JpZC5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fbWVudS5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fYWxlcnRzLmNzcyIsIi9Vc2Vycy9vYmVsaXNrL2dpdGh1Yi9iZW1vL3NyYy9jb21wb25lbnRzL19idXR0b25zLmNzcyIsIi9Vc2Vycy9vYmVsaXNrL2dpdGh1Yi9iZW1vL3NyYy9jb21wb25lbnRzL19tZWRpYS5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fZm9ybXMuY3NzIiwiL1VzZXJzL29iZWxpc2svZ2l0aHViL2JlbW8vc3JjL2NvbXBvbmVudHMvX3RhYmxlcy5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvdXRpbHMvX3V0aWxzLmNzcyIsInNvdXJjZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTs7O0FBR0Y7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNDO0VBQ0E7OztBQ2JEO0VBQ0U7RUFDQTtFQUFBO0VBQUE7OztBQUVGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBOzs7QUFHRjtFQUNFOzs7QUFHRjs7QUN4QkE7RUFBTTs7O0FBQ047RUFBTTs7O0FBQ047RUFBTTs7O0FBQ047RUFBTTs7O0FBQ047RUFBTTs7O0FBQ047RUFBTTs7O0FBRU47Ozs7OztFQUNFO0VBQ0E7OztBQUdGO0VBQUs7OztBQUlMO0VBQUs7OztBQUVMO0VBQ0U7RUFDQTs7O0FBR0Q7RUFDQztFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBOzs7QUFHRjs7RUFFRTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBOzs7QUNwRUY7RUFDRTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQUE7RUFBQTtFQUNBO0VBQUE7RUFBQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFBQTtFQUFBOzs7QUM1RUY7RUFDRTs7O0FBR0Y7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGOztFQUVFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTs7O0FBR0Y7RUFDRTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQ3ZFRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FDbEJGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdGOztFQUVFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUNsQ0Y7RUFBYTs7O0FBQ2I7RUFBYzs7O0FBRWQ7RUFDQztFQUNBOzs7QUFHRDtFQUNDO0VBQ0E7OztBQ1ZEOztFQUVFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7O0FBSUY7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7O0VBRUU7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjs7RUFFRTtFQUNBOzs7QUMzQ0Y7RUFDRTs7O0FBR0Y7O0VBRUU7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTs7O0FBSUY7O0VBRUU7OztBQUdGOztFQUNFOzs7QUFHRjtFQUNJOzs7QUFHSjs7RUFFRTs7O0FBR0Y7O0VBRUU7OztBUlpGOztBU2xDQTtFQUF1Qjs7O0FBQ3ZCO0VBQXVCOzs7QUFDdkI7RUFBdUI7OztBQUN2QjtFQUF1Qjs7O0FBQ3ZCO0VBQXVCOzs7QUFFdkI7RUFBdUI7OztBQUN2QjtFQUF1Qjs7O0FBQ3ZCO0VBQXVCOzs7QUFFdkI7O0VBRUU7RUFDQTs7O0FBR0Y7RUFDRTs7O0FBR0Y7RUFBVzs7O0FBQ1g7RUFBWTs7O0FBQ1o7RUFBWTs7O0FBRVo7RUFDQztFQUNBOzs7QVRXRDs7QUFDQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUFVOzs7QVVxZlYiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLmZvcm1fX2NvbnRyb2wsXG4uYnRuIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIG1hcmdpbjogMDtcbn1cblxuLmJ0bjo6LW1vei1mb2N1cy1pbm5lciB7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMDtcbn1cbiIsIkBpbXBvcnQgXCJiYXNlL19yb290LmNzc1wiO1xuQGltcG9ydCBcImJhc2UvX3Jlc2V0LmNzc1wiO1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGNvbG9yOiAjMzMzO1xufVxuXG5hIHtcbiAgY29sb3I6IHZhcigtLXRoZW1lX2xpbmspO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4vKiBjb21wb25lbnRzICovXG5AaW1wb3J0IFwiY29tcG9uZW50cy9fdHlwZS5jc3NcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL19ncmlkLmNzc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvX21lbnUuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fYWxlcnRzLmNzc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvX2J1dHRvbnMuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fbWVkaWEuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fZm9ybXMuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fdGFibGVzLmNzc1wiO1xuXG4vKiB1dGlsaXRpZXMgKi9cbkBpbXBvcnQgXCJ1dGlscy9fdXRpbHMuY3NzXCI7XG5cbi8qIGF0dHJpYnV0ZSBoZWxwZXJzICovXG5bZGlzYWJsZWRdIHtcbiAgYmFja2dyb3VuZDogI0VFRTtcbiAgY29sb3I6ICNBOUE5QTk7XG4gIGJvcmRlci1jb2xvcjogI0VFRTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbltoaWRkZW5dIHtkaXNwbGF5OiBub25lO31cbiIsIi5oMSB7IGZvbnQtc2l6ZTogdmFyKC0taDEpIH1cbi5oMiB7IGZvbnQtc2l6ZTogdmFyKC0taDIpIH1cbi5oMyB7IGZvbnQtc2l6ZTogdmFyKC0taDMpIH1cbi5oNCB7IGZvbnQtc2l6ZTogdmFyKC0taDQpIH1cbi5oNSB7IGZvbnQtc2l6ZTogdmFyKC0taDUpIH1cbi5oNiB7IGZvbnQtc2l6ZTogdmFyKC0taDYpIH1cblxuLmgxLCAuaDIsIC5oMywgLmg0LCAuaDUsIC5oNiB7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5oNCB7Zm9udC1zdHlsZTogaXRhbGljO31cblxuLmg2IHt9XG5cbi5wIHsgbWFyZ2luOiAwIDAgMWVtIH1cblxuLnAtLWxlYWQgeyBcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4xNSk7XG4gfVxuXG4gLnAgPiBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAxZW0gYXV0byAyZW07XG4gfVxuXG4uc21hbGwge1xuICBmb250LXNpemU6IHZhcigtLXNtKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDAgMCAwIDFlbTtcbiAgcGFkZGluZzogMWVtIDIuNWVtO1xuICBib3JkZXItbGVmdDogdmFyKC0tYm9yZGVyKTtcbn1cblxuLmJsb2NrcXVvdGUgLnA6bGFzdC1jaGlsZCwgXG4uYmxvY2txdW90ZSAubGlzdDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZV9hbGVydC13YXJuaW5nKTtcbiAgcGFkZGluZzogMC4yZW07XG59XG5cbi5saXN0IHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBwYWRkaW5nLWxlZnQ6IDIuNWVtO1xufVxuXG4ubGlzdCAubGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5saXN0LS11bnN0eWxlZCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaHIge1xuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgbWFyZ2luLXRvcDogMmVtO1xufVxuIiwiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogdmFyKC0tZ3JpZF9tYXgtd2lkdGgpO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxcmVtO1xufVxuXG4uY29sLTEge1xuICB3aWR0aDogOC4zMzMzMyU7XG59XG5cbi5jb2wtMiB7XG4gIHdpZHRoOiAxNi42NjY2NyU7XG59XG5cbi5jb2wtMyB7XG4gIHdpZHRoOiAyNSU7XG59XG5cbi5jb2wtNCB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7XG59XG5cbi5jb2wtNSB7XG4gIHdpZHRoOiA0MS42NjY2NyU7XG59XG5cbi5jb2wtNiB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5jb2wtNyB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7XG59XG5cbi5jb2wtOCB7XG4gIHdpZHRoOiA2Ni42NjY2NyU7XG59XG5cbi5jb2wtOSB7XG4gIHdpZHRoOiA3NSU7XG59XG5cbi5jb2wtMTAge1xuICB3aWR0aDogODMuMzMzMzMlO1xufVxuXG4uY29sLTExIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTtcbn1cblxuLmNvbC0xMiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZF9fdW5pdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxuLmdyaWQtLXRhYmxlIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZC0tZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5ncmlkLS10YWJsZSA+IC5ncmlkX191bml0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmdyaWQtLWZsZXggPiAuZ3JpZF9fdW5pdCB7XG4gIGZsZXg6IDE7XG59XG4iLCIubWVudSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1lbnVfYmFja2dyb3VuZCk7XG59XG5cbi5tZW51LFxuLnN1Ym1lbnUge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4yKTtcbn1cblxuLm1lbnVfX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogdmFyKC0taDMpO1xuICBwYWRkaW5nOiAwIHZhcigtLWd1dHRlcik7XG4gIGNvbG9yOiB2YXIoLS10aGVtZV9wcmltYXJ5KTtcbn1cblxuLm1lbnVfX2l0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IHZhcigtLWd1dHRlcik7XG59XG5cbmEubWVudV9faXRlbTpob3ZlciB7XG4gIGNvbG9yOiB2YXIoLS10aGVtZV9saW5rKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uaGFzLXN1Ym1lbnU6aG92ZXIgLnN1Ym1lbnUsXG4uc3VibWVudTpob3ZlciB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5tZW51LS1ob3Jpem9udGFsID4gbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5oYXMtc3VibWVudSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhhcy1zdWJtZW51ID4gLm1lbnVfX2l0ZW0ge1xuICBwYWRkaW5nLXJpZ2h0OiAyZW07XG59XG5cbi5oYXMtc3VibWVudSA+IC5tZW51X19pdGVtOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbjogMC4zNWVtO1xuICBoZWlnaHQ6IDA7XG4gIHdpZHRoOiAwO1xuICBib3JkZXItcmlnaHQ6IDAuMzVlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDAuMzVlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcDogMC41ZW0gc29saWQ7XG4gIHJpZ2h0OiAwLjVlbTtcbiAgdG9wOiAxZW07XG59XG5cbi5zdWJtZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWVudV9iYWNrZ3JvdW5kKTtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyX3JhZGl1cyk7XG4gIHRyYW5zaXRpb246IHZpc2liaWxpdHkgNTAwbXMsIG9wYWNpdHkgMjUwbXMgMjUwbXM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTFlbTtcbiAgcmlnaHQ6IC0xZW07XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3BhY2l0eTogMDtcbn1cbiIsIi5hbGVydCB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tZ3V0dGVyKS80KSBjYWxjKHZhcigtLWd1dHRlcikvMik7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlcl9yYWRpdXMpO1xuICBtYXJnaW46IDAuNWVtIDA7XG59XG5cbi5hbGVydC0tZXJyb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC1lcnJvcnMpIHRpbnQoNTAlKSk7XG4gIGNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC1lcnJvcnMpIHNoYWRlKDI1JSkpXG59XG5cbi5hbGVydC0tc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHZhcigtLXRoZW1lX2FsZXJ0LXN1Y2Nlc3MpIHRpbnQoNTAlKSk7XG4gIGNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC1zdWNjZXNzKSBzaGFkZSgyNSUpKVxufVxuXG4uYWxlcnQtLWluZm8ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC13YXJuaW5nKSB0aW50KDUwJSkpO1xuICBjb2xvcjogY29sb3IodmFyKC0tdGhlbWVfYWxlcnQtd2FybmluZykgc2hhZGUoMjUlKSlcbn1cbiIsIi5idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5KTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tZ3JheV9sdHJfYSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlcl9yYWRpdXMpO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0bjpmb2N1cyxcbi5idG46aG92ZXIge1xuICBvdXRsaW5lOiAwO1xuICBib3JkZXItY29sb3I6IHZhcigtLWdyYXlfbHRfYSk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgNTBweCAwIHJnYmEoMjU1LDI1NSwyNTUsMC4yNSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmJ0bjphY3RpdmUge1xuICBib3gtc2hhZG93OiBpbnNldCAwIDUwcHggMCB2YXIoLS1ncmF5X2x0cl9hKTtcbn1cblxuLmJ0bi0tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lX3ByaW1hcnkpO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tLXNlY29uZGFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lX3NlY29uZGFyeSk7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0tdGVydGlhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZV90ZXJ0aWFyeSk7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiIsIi5wdWxsLWxlZnQgeyBmbG9hdDogbGVmdDsgfVxuLnB1bGwtcmlnaHQgeyBmbG9hdDogcmlnaHQ7IH1cblxuLm1lZGlhIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5tZWRpYV9fYm9keSB7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHBhZGRpbmc6IGNhbGModmFyKC0tZ3V0dGVyIC8gMikpO1xufVxuIiwiLmZvcm1fX3JhZGlvID4gaW5wdXQsXG4uZm9ybV9fY2hlY2tib3ggPiBpbnB1dCB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBtYXJnaW46IDAgMC41ZW07XG59XG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMCAyZW0gMmVtO1xuICBib3JkZXI6IHZhcigtLWJvcmRlcik7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlcl9yYWRpdXMpO1xuXG59XG5cbmxlZ2VuZCB7IFxuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtaW4td2lkdGg6IDZlbTtcbiAgbWFyZ2luOiBjYWxjKHZhcigtLWd1dHRlcikvNCkgMDtcbn1cblxuLmZvcm1fX3JhZGlvLFxuLmZvcm1fX2NoZWNrYm94IHtcbiAgbWFyZ2luOiAuNWVtIDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSBcblxuLmZvcm1fX2NvbnRyb2wge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyOiB2YXIoLS1ib3JkZXIpIHZhcigtLWdyYXlfbHRyX2EpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXJfcmFkaXVzKTtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1ndXR0ZXIpO1xufVxuXG4uZm9ybV9fY29udHJvbDpob3Zlcixcbi5mb3JtX19jb250cm9sOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS10aGVtZV9wcmltYXJ5KTtcbiAgb3V0bGluZTogMDtcbn1cbiIsIi50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbi50YWJsZSB0ZCxcbi50YWJsZSB0aCB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tZ3V0dGVyKSAvIDIpO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtaW4td2lkdGg6IDExMHB4O1xufVxuXG4udGFibGUgdGhlYWQgdGgge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tZ3JheV9sdCk7XG59XG5cbi50YWJsZSB0Zm9vdCB0ZCB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCB2YXIoLS1ncmF5X2x0KTtcbn1cblxuLnRhYmxlLS16ZWJyYS1yb3cgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pICB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXlfbHRyKTtcbn1cblxuXG4udGFibGUtLXplYnJhLWNvbCB0aDpudGgtY2hpbGQoZXZlbiksXG4udGFibGUtLXplYnJhLWNvbCB0ZDpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5X2x0cik7XG59XG5cbi50YWJsZS0tYm9yZGVyLWFsbCB0ZCwgLnRhYmxlLS1ib3JkZXItYWxsIHRoIHtcbiAgYm9yZGVyOiB2YXIoLS1ib3JkZXIpIHZhcigtLWdyYXlfbHQpO1xufVxuXG4udGFibGUtLWJvcmRlci1yb3cgdGQge1xuICAgIGJvcmRlci10b3A6IHZhcigtLWJvcmRlcikgdmFyKC0tZ3JheV9sdCk7XG59XG5cbi50YWJsZS0tYm9yZGVyLWNvbCB0ZCxcbi50YWJsZS0tYm9yZGVyLWNvbCB0aCB7XG4gIGJvcmRlci1sZWZ0OiB2YXIoLS1ib3JkZXIpIHZhcigtLWdyYXlfbHQpO1xufVxuXG4udGFibGUtLWJvcmRlci1jb2wgdGQ6Zmlyc3QtY2hpbGQsXG4udGFibGUtLWJvcmRlci1jb2wgdGg6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItbGVmdDogMFxufVxuIiwiLnRleHQtbGVmdCAgICAgICAgICAgeyB0ZXh0LWFsaWduOiBsZWZ0IH1cbi50ZXh0LXJpZ2h0ICAgICAgICAgIHsgdGV4dC1hbGlnbjogcmlnaHQgfVxuLnRleHQtY2VudGVyICAgICAgICAgeyB0ZXh0LWFsaWduOiBjZW50ZXIgfVxuLnRleHQtanVzdGlmeSAgICAgICAgeyB0ZXh0LWFsaWduOiBqdXN0aWZ5IH1cbi50ZXh0LW5vd3JhcCAgICAgICAgIHsgd2hpdGUtc3BhY2U6IG5vd3JhcCB9XG5cbi50ZXh0LWxvd2VyY2FzZSAgICAgIHsgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZSB9XG4udGV4dC11cHBlcmNhc2UgICAgICB7IHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UgfVxuLnRleHQtY2FwaXRhbGl6ZSAgICAgeyB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSB9XG5cbi51LWNsZWFyZml4OmJlZm9yZSxcbi51LWNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi51LWNsZWFyZml4OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi51LWJsb2NrIHsgZGlzcGxheTogYmxvY2sgfVxuLnUtaWJsb2NrIHsgZGlzcGxheTogaW5saW5lLWJsb2NrIH1cbi51LWlubGluZSB7IGRpc3BsYXk6IGlubGluZSB9XG5cbi5ib3JkZXJlZCB7XG5cdGJvcmRlcjogdmFyKC0tYm9yZGVyKSB2YXIoLS1ncmF5X2x0KTtcblx0Ym9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyX3JhZGl1cyk7XG59IiwiXG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4uZm9ybV9fY29udHJvbCxcbi5idG4ge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbWFyZ2luOiAwO1xufVxuXG4uYnRuOjotbW96LWZvY3VzLWlubmVyIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xufVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAgICAgICAgIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgY29sb3I6ICMzMzM7XG59XG5cbmEge1xuICBjb2xvcjogIzAwZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLyogY29tcG9uZW50cyAqL1xuXG4uaDEge1xuICBmb250LXNpemU6IDIuMDI3ZW07XG59XG5cbi5oMiB7XG4gIGZvbnQtc2l6ZTogMS42MDJlbTtcbn1cblxuLmgzIHtcbiAgZm9udC1zaXplOiAxLjQyNGVtO1xufVxuXG4uaDQge1xuICBmb250LXNpemU6IDEuMjY2ZW07XG59XG5cbi5oNSB7XG4gIGZvbnQtc2l6ZTogMS4yNjZlbTtcbn1cblxuLmg2IHtcbiAgZm9udC1zaXplOiAxLjEyNWVtO1xufVxuXG4uaDEsXG4uaDIsXG4uaDMsXG4uaDQsXG4uaDUsXG4uaDYge1xuICBtYXJnaW46IDFlbSAwO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4uaDQge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cblxuXG4ucCB7XG4gIG1hcmdpbjogMCAwIDFlbTtcbn1cblxuLnAtLWxlYWQge1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbiAgZm9udC1zaXplOiAxLjE1cmVtO1xufVxuXG4ucCA+IGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDFlbSBhdXRvIDJlbTtcbn1cblxuLnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5ibG9ja3F1b3RlIHtcbiAgbWFyZ2luOiAwIDAgMCAxZW07XG4gIHBhZGRpbmc6IDFlbSAyLjVlbTtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZDtcbn1cblxuLmJsb2NrcXVvdGUgLnA6bGFzdC1jaGlsZCxcbi5ibG9ja3F1b3RlIC5saXN0Omxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUQyMzI7XG4gIHBhZGRpbmc6IDAuMmVtO1xufVxuXG4ubGlzdCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgcGFkZGluZy1sZWZ0OiAyLjVlbTtcbn1cblxuLmxpc3QgLmxpc3Qge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubGlzdC0tdW5zdHlsZWQge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmhyIHtcbiAgYm9yZGVyOiBub25lO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIG1hcmdpbi10b3A6IDJlbTtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxcmVtO1xufVxuXG4uY29sLTEge1xuICB3aWR0aDogOC4zMzMzMyU7XG59XG5cbi5jb2wtMiB7XG4gIHdpZHRoOiAxNi42NjY2NyU7XG59XG5cbi5jb2wtMyB7XG4gIHdpZHRoOiAyNSU7XG59XG5cbi5jb2wtNCB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7XG59XG5cbi5jb2wtNSB7XG4gIHdpZHRoOiA0MS42NjY2NyU7XG59XG5cbi5jb2wtNiB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5jb2wtNyB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7XG59XG5cbi5jb2wtOCB7XG4gIHdpZHRoOiA2Ni42NjY2NyU7XG59XG5cbi5jb2wtOSB7XG4gIHdpZHRoOiA3NSU7XG59XG5cbi5jb2wtMTAge1xuICB3aWR0aDogODMuMzMzMzMlO1xufVxuXG4uY29sLTExIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTtcbn1cblxuLmNvbC0xMiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZF9fdW5pdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxuLmdyaWQtLXRhYmxlIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZC0tZmxleCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICAgIC1tcy1mbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5ncmlkLS10YWJsZSA+IC5ncmlkX191bml0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmdyaWQtLWZsZXggPiAuZ3JpZF9fdW5pdCB7XG4gIC13ZWJraXQtZmxleDogMTtcbiAgICAgIC1tcy1mbGV4OiAxO1xuICAgICAgICAgIGZsZXg6IDE7XG59XG5cbi5tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbn1cblxuLm1lbnUsXG4uc3VibWVudSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjIpO1xufVxuXG4ubWVudV9fdGl0bGUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAxLjQyNGVtO1xuICBwYWRkaW5nOiAwIDFlbTtcbiAgY29sb3I6ICMwQ0FCRTA7XG59XG5cbi5tZW51X19pdGVtIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBwYWRkaW5nOiAxZW07XG59XG5cbmEubWVudV9faXRlbTpob3ZlciB7XG4gIGNvbG9yOiAjMDBmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5oYXMtc3VibWVudTpob3ZlciAuc3VibWVudSxcbi5zdWJtZW51OmhvdmVyIHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLm1lbnUtLWhvcml6b250YWwgPiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmhhcy1zdWJtZW51IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGFzLXN1Ym1lbnUgPiAubWVudV9faXRlbSB7XG4gIHBhZGRpbmctcmlnaHQ6IDJlbTtcbn1cblxuLmhhcy1zdWJtZW51ID4gLm1lbnVfX2l0ZW06OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luOiAwLjM1ZW07XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIGJvcmRlci1yaWdodDogMC4zNWVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItbGVmdDogMC4zNWVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiAwLjVlbSBzb2xpZDtcbiAgcmlnaHQ6IDAuNWVtO1xuICB0b3A6IDFlbTtcbn1cblxuLnN1Ym1lbnUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHRyYW5zaXRpb246IHZpc2liaWxpdHkgNTAwbXMsIG9wYWNpdHkgMjUwbXMgMjUwbXM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTFlbTtcbiAgcmlnaHQ6IC0xZW07XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmFsZXJ0IHtcbiAgcGFkZGluZzogMC4yNWVtIDAuNWVtO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIG1hcmdpbjogMC41ZW0gMDtcbn1cblxuLmFsZXJ0LS1lcnJvciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDE2OCwgMTY2KTtcbiAgY29sb3I6IHJnYigxNjYsIDYxLCA1Nyk7XG59XG5cbi5hbGVydC0tc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMjgsIDIyOSwgMjIzKTtcbiAgY29sb3I6IHJnYigwLCAxNTIsIDE0Myk7XG59XG5cbi5hbGVydC0taW5mbyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTMsIDIzMywgMTUzKTtcbiAgY29sb3I6IHJnYigxODgsIDE1OCwgMzgpO1xufVxuXG4uYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgwLDAsMCwwLjEpO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYnRuOmZvY3VzLFxuLmJ0bjpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLDAsMCwwLjI1KTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCA1MHB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjI1KTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uYnRuOmFjdGl2ZSB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgNTBweCAwIHJnYmEoMCwwLDAsMC4xKTtcbn1cblxuLmJ0bi0tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwQ0FCRTA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0tc2Vjb25kYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwQ0FCRTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS10ZXJ0aWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDQUJFMDA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnB1bGwtbGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG4ucHVsbC1yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLm1lZGlhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5tZWRpYV9fYm9keSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLmZvcm1fX3JhZGlvID4gaW5wdXQsXG4uZm9ybV9fY2hlY2tib3ggPiBpbnB1dCB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBtYXJnaW46IDAgMC41ZW07XG59XG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMCAyZW0gMmVtO1xuICBib3JkZXI6IDJweCBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuXG5sZWdlbmQge1xuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtaW4td2lkdGg6IDZlbTtcbiAgbWFyZ2luOiAwLjI1ZW0gMDtcbn1cblxuLmZvcm1fX3JhZGlvLFxuLmZvcm1fX2NoZWNrYm94IHtcbiAgbWFyZ2luOiAuNWVtIDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZm9ybV9fY29udHJvbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5mb3JtX19jb250cm9sOmhvdmVyLFxuLmZvcm1fX2NvbnRyb2w6Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICMwQ0FCRTA7XG4gIG91dGxpbmU6IDA7XG59XG5cbi50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbi50YWJsZSB0ZCxcbi50YWJsZSB0aCB7XG4gIHBhZGRpbmc6IDAuNWVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtaW4td2lkdGg6IDExMHB4O1xufVxuXG4udGFibGUgdGhlYWQgdGgge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI0JCQjtcbn1cblxuLnRhYmxlIHRmb290IHRkIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNCQkI7XG59XG5cbi50YWJsZS0temVicmEtcm93IHRib2R5IHRyOm50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUU7XG59XG5cbi50YWJsZS0temVicmEtY29sIHRoOm50aC1jaGlsZChldmVuKSxcbi50YWJsZS0temVicmEtY29sIHRkOm50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUU7XG59XG5cbi50YWJsZS0tYm9yZGVyLWFsbCB0ZCxcbi50YWJsZS0tYm9yZGVyLWFsbCB0aCB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNCQkI7XG59XG5cbi50YWJsZS0tYm9yZGVyLXJvdyB0ZCB7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCAjQkJCO1xufVxuXG4udGFibGUtLWJvcmRlci1jb2wgdGQsXG4udGFibGUtLWJvcmRlci1jb2wgdGgge1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNCQkI7XG59XG5cbi50YWJsZS0tYm9yZGVyLWNvbCB0ZDpmaXJzdC1jaGlsZCxcbi50YWJsZS0tYm9yZGVyLWNvbCB0aDpmaXJzdC1jaGlsZCB7XG4gIGJvcmRlci1sZWZ0OiAwO1xufVxuXG4vKiB1dGlsaXRpZXMgKi9cblxuLnRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi50ZXh0LXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnRleHQtanVzdGlmeSB7XG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG5cbi50ZXh0LW5vd3JhcCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi50ZXh0LWxvd2VyY2FzZSB7XG4gIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG59XG5cbi50ZXh0LXVwcGVyY2FzZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi50ZXh0LWNhcGl0YWxpemUge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLnUtY2xlYXJmaXg6YmVmb3JlLFxuLnUtY2xlYXJmaXg6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cblxuLnUtY2xlYXJmaXg6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cblxuLnUtYmxvY2sge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnUtaWJsb2NrIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4udS1pbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5ib3JkZXJlZCB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNCQkI7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLyogYXR0cmlidXRlIGhlbHBlcnMgKi9cblxuW2Rpc2FibGVkXSB7XG4gIGJhY2tncm91bmQ6ICNFRUU7XG4gIGNvbG9yOiAjQTlBOUE5O1xuICBib3JkZXItY29sb3I6ICNFRUU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIHRleHQtc2hhZG93OiBub25lO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OWlZWE5sTDE5eVpYTmxkQzVqYzNNaUxDSmlaVzF2TG1OemN5SXNJaTlWYzJWeWN5OXZZbVZzYVhOckwyZHBkR2gxWWk5aVpXMXZMM055WXk5aVpXMXZMbU56Y3lJc0lpOVZjMlZ5Y3k5dlltVnNhWE5yTDJkcGRHaDFZaTlpWlcxdkwzTnlZeTlqYjIxd2IyNWxiblJ6TDE5MGVYQmxMbU56Y3lJc0lpOVZjMlZ5Y3k5dlltVnNhWE5yTDJkcGRHaDFZaTlpWlcxdkwzTnlZeTlqYjIxd2IyNWxiblJ6TDE5bmNtbGtMbU56Y3lJc0lpOVZjMlZ5Y3k5dlltVnNhWE5yTDJkcGRHaDFZaTlpWlcxdkwzTnlZeTlqYjIxd2IyNWxiblJ6TDE5dFpXNTFMbU56Y3lJc0lpOVZjMlZ5Y3k5dlltVnNhWE5yTDJkcGRHaDFZaTlpWlcxdkwzTnlZeTlqYjIxd2IyNWxiblJ6TDE5aGJHVnlkSE11WTNOeklpd2lMMVZ6WlhKekwyOWlaV3hwYzJzdloybDBhSFZpTDJKbGJXOHZjM0pqTDJOdmJYQnZibVZ1ZEhNdlgySjFkSFJ2Ym5NdVkzTnpJaXdpTDFWelpYSnpMMjlpWld4cGMyc3ZaMmwwYUhWaUwySmxiVzh2YzNKakwyTnZiWEJ2Ym1WdWRITXZYMjFsWkdsaExtTnpjeUlzSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OWpiMjF3YjI1bGJuUnpMMTltYjNKdGN5NWpjM01pTENJdlZYTmxjbk12YjJKbGJHbHpheTluYVhSb2RXSXZZbVZ0Ynk5emNtTXZZMjl0Y0c5dVpXNTBjeTlmZEdGaWJHVnpMbU56Y3lJc0lpOVZjMlZ5Y3k5dlltVnNhWE5yTDJkcGRHaDFZaTlpWlcxdkwzTnlZeTkxZEdsc2N5OWZkWFJwYkhNdVkzTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdPMEZCUVVFN1JVRkRSU3gzUWtGQlFUdEZRMGRFT3p0QlJFRkVPenRGUVVWRkxHZENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3h6UWtGQlFUdEZRVU5CTEhGQ1FVRkJPMFZCUTBFc2MwSkJRVUU3UlVGRFFTeFhRVUZCTzBWRFIwUTdPMEZFUVVRN1JVRkRReXhaUVVGQk8wVkJRMEVzVjBGQlFUdEZRMGRCT3p0QlEyaENSRHRGUVVORkxIbENRVUZCTzBWQlEwRXNaME5CUVVFN1RVRkJRU3cwUWtGQlFUdFZRVUZCTEhkQ1FVRkJPMFZFYlVKRU96dEJRMnBDUkR0RlFVTkZMRmRCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1lVRkJRVHRGUkc5Q1JEczdRVU5xUWtRN1JVRkRSU3hoUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUkc5Q1JEczdRVU5xUWtRN1JVRkRSU3cwUWtGQlFUdEZSRzlDUkRzN1FVTnFRa1FzYVVKQlFVRTdPMEZEZUVKQk8wVkJRVTBzYjBKQlFVRTdSVVlyUTB3N08wRkZPVU5FTzBWQlFVMHNiMEpCUVVFN1JVWnJSRXc3TzBGRmFrUkVPMFZCUVUwc2IwSkJRVUU3UlVaeFJFdzdPMEZGY0VSRU8wVkJRVTBzYjBKQlFVRTdSVVozUkV3N08wRkZka1JFTzBWQlFVMHNiMEpCUVVFN1JVWXlSRXc3TzBGRk1VUkVPMFZCUVUwc2IwSkJRVUU3UlVZNFJFdzdPMEZGTlVSRU96czdPenM3UlVGRFJTeGxRVUZCTzBWQlEwRXNjVUpCUVVFN1JVWnZSVVE3TzBGRmFrVkVPMFZCUVVzc2IwSkJRVUU3UlVaeFJVbzdPenM3UVVWcVJVUTdSVUZCU3l4cFFrRkJRVHRGUm5WRlNqczdRVVZ5UlVRN1JVRkRSU3h6UWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZHZDBWRU96dEJSWEpGUVR0RlFVTkRMR2RDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVVozUlVRN08wRkZja1ZFTzBWQlEwVXNaMEpCUVVFN1JVRkRRU3h4UWtGQlFUdEZSbmRGUkRzN1FVVnlSVVE3UlVGRFJTeHRRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzZDBKQlFVRTdSVVozUlVRN08wRkZja1ZFT3p0RlFVVkZMR3RDUVVGQk8wVkdkMFZFT3p0QlJYSkZSRHRGUVVORkxESkNRVUZCTzBWQlEwRXNaMEpCUVVFN1JVWjNSVVE3TzBGRmNrVkVPMFZCUTBVc1pVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNjVUpCUVVFN1JVWjNSVVE3TzBGRmNrVkVPMFZCUTBVc2EwSkJRVUU3UlVaM1JVUTdPMEZGY2tWRU8wVkJRMFVzYVVKQlFVRTdSVUZEUVN4clFrRkJRVHRGUm5kRlJEczdRVVZ5UlVRN1JVRkRSU3hqUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVaM1JVUTdPMEZITlVsRU8wVkJRMFVzYlVKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHbENRVUZCTzBWSUswbEVPenRCUnpWSlJEdEZRVU5GTEdsQ1FVRkJPMFZJSzBsRU96dEJSelZKUkR0RlFVTkZMR3RDUVVGQk8wVklLMGxFT3p0QlJ6VkpSRHRGUVVORkxGbEJRVUU3UlVnclNVUTdPMEZITlVsRU8wVkJRMFVzYTBKQlFVRTdSVWdyU1VRN08wRkhOVWxFTzBWQlEwVXNhMEpCUVVFN1JVZ3JTVVE3TzBGSE5VbEVPMFZCUTBVc1dVRkJRVHRGU0N0SlJEczdRVWMxU1VRN1JVRkRSU3hyUWtGQlFUdEZTQ3RKUkRzN1FVYzFTVVE3UlVGRFJTeHJRa0ZCUVR0RlNDdEpSRHM3UVVjMVNVUTdSVUZEUlN4WlFVRkJPMFZJSzBsRU96dEJSelZKUkR0RlFVTkZMR3RDUVVGQk8wVklLMGxFT3p0QlJ6VkpSRHRGUVVORkxHdENRVUZCTzBWSUswbEVPenRCUnpWSlJEdEZRVU5GTEdGQlFVRTdSVWdyU1VRN08wRkhOVWxFTzBWQlEwVXNZVUZCUVR0RlFVTkJMR2RDUVVGQk8wVklLMGxFT3p0QlJ6VkpSRHRGUVVORkxHZENRVUZCTzBWQlEwRXNZVUZCUVR0RlNDdEpSRHM3UVVjMVNVUTdSVUZEUlN4MVFrRkJRVHRGUVVGQkxITkNRVUZCTzBWQlFVRXNaVUZCUVR0RlFVTkJMRFpDUVVGQk8wMUJRVUVzZVVKQlFVRTdWVUZCUVN4eFFrRkJRVHRGU0N0SlJEczdRVWMxU1VRN1JVRkRSU3h4UWtGQlFUdEZRVU5CTEhGQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVnclNVUTdPMEZITlVsRU8wVkJRMFVzYVVKQlFVRTdUVUZCUVN4aFFVRkJPMVZCUVVFc1UwRkJRVHRGU0N0SlJEczdRVWt6VGtRN1JVRkRSU3gzUWtGQlFUdEZTamhPUkRzN1FVa3pUa1E3TzBWQlJVVXNkVUpCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEhWRFFVRkJPMFZLT0U1RU96dEJTVE5PUkR0RlFVTkZMRzFDUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHZENRVUZCTzBWS09FNUVPenRCU1ROT1JEdEZRVU5GTEdkQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGpRVUZCTzBWS09FNUVPenRCU1ROT1JEdEZRVU5GTEdGQlFVRTdSVUZEUVN4MVFrRkJRVHRGU2poT1JEczdRVWt6VGtRN08wVkJSVVVzY1VKQlFVRTdSVUZEUVN4WlFVRkJPMFZLT0U1RU96dEJTVE5PUkR0RlFVTkZMSFZDUVVGQk8wVkJRMEVzZDBKQlFVRTdSVW80VGtRN08wRkpNMDVFTzBWQlEwVXNiMEpCUVVFN1JVbzRUa1E3TzBGSk0wNUVPMFZCUTBVc2IwSkJRVUU3UlVvNFRrUTdPMEZKTTA1RU8wVkJRMFVzWVVGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMSGREUVVGQk8wVkJRMEVzZFVOQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeFZRVUZCTzBWS09FNUVPenRCU1ROT1JEdEZRVU5GTEhkQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMRzFFUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNXVUZCUVR0RlNqaE9SRHM3UVV0eVUwUTdSVUZEUlN4MVFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNhVUpCUVVFN1JVeDNVMFE3TzBGTGNsTkVPMFZCUTBVc2MwTkJRVUU3UlVGRFFTeDVRa0ZCUVR0RlRIZFRSRHM3UVV0eVUwUTdSVUZEUlN4elEwRkJRVHRGUVVOQkxIbENRVUZCTzBWTWQxTkVPenRCUzNKVFJEdEZRVU5GTEhORFFVRkJPMFZCUTBFc01FSkJRVUU3UlV4M1UwUTdPMEZOTVZSRU8wVkJRMFVzZDBKQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxIVkNRVUZCTzBWQlEwRXNiVU5CUVVFN1JVRkRRU3h2UWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc2FVSkJRVUU3UlU0MlZFUTdPMEZOTVZSRU96dEZRVVZGTEZsQlFVRTdSVUZEUVN4blEwRkJRVHRGUVVOQkxHMUVRVUZCTzBWQlEwRXNkVUpCUVVFN1JVNDJWRVE3TzBGTk1WUkVPMFZCUTBVc05FTkJRVUU3UlU0MlZFUTdPMEZOTVZSRU8wVkJRMFVzTWtKQlFVRTdSVUZEUVN4alFVRkJPMFZPTmxSRU96dEJUVEZVUkR0RlFVTkZMREpDUVVGQk8wVkJRMEVzWTBGQlFUdEZUalpVUkRzN1FVMHhWRVE3UlVGRFJTd3lRa0ZCUVR0RlFVTkJMR05CUVVFN1JVNDJWRVE3TzBGUEwxWkVPMFZCUVdFc1lVRkJRVHRGVUcxWFdqczdRVTlzVjBRN1JVRkJZeXhqUVVGQk8wVlFjMWRpT3p0QlQzQlhSRHRGUVVORExHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JWQjFWMEU3TzBGUGNGZEVPMFZCUTBNc2EwSkJRVUU3UlVGRFFTeGpRVUZCTzBWUWRWZEJPenRCVVdwWVJEczdSVUZGUlN4cFFrRkJRVHRGUVVOQkxIRkNRVUZCTzBWQlEwRXNNRUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZVbTlZUkRzN1FWRnFXRVE3UlVGRFJTeHZRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYjBKQlFVRTdSVkp2V0VRN08wRlJhRmhFTzBWQlEwVXNZMEZCUVR0RlFVTkJMRzFDUVVGQk8wVlNiVmhFT3p0QlVXaFlSRHRGUVVORkxHZENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEZVbTFZUkRzN1FWRm9XRVE3TzBWQlJVVXNaMEpCUVVFN1JVRkRRU3huUWtGQlFUdEZVbTFZUkRzN1FWRm9XRVE3UlVGRFJTeG5Ra0ZCUVR0RlFVTkJMRzFEUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWU2JWaEVPenRCVVdoWVJEczdSVUZGUlN4MVFrRkJRVHRGUVVOQkxGbEJRVUU3UlZKdFdFUTdPMEZUT1ZwRU8wVkJRMFVzTWtKQlFVRTdSVlJwWVVRN08wRlRPVnBFT3p0RlFVVkZMR2RDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4clFrRkJRVHRGVkdsaFJEczdRVk01V2tRN1JVRkRSU3gzUWtGQlFUdEZRVU5CTEN0Q1FVRkJPMFZVYVdGRU96dEJVemxhUkR0RlFVTkZMSEZDUVVGQk8wVkJRMEVzTkVKQlFVRTdSVlJwWVVRN08wRlRPVnBFTzBWQlEwVXNkMEpCUVVFN1JWUnBZVVE3TzBGVE4xcEVPenRGUVVWRkxIZENRVUZCTzBWVVoyRkVPenRCVXpkYVJEczdSVUZEUlN4M1FrRkJRVHRGVkdsaFJEczdRVk01V2tRN1JVRkRTU3cwUWtGQlFUdEZWR2xoU0RzN1FWTTVXa1E3TzBWQlJVVXNOa0pCUVVFN1JWUnBZVVE3TzBGVE9WcEVPenRGUVVWRkxHZENRVUZCTzBWVWFXRkVPenRCUXpkaFJDeG5Ra0ZCUVRzN1FWTnNRMEU3UlVGQmRVSXNhMEpCUVVFN1JWWnhaSFJDT3p0QlZYQmtSRHRGUVVGMVFpeHRRa0ZCUVR0RlZuZGtkRUk3TzBGVmRtUkVPMFZCUVhWQ0xHOUNRVUZCTzBWV01tUjBRanM3UVZVeFpFUTdSVUZCZFVJc2NVSkJRVUU3UlZZNFpIUkNPenRCVlRka1JEdEZRVUYxUWl4eFFrRkJRVHRGVm1sbGRFSTdPMEZWTDJSRU8wVkJRWFZDTERKQ1FVRkJPMFZXYldWMFFqczdRVlZzWlVRN1JVRkJkVUlzTWtKQlFVRTdSVlp6WlhSQ096dEJWWEpsUkR0RlFVRjFRaXcwUWtGQlFUdEZWbmxsZEVJN08wRlZkbVZFT3p0RlFVVkZMR0ZCUVVFN1JVRkRRU3huUWtGQlFUdEZWakJsUkRzN1FWVjJaVVE3UlVGRFJTeGhRVUZCTzBWV01HVkVPenRCVlhabFJEdEZRVUZYTEdkQ1FVRkJPMFZXTW1WV096dEJWVEZsUkR0RlFVRlpMSFZDUVVGQk8wVldPR1ZZT3p0QlZUZGxSRHRGUVVGWkxHbENRVUZCTzBWV2FXWllPenRCVlM5bFJEdEZRVU5ETEhkQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UlZaclprRTdPMEZEZG1WRUxIZENRVUZCT3p0QlFVTkJPMFZCUTBVc2EwSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNjMEpCUVVFN1JVUXlaVVE3TzBGRGVHVkVPMFZCUVZVc1pVRkJRVHRGUkRSbFZDSXNJbVpwYkdVaU9pSmlaVzF2TG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaW9nZTF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dWZWeHVYRzR1Wm05eWJWOWZZMjl1ZEhKdmJDeGNiaTVpZEc0Z2UxeHVJQ0JqYjJ4dmNqb2dhVzVvWlhKcGREdGNiaUFnWm05dWRDMXphWHBsT2lBeFpXMDdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQnBibWhsY21sME8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ2JtOXliV0ZzTzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVmVnh1WEc0dVluUnVPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlJSHRjYmx4MGNHRmtaR2x1WnpvZ01EdGNibHgwWW05eVpHVnlPaUF3TzF4dWZWeHVJaXdpWEc1Y2Jpb2dlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1ZlZ4dVhHNHVabTl5YlY5ZlkyOXVkSEp2YkN4Y2JpNWlkRzRnZTF4dUlDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JpQWdabTl1ZEMxemFYcGxPaUF4WlcwN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCcGJtaGxjbWwwTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nYm05eWJXRnNPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVYRzR1WW5SdU9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUlIdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1ZlZ4dVhHNW9kRzFzSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUhOaGJuTXRjMlZ5YVdZN1hHNGdJSFJsZUhRdGMybDZaUzFoWkdwMWMzUTZJREV3TUNVN1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVORHRjYmlBZ1kyOXNiM0k2SUNNek16TTdYRzU5WEc1Y2JtRWdlMXh1SUNCamIyeHZjam9nSXpBd1pqdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1SUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzU5WEc1Y2JtRTZhRzkyWlhJZ2UxeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaVHRjYm4xY2JseHVMeW9nWTI5dGNHOXVaVzUwY3lBcUwxeHVYRzR1YURFZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURJdU1ESTNaVzA3WEc1OVhHNWNiaTVvTWlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVM0Mk1ESmxiVHRjYm4xY2JseHVMbWd6SUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpReU5HVnRPMXh1ZlZ4dVhHNHVhRFFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREV1TWpZMlpXMDdYRzU5WEc1Y2JpNW9OU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNUzR5TmpabGJUdGNibjFjYmx4dUxtZzJJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhMakV5TldWdE8xeHVmVnh1WEc0dWFERXNYRzR1YURJc1hHNHVhRE1zWEc0dWFEUXNYRzR1YURVc1hHNHVhRFlnZTF4dUlDQnRZWEpuYVc0NklERmxiU0F3TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh1ZlZ4dVhHNHVhRFFnZTF4dUlDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTTdYRzU5WEc1Y2JseHVYRzR1Y0NCN1hHNGdJRzFoY21kcGJqb2dNQ0F3SURGbGJUdGNibjFjYmx4dUxuQXRMV3hsWVdRZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhMalZsYlR0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpFMWNtVnRPMXh1ZlZ4dVhHNHVjQ0ErSUdsdFp5QjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCdFlYSm5hVzQ2SURGbGJTQmhkWFJ2SURKbGJUdGNibjFjYmx4dUxuTnRZV3hzSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUE0TUNVN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lCdWIzSnRZV3c3WEc1OVhHNWNiaTVpYkc5amEzRjFiM1JsSUh0Y2JpQWdiV0Z5WjJsdU9pQXdJREFnTUNBeFpXMDdYRzRnSUhCaFpHUnBibWM2SURGbGJTQXlMalZsYlR0Y2JpQWdZbTl5WkdWeUxXeGxablE2SURKd2VDQnpiMnhwWkR0Y2JuMWNibHh1TG1Kc2IyTnJjWFZ2ZEdVZ0xuQTZiR0Z6ZEMxamFHbHNaQ3hjYmk1aWJHOWphM0YxYjNSbElDNXNhWE4wT214aGMzUXRZMmhwYkdRZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdPMXh1ZlZ4dVhHNHViV0Z5YXlCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05HUVVReU16STdYRzRnSUhCaFpHUnBibWM2SURBdU1tVnRPMXh1ZlZ4dVhHNHViR2x6ZENCN1hHNGdJRzFoY21kcGJpMTBiM0E2SURBN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERmxiVHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF5TGpWbGJUdGNibjFjYmx4dUxteHBjM1FnTG14cGMzUWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF3TzF4dWZWeHVYRzR1YkdsemRDMHRkVzV6ZEhsc1pXUWdlMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJREE3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNTlYRzVjYm1oeUlIdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0JvWldsbmFIUTZJREp3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nWW14aFkyczdYRzRnSUcxaGNtZHBiaTEwYjNBNklESmxiVHRjYm4xY2JseHVMbU52Ym5SaGFXNWxjaUI3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVEF3TUhCNE8xeHVJQ0J0WVhKbmFXNDZJREFnWVhWMGJ6dGNiaUFnY0dGa1pHbHVaem9nTUNBeGNtVnRPMXh1ZlZ4dVhHNHVZMjlzTFRFZ2UxeHVJQ0IzYVdSMGFEb2dPQzR6TXpNek15VTdYRzU5WEc1Y2JpNWpiMnd0TWlCN1hHNGdJSGRwWkhSb09pQXhOaTQyTmpZMk55VTdYRzU5WEc1Y2JpNWpiMnd0TXlCN1hHNGdJSGRwWkhSb09pQXlOU1U3WEc1OVhHNWNiaTVqYjJ3dE5DQjdYRzRnSUhkcFpIUm9PaUF6TXk0ek16TXpNeVU3WEc1OVhHNWNiaTVqYjJ3dE5TQjdYRzRnSUhkcFpIUm9PaUEwTVM0Mk5qWTJOeVU3WEc1OVhHNWNiaTVqYjJ3dE5pQjdYRzRnSUhkcFpIUm9PaUExTUNVN1hHNTlYRzVjYmk1amIyd3ROeUI3WEc0Z0lIZHBaSFJvT2lBMU9DNHpNek16TXlVN1hHNTlYRzVjYmk1amIyd3RPQ0I3WEc0Z0lIZHBaSFJvT2lBMk5pNDJOalkyTnlVN1hHNTlYRzVjYmk1amIyd3RPU0I3WEc0Z0lIZHBaSFJvT2lBM05TVTdYRzU5WEc1Y2JpNWpiMnd0TVRBZ2UxeHVJQ0IzYVdSMGFEb2dPRE11TXpNek16TWxPMXh1ZlZ4dVhHNHVZMjlzTFRFeElIdGNiaUFnZDJsa2RHZzZJRGt4TGpZMk5qWTNKVHRjYm4xY2JseHVMbU52YkMweE1pQjdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVmVnh1WEc0dVozSnBaRjlmZFc1cGRDQjdYRzRnSUdac2IyRjBPaUJzWldaME8xeHVJQ0J3WVdSa2FXNW5PaUF3TGpWbGJUdGNibjFjYmx4dUxtZHlhV1F0TFhSaFlteGxJSHRjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1U3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1ZlZ4dVhHNHVaM0pwWkMwdFpteGxlQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0Wm14dmR6b2djbTkzSUhkeVlYQTdYRzU5WEc1Y2JpNW5jbWxrTFMxMFlXSnNaU0ErSUM1bmNtbGtYMTkxYm1sMElIdGNiaUFnWkdsemNHeGhlVG9nZEdGaWJHVXRZMlZzYkR0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklIUnZjRHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JuMWNibHh1TG1keWFXUXRMV1pzWlhnZ1BpQXVaM0pwWkY5ZmRXNXBkQ0I3WEc0Z0lHWnNaWGc2SURFN1hHNTlYRzVjYmk1dFpXNTFJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyVmxaVHRjYm4xY2JseHVMbTFsYm5Vc1hHNHVjM1ZpYldWdWRTQjdYRzRnSUd4cGMzUXRjM1I1YkdVdGRIbHdaVG9nYm05dVpUdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCaWIzZ3RjMmhoWkc5M09pQXdJREp3ZUNBMGNIZ2djbWRpWVNnd0xEQXNNQ3d3TGpJcE8xeHVmVnh1WEc0dWJXVnVkVjlmZEdsMGJHVWdlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpReU5HVnRPMXh1SUNCd1lXUmthVzVuT2lBd0lERmxiVHRjYmlBZ1kyOXNiM0k2SUNNd1EwRkNSVEE3WEc1OVhHNWNiaTV0Wlc1MVgxOXBkR1Z0SUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJR052Ykc5eU9pQnBibWhsY21sME8xeHVJQ0J3WVdSa2FXNW5PaUF4WlcwN1hHNTlYRzVjYm1FdWJXVnVkVjlmYVhSbGJUcG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpNREJtTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNWNiaTVvWVhNdGMzVmliV1Z1ZFRwb2IzWmxjaUF1YzNWaWJXVnVkU3hjYmk1emRXSnRaVzUxT21odmRtVnlJSHRjYmlBZ2RtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNiaUFnYjNCaFkybDBlVG9nTVR0Y2JuMWNibHh1TG0xbGJuVXRMV2h2Y21sNmIyNTBZV3dnUGlCc2FTQjdYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pUdGNibjFjYmx4dUxtaGhjeTF6ZFdKdFpXNTFJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVmVnh1WEc0dWFHRnpMWE4xWW0xbGJuVWdQaUF1YldWdWRWOWZhWFJsYlNCN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklESmxiVHRjYm4xY2JseHVMbWhoY3kxemRXSnRaVzUxSUQ0Z0xtMWxiblZmWDJsMFpXMDZPbUZtZEdWeUlIdGNiaUFnWTI5dWRHVnVkRG9nSnljN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2JXRnlaMmx1T2lBd0xqTTFaVzA3WEc0Z0lHaGxhV2RvZERvZ01EdGNiaUFnZDJsa2RHZzZJREE3WEc0Z0lHSnZjbVJsY2kxeWFXZG9kRG9nTUM0ek5XVnRJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCaWIzSmtaWEl0YkdWbWREb2dNQzR6TldWdElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JpYjNKa1pYSXRkRzl3T2lBd0xqVmxiU0J6YjJ4cFpEdGNiaUFnY21sbmFIUTZJREF1TldWdE8xeHVJQ0IwYjNBNklERmxiVHRjYm4xY2JseHVMbk4xWW0xbGJuVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalpXVmxPMXh1SUNCdGFXNHRkMmxrZEdnNklERTFNSEI0TzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBeWNIZzdYRzRnSUhSeVlXNXphWFJwYjI0NklIWnBjMmxpYVd4cGRIa2dOVEF3YlhNc0lHOXdZV05wZEhrZ01qVXdiWE1nTWpVd2JYTTdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdiR1ZtZERvZ0xURmxiVHRjYmlBZ2NtbG5hSFE2SUMweFpXMDdYRzRnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmp0Y2JpQWdiM0JoWTJsMGVUb2dNRHRjYm4xY2JseHVMbUZzWlhKMElIdGNiaUFnY0dGa1pHbHVaem9nTUM0eU5XVnRJREF1TldWdE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXljSGc3WEc0Z0lHMWhjbWRwYmpvZ01DNDFaVzBnTUR0Y2JuMWNibHh1TG1Gc1pYSjBMUzFsY25KdmNpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKbllpZ3lNemdzSURFMk9Dd2dNVFkyS1R0Y2JpQWdZMjlzYjNJNklISm5ZaWd4TmpZc0lEWXhMQ0ExTnlrN1hHNTlYRzVjYmk1aGJHVnlkQzB0YzNWalkyVnpjeUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZaWd4TWpnc0lESXlPU3dnTWpJektUdGNiaUFnWTI5c2IzSTZJSEpuWWlnd0xDQXhOVElzSURFME15azdYRzU5WEc1Y2JpNWhiR1Z5ZEMwdGFXNW1ieUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZaWd5TlRNc0lESXpNeXdnTVRVektUdGNiaUFnWTI5c2IzSTZJSEpuWWlneE9EZ3NJREUxT0N3Z016Z3BPMXh1ZlZ4dVhHNHVZblJ1SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2daM0poZVR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nZEhKaGJuTndZWEpsYm5RN1hHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdZbTl5WkdWeU9pQXljSGdnYzI5c2FXUWdjbWRpWVNnd0xEQXNNQ3d3TGpFcE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXljSGc3WEc0Z0lIQmhaR1JwYm1jNklEQXVOV1Z0SURGbGJUdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1ZlZ4dVhHNHVZblJ1T21adlkzVnpMRnh1TG1KMGJqcG9iM1psY2lCN1hHNGdJRzkxZEd4cGJtVTZJREE3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nY21kaVlTZ3dMREFzTUN3d0xqSTFLVHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dhVzV6WlhRZ01DQTFNSEI0SURBZ2NtZGlZU2d5TlRVc01qVTFMREkxTlN3d0xqSTFLVHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1ZlZ4dVhHNHVZblJ1T21GamRHbDJaU0I3WEc0Z0lHSnZlQzF6YUdGa2IzYzZJR2x1YzJWMElEQWdOVEJ3ZUNBd0lISm5ZbUVvTUN3d0xEQXNNQzR4S1R0Y2JuMWNibHh1TG1KMGJpMHRjSEpwYldGeWVTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNNd1EwRkNSVEE3WEc0Z0lHTnZiRzl5T2lCM2FHbDBaVHRjYm4xY2JseHVMbUowYmkwdGMyVmpiMjVrWVhKNUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpBd1EwRkNSVHRjYmlBZ1kyOXNiM0k2SUhkb2FYUmxPMXh1ZlZ4dVhHNHVZblJ1TFMxMFpYSjBhV0Z5ZVNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05EUVVKRk1EQTdYRzRnSUdOdmJHOXlPaUIzYUdsMFpUdGNibjFjYmx4dUxuQjFiR3d0YkdWbWRDQjdYRzRnSUdac2IyRjBPaUJzWldaME8xeHVmVnh1WEc0dWNIVnNiQzF5YVdkb2RDQjdYRzRnSUdac2IyRjBPaUJ5YVdkb2REdGNibjFjYmx4dUxtMWxaR2xoSUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzU5WEc1Y2JpNXRaV1JwWVY5ZlltOWtlU0I3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJSEJoWkdScGJtYzZJREZsYlR0Y2JuMWNibHh1TG1admNtMWZYM0poWkdsdklENGdhVzV3ZFhRc1hHNHVabTl5YlY5ZlkyaGxZMnRpYjNnZ1BpQnBibkIxZENCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklHNXZjbTFoYkR0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHVJQ0J0WVhKbmFXNDZJREFnTUM0MVpXMDdYRzU5WEc1Y2JtWnBaV3hrYzJWMElIdGNiaUFnY0dGa1pHbHVaem9nTUNBeVpXMGdNbVZ0TzF4dUlDQmliM0prWlhJNklESndlQ0J6YjJ4cFpEdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNbkI0TzF4dWZWeHVYRzVzWldkbGJtUWdlMXh1SUNCd1lXUmthVzVuT2lBeFpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dWZWeHVYRzVzWVdKbGJDQjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCdGFXNHRkMmxrZEdnNklEWmxiVHRjYmlBZ2JXRnlaMmx1T2lBd0xqSTFaVzBnTUR0Y2JuMWNibHh1TG1admNtMWZYM0poWkdsdkxGeHVMbVp2Y20xZlgyTm9aV05yWW05NElIdGNiaUFnYldGeVoybHVPaUF1TldWdElEQTdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVhHNHVabTl5YlY5ZlkyOXVkSEp2YkNCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JpYjNKa1pYSTZJREp3ZUNCemIyeHBaQ0J5WjJKaEtEQXNNQ3d3TERBdU1TazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNQzQxWlcwZ01XVnRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4WlcwN1hHNTlYRzVjYmk1bWIzSnRYMTlqYjI1MGNtOXNPbWh2ZG1WeUxGeHVMbVp2Y20xZlgyTnZiblJ5YjJ3NlptOWpkWE1nZTF4dUlDQmliM0prWlhJdFkyOXNiM0k2SUNNd1EwRkNSVEE3WEc0Z0lHOTFkR3hwYm1VNklEQTdYRzU5WEc1Y2JpNTBZV0pzWlNCN1hHNGdJR0p2Y21SbGNpMWpiMnhzWVhCelpUb2dZMjlzYkdGd2MyVTdYRzU5WEc1Y2JpNTBZV0pzWlNCMFpDeGNiaTUwWVdKc1pTQjBhQ0I3WEc0Z0lIQmhaR1JwYm1jNklEQXVOV1Z0TzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHVJQ0J0YVc0dGQybGtkR2c2SURFeE1IQjRPMXh1ZlZ4dVhHNHVkR0ZpYkdVZ2RHaGxZV1FnZEdnZ2UxeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbTkwZEc5dE8xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXljSGdnYzI5c2FXUWdJMEpDUWp0Y2JuMWNibHh1TG5SaFlteGxJSFJtYjI5MElIUmtJSHRjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUhSdmNEdGNiaUFnWW05eVpHVnlMWFJ2Y0RvZ01uQjRJSE52Ykdsa0lDTkNRa0k3WEc1OVhHNWNiaTUwWVdKc1pTMHRlbVZpY21FdGNtOTNJSFJpYjJSNUlIUnlPbTUwYUMxamFHbHNaQ2hsZG1WdUtTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNORlJVVTdYRzU5WEc1Y2JpNTBZV0pzWlMwdGVtVmljbUV0WTI5c0lIUm9PbTUwYUMxamFHbHNaQ2hsZG1WdUtTeGNiaTUwWVdKc1pTMHRlbVZpY21FdFkyOXNJSFJrT201MGFDMWphR2xzWkNobGRtVnVLU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTkZSVVU3WEc1OVhHNWNiaTUwWVdKc1pTMHRZbTl5WkdWeUxXRnNiQ0IwWkN4Y2JpNTBZV0pzWlMwdFltOXlaR1Z5TFdGc2JDQjBhQ0I3WEc0Z0lHSnZjbVJsY2pvZ01uQjRJSE52Ykdsa0lDTkNRa0k3WEc1OVhHNWNiaTUwWVdKc1pTMHRZbTl5WkdWeUxYSnZkeUIwWkNCN1hHNGdJR0p2Y21SbGNpMTBiM0E2SURKd2VDQnpiMnhwWkNBalFrSkNPMXh1ZlZ4dVhHNHVkR0ZpYkdVdExXSnZjbVJsY2kxamIyd2dkR1FzWEc0dWRHRmliR1V0TFdKdmNtUmxjaTFqYjJ3Z2RHZ2dlMXh1SUNCaWIzSmtaWEl0YkdWbWREb2dNbkI0SUhOdmJHbGtJQ05DUWtJN1hHNTlYRzVjYmk1MFlXSnNaUzB0WW05eVpHVnlMV052YkNCMFpEcG1hWEp6ZEMxamFHbHNaQ3hjYmk1MFlXSnNaUzB0WW05eVpHVnlMV052YkNCMGFEcG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lHSnZjbVJsY2kxc1pXWjBPaUF3TzF4dWZWeHVYRzR2S2lCMWRHbHNhWFJwWlhNZ0tpOWNibHh1TG5SbGVIUXRiR1ZtZENCN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUTdYRzU5WEc1Y2JpNTBaWGgwTFhKcFoyaDBJSHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2djbWxuYUhRN1hHNTlYRzVjYmk1MFpYaDBMV05sYm5SbGNpQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JuMWNibHh1TG5SbGVIUXRhblZ6ZEdsbWVTQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHcDFjM1JwWm5rN1hHNTlYRzVjYmk1MFpYaDBMVzV2ZDNKaGNDQjdYRzRnSUhkb2FYUmxMWE53WVdObE9pQnViM2R5WVhBN1hHNTlYRzVjYmk1MFpYaDBMV3h2ZDJWeVkyRnpaU0I3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCc2IzZGxjbU5oYzJVN1hHNTlYRzVjYmk1MFpYaDBMWFZ3Y0dWeVkyRnpaU0I3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNTlYRzVjYmk1MFpYaDBMV05oY0dsMFlXeHBlbVVnZTF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ1kyRndhWFJoYkdsNlpUdGNibjFjYmx4dUxuVXRZMnhsWVhKbWFYZzZZbVZtYjNKbExGeHVMblV0WTJ4bFlYSm1hWGc2WVdaMFpYSWdlMXh1SUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVHRjYm4xY2JseHVMblV0WTJ4bFlYSm1hWGc2WVdaMFpYSWdlMXh1SUNCamJHVmhjam9nWW05MGFEdGNibjFjYmx4dUxuVXRZbXh2WTJzZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNibjFjYmx4dUxuVXRhV0pzYjJOcklIdGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVmVnh1WEc0dWRTMXBibXhwYm1VZ2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVTdYRzU5WEc1Y2JpNWliM0prWlhKbFpDQjdYRzRnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUNOQ1FrSTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUR0Y2JuMWNibHh1THlvZ1lYUjBjbWxpZFhSbElHaGxiSEJsY25NZ0tpOWNibHh1VzJScGMyRmliR1ZrWFNCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNORlJVVTdYRzRnSUdOdmJHOXlPaUFqUVRsQk9VRTVPMXh1SUNCaWIzSmtaWEl0WTI5c2IzSTZJQ05GUlVVN1hHNGdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzRnSUhSbGVIUXRjMmhoWkc5M09pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNGdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dWZWeHVYRzViYUdsa1pHVnVYU0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNHZLaU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1ltRnpaVFkwTEdWNVNqSmFXRXA2WVZjNWRVbHFiM3BNUTBwNllqTldlVmt5Vm5wSmFuQmlTV2s1Vm1NeVZubGplVGwyV1cxV2MyRllUbkpNTW1Sd1pFZG9NVmxwT1dsYVZ6RjJURE5PZVZsNU9XbFpXRTVzVERFNWVWcFlUbXhrUXpWcVl6Tk5hVXhEU1haV1dFNXNZMjVOZG1JeVNteGlSMng2WVhrNWJtRllVbTlrVjBsMldXMVdkR0o1T1hwamJVMTJXVzFXZEdKNU5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1aRWhzZDFwVE5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1Xak5LY0ZwRE5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1ZbGRXZFdSVE5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1XVmQ0YkdOdVVucE1iVTU2WTNsSmMwbHBPVlpqTWxaNVkzazVkbGx0Vm5OaFdFNXlUREprY0dSSGFERlphVGxwV2xjeGRrd3pUbmxaZVRscVlqSXhkMkl5Tld4aWJsSjZUREU1YVdSWVVqQmlNalY2VEcxT2VtTjVTWE5KYVRsV1l6SldlV041T1haWmJWWnpZVmhPY2t3eVpIQmtSMmd4V1drNWFWcFhNWFpNTTA1NVdYazVhbUl5TVhkaU1qVnNZbTVTZWt3eE9YUmFWMUp3V1ZNMWFtTXpUV2xNUTBsMlZsaE9iR051VFhaaU1rcHNZa2RzZW1GNU9XNWhXRkp2WkZkSmRsbHRWblJpZVRsNlkyMU5kbGt5T1hSalJ6bDFXbGMxTUdONU9XWmFiVGw1WWxoTmRWa3pUbnBKYVhkcFRERldlbHBZU25wTU1qbHBXbGQ0Y0dNeWMzWmFNbXd3WVVoV2FVd3lTbXhpVnpoMll6Tktha3d5VG5aaVdFSjJZbTFXZFdSSVRYWllNMUpvV1cxNGJHTjVOV3BqTTAxcFRFTkpkbFpZVG14amJrMTJZakpLYkdKSGJIcGhlVGx1WVZoU2IyUlhTWFpaYlZaMFluazVlbU50VFhaa1dGSndZa2hOZGxnelZqQmhWM2g2VEcxT2VtTjVTbVJNUTBwMVdWY3hiR041U1RaWE1UQnpTVzB4YUdOSVFuQmliV1I2U1dwdmFVOTZkRUpSVlVaQ1R6QldRbEV3VlRkUGVuUkNVVlZrUjA5NmRFWlJWVlpHVHpCV1FsRXdSVGRTVlVaRVVWUjBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdXVGRTVlVaRVVYcDBSbEZWVGtKUGVuTTNVVlZPYVZKRWRFWlJWVTVHVHpCV1FsRXdSVGRQZW5SQ1VWVldSMDh3VmtKUk1GVTNVbFZHUkZGVWRFWlJWVTVDVHpCV1FsRXdSVGRQZW5SQ1VWVmtSMDh3VmtKUk1GVTNVbFZHUkZGVWRFWlJWVTVDVDNwek4xRlZSa2hTYW5SR1VWVk9Sazk2Y3pkUlZVWklVbXB6TjFGVlRqUlJhMFUzVWxWR1FsUlVjemRQTUVaQ1VUQTBOMUpWUmtKVVZITTNUekJHUWxFd05EZFNWVVpDVkZSek4wOHdSa0pSTURRM1VsVkdRbFJVY3pkUE1FWkNVVEEwTjFKVlJrSlVWSE0zVHpCR1FsRXdORGRTVlVaQ1ZGUnpOMDh3UmtKU1ZUUTNUM3B6TjA5NmRFWlJWVTVHVHpCV1FsRXdSVGRQZW5SQ1VWVmtSMDh3VmtKUlZYTTNUM3B6TjA4d1JrSlRWWGMzVWxWR1FsTjZjemRQTUVaQ1VsVjNOMUpWUmtSU1ZIUkdVVlZPUWs5NmN6ZFJWVVpJVWtSMFJsRlZUa1JQTUZaQ1VUQkZOMDk2ZEVKUlZXUkhUekJXUWxFd1ZUZFNWVVpFVVZSek4wOHdSa0pTTUZrM1VsVkdSRkpVZEVaUlZVNUNUekJXUWxFd1JUZFBlblJDVVZWa1IwOTZkRVpSVlZaR1QzcHpOMUZWUmtoU2FuUkdVVlZPUms4d1ZrSlJNRVUzVDNwMFFsRlZaRWRQTUZaQ1VUQlZOMUpWUmtSUlZIUkdVVlZPUWs5NmN6ZFJWVVpJVW1wMFJsRlZUa1pQZW5NM1VWVkdTRkpxZEVaUlZVNUdUekJXUWxFd1JUZFBlblJDVVZWa1IwOHdWa0pSTUZVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFBlblJDVVROQ1JsSnFkRVpSVlU1R1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRmszVWxWR1JGSlVjemRQTUVaQ1VqQlpOMUpWUmtSU1ZITTNUekJHUWxJd1dUZFNWVVpFVWxSek4wOHdSa0pTTUZrM1VsVkdSRkpVY3pkUE1FWkNVakJaTjFKVlJrUlNWSE0zVHpCR1FsSXdXVGRTVlVaRVVsUnpOMDh3UmtKU01GazNVbFZHUkZKVWN6ZFBNRVpDVWpCWk4xSlZSa1JTVkhNM1R6QkdRbEl3V1RkU1ZVWkVVbFJ6TjA4d1JrSlNNRmszVWxWR1JGSlVjemRQTUVaQ1VqQlpOMUpWUmtSU1ZITTNUekJHUWxJd1dUZFNWVVpFVWxSek4wOHdSa0pTTUZrM1VsVkdSRkpVZEVaUlZVNUNUM3B6TjFGVlJraFNhblJHVVZWT1JrOHdWa0pSTUVVM1QzcDBRbEZWWkVkUE1GWkNVVEJWTjFKVlJrUlJWSE0zVHpCR1FsSXdXVGRTVlVaRVVsUjBSbEZWVGtKUE1GWkNVVEJGTjA5NmRFSlJWV1JIVHpCV1FsRXdWVGRQZW5SQ1VYcFdSbEpxZEVaUlZVNUdUM3B6TjFGVlJraFNhbk0zVWxWR1JsSlVkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRmszVWxWR1JGSlVkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRmszVWxWR1JGSlVkRVpSVlU1Q1R6QldRbEV3UlRkUGVuUkNVVlZrUjA4d1ZrSlJNRlUzVWxWR1JGRlVjemRQTUVaQ1VqQlpOMDh3VmtKU1ZWVTNVbFZHUkZGVWN6ZFBNRVpDVWpCWk4xSlZSa1JTVkhSR1VWVk9Razk2Y3pkUlZVWklVbXAwUmxGVlRrWlBlbk0zVVZWR1NGSnFkRVpSVlU1R1QzcHpOMUZWUmtoU2FuUkdVVlZPUms4d1ZrSlJNRVUzVWxWR1JGRlVkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBNRlpDVVRCRk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVbXAwUmxGVlRrWlBNRlpDVVRCRk4xSlZSa1JSVkhSR1VWVk9Razh3VmtKUk1FVTNVbFZHUkZGVWRFWlJWVTVDVHpCV1FsRXdSVGRTVlVaRVVWUnpOMDh3UmtSa2ExWkhUekJXUWxFd1ZUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpxZEVaUlZVNUdUekJXUWxFd1JUZFBlblJDVVZWa1IwOHdWa0pSTUZVM1VsVkdSRkZVY3pkUE1FWkNVakJaTjFKVlJrUlNWSFJHVVZWT1FrOTZjemRSVlU1elVXdFpOMUpWUmtSU1ZIUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRmszVHpCV1FsSlZWVGRTVlVaRVVWUjBSbEZWVGtKUE1GWkNVVEJGTjA5NmRFSlJWV1JIVHpCV1FsRXdWVGRQZW5SQ1VWVmtSMDh3VmtKUk1GVTNVbFZHUkZGVWN6ZFBNRVpDVWpCWk4xSlZSa1JTVkhSR1VWVk9Razk2Y3pkUlZVWklVbXAwUmxGVlRrWlBNRlpDVVRCRk4wOTZkRUpSTW5oRVVtcDBSbEZWUm1oUGVuTTNVVlZHUkZscWRFWlJWVVpxVDNwek4xRlZSa1phUkhSR1VWVk9SRTh3VmtKUk1FVTNUM3AwUWxGVlpFVlBNRlpDVVRCTk4xSlZSa1JSVkhNM1R6QkdSRlpyVVRkUE1GWkNVbFZWTjFKVlJrUlJWSFJHVVZWT1FrOHdWa0pSTUVVM1QzcDBRbEZWWkVkUE1GWkNVVEJWTjFKVlJrUlJWSFJHVVZWT1FrOTZjemRSVlVaS1VtcDBSbEZWVGtaUE1GWkNVVEJGTjA5NmRFSlJWV1JIVHpCV1FsRXdWVGRTVlVaRVVWUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWN6ZFNWVVpHVWxSMFJsRlZUa0pQZW5NM1VWVkdTRkpxZEVaUlZVNUdUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQTUZaQ1VUQkZOMDk2ZEVKUlZXUkhUM3AwUmxGVlZrWlBNRlpDVVRCRk4wOTZkRUpSZWs1RVVtcDBSbEZWVGtaUGVuTTNVVlZHU0ZKcWN6ZFNWVVpHVWxSMFJsRlZUa0pQTUZaQ1VUQkZOMDk2ZEVKUlZXUkhUekJXUWxFd1ZUZFNWVVpFVVZSek4wOHdSa0pTTUZrM1VsVkdSRkpVZEVaUlZVNUNUM3B6TjFGVlJraFNhblJHVVZWT1JrOTZjemRSVlVaS1VtcHpOMUpWUmtaU1ZITTNUekJHUWxJd1dUZFBNRlpDVVRCVk4wOTZkRUpSVldSSFR6QldRbEV3YXpkUGVuUkNVVlZrUzA5NmRFWlJWVlpHVDNwek4xRlZSa2hTYW5NM1VsVkdSbEpVY3pkUE1FWlRWMnRaTjA4d1JsUmlSVTVDVHpCV1FsRllWa05QZW5NM1VWVkdSR1JyU1RkU1ZVWkNaRlZKTjA5NmRFSlJWVTR5VVdwMFJsRlZSakZSYW5NM1R6QkdRbEV6V2tOUE1GWkNVVmhXUTA5NmN6ZFJWVVpFWkd0Sk4xSlZSa0prVlVrM1QzcDBRbEZWVmpKUmFuUkdVVlZHTVZGcWN6ZFBNRVpDVVROYVEwOHdWa0pSV0ZaRFQzcHpOMUZWUmtSa2EwazNVbFZHUW1SVlNUZFBlblJDVVZWV01sRnFjemRTVlVaR1VsUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWRFWlJWVTVHVDNwek4xRlZSa2hTYW5SR1VWVkdXRTk2Y3pkUlZVWkVWMFIwUmxGVlJscFBlbk0zVVZWR1JGZHFkRVpSVlVaYVQzcHpOMUZWUmtaWGFuUkdVVlZPUkU4d1ZrSlJNRVUzVDNwMFFsWkdaRVZQZW5SQ1VWVk9Razh3VmtKUk1GVTNVbFZHUkZGVWRFWlJWVTVDVHpCV1FsRXdSVGRTVlVaRVVWUjBSbEZWVGtKUE1GWkNVVEJGTjA5NmRFSlJWV1JIVHpCV1FsRldWV2xNUTBwNllqTldlVmt5Vm5wUk1qbDFaRWRXZFdSRFNUWlhlVWx4U1VoMFkySnBRV2RaYlRrMFRGaE9jR1Z0YkhWYWVtOW5XVzA1ZVZwSFZubE1WMHAyWlVSMFkySnVNV05pYkhoMVRHMWFkbU50TVdaWU1rNTJZbTVTZVdJeWQzTllSelIxV1c1U2RVbElkR05pYVVGbldUSTVjMkl6U1RaSlIyeDFZVWRXZVdGWVVUZFlSelJuU1VkYWRtSnVVWFJqTW13MldsUnZaMDFYVm5SUE1YaDFTVU5DYldJeU5UQk1WMXBvWWxkc2MyVlViMmRoVnpWdldsaEtjR1JFZEdOaWFVRm5Za2RzZFZwVE1XOWFWMnh1WVVoUk5rbEhOWFpqYlRGb1lrUjBZMkpwUVdka1IxWTBaRU14TUdOdFJuVmpNbHAyWTIwd05rbEhOWFppYlZVM1dFYzBaMGxITVdoamJXUndZbXB2WjAxRWRHTmliakZqWW14NGRVeHRTakJpYW04MlRGY3hkbVZwTVcxaU1rNHhZM2t4Y0dKdE5XeGphVUkzV0VjMVkyUklRbWhhUjFKd1ltMWpOa2xFUVRkWVJ6VmpaRWRLZG1OdFVteGphbTluVFVSMFkySnVNV05pYVVselNXdENjR0pZUW5aamJsRm5XRU5LYVZsWVRteE1NVGw1WWpJNU1FeHRUbnBqTVhkcFR6RjRkVkZIYkhSalJ6bDVaRU5DWTBsdFNtaGpNbFYyV0ROS2JHTXlWakJNYlU1Nll6RjNhVTh4ZUhWWVJ6VnZaRWN4YzBsSWRHTmlhVUZuV20wNWRXUkRNVzFaVnpGd1lraHJOa2xJVG1oaWJrMTBZekpXZVdGWFdUZFlSelJuU1VoU2JHVklVWFJqTW13MldsTXhhRnBIY0RGak0xRTJTVVJGZDAxRFZUZFlSelU1V0VjMWFXSXlValZKU0hSalltbEJaMkpYUm5sYU1teDFUMmxCZDA4eGVIVkpRMEp0WWpJMU1FeFlUbkJsYlZVMlNVUkZNbU5JWnpkWVJ6Um5TVWQ0Y0dKdFZYUmhSMVp3V2pKb01FOXBRWGhNYWxFM1dFYzBaMGxIVG5aaVJ6bDVUMmxCYWsxNlRYcFBNWGgxWmxaNGRWaEhOV2hKU0hSalltbEJaMWt5T1hOaU0wazJTVWhhYUdOcFozUk1XRkp2V2xjeGJGZ3llSEJpYlhOd1R6RjRkVWxEUW1wa1dFcDZZak5KTmtsSVFuWmhWelV3V2xoSk4xaEhOR2RKU0ZKc1pVaFJkRnBIVm1waU0wcG9aRWRzZG1KcWIyZGliVGwxV2xSMFkySnVNV05pYkhoMVdWUndiMkl6V214amFVSTNXRWMwWjBsSVVteGxTRkYwV2tkV2FtSXpTbWhrUjJ4MlltcHZaMlJYTld0YVdFcHpZVmMxYkU4eGVIVm1WbmgxV0VjMGRrdHBRbXBpTWpGM1lqSTFiR0p1VW5wSlEyOTJXRWMxUVdGWE1YZGlNMG93U1VaM2FWa3lPWFJqUnpsMVdsYzFNR041T1daa1NHeDNXbE0xYW1NelRtTkphblJqWW10Q2NHSllRblpqYmxGbldFTkthbUl5TVhkaU1qVnNZbTVTZWt3eE9XNWpiV3hyVEcxT2VtTXhkMmxQTVhoMVVVZHNkR05IT1hsa1EwSmpTVzFPZG1KWVFuWmliVloxWkVoTmRsZ3lNV3hpYmxWMVdUTk9lbGhEU1RkWVJ6VkJZVmN4ZDJJelNqQkpSbmRwV1RJNWRHTkhPWFZhVnpVd1kzazVabGxYZUd4amJsSjZURzFPZW1NeGQybFBNWGgxVVVkc2RHTkhPWGxrUTBKalNXMU9kbUpZUW5aaWJWWjFaRWhOZGxneVNqRmtTRkoyWW01TmRWa3pUbnBZUTBrM1dFYzFRV0ZYTVhkaU0wb3dTVVozYVZreU9YUmpSemwxV2xjMU1HTjVPV1ppVjFacllWZEZkVmt6VG5wWVEwazNXRWMxUVdGWE1YZGlNMG93U1VaM2FWa3lPWFJqUnpsMVdsYzFNR041T1daYWJUbDVZbGhOZFZrelRucFlRMGszV0VjMVFXRlhNWGRpTTBvd1NVWjNhVmt5T1hSalJ6bDFXbGMxTUdONU9XWmtSMFpwWWtkV2VreHRUbnBqTVhkcFR6RjRkVmhITkhaTGFVSXhaRWRzYzJGWVVuQmFXRTFuUzJrNVkySnJRbkJpV0VKMlkyNVJaMWhEU2pGa1IyeHpZM2s1Wm1SWVVuQmlTRTExV1ROT2VsaERTVGRZUnpWalltazRjVWxIUmpCa1NFcHdXVzVXTUZwVFFtOWFWM2gzV2xoS2VrbERiM1pZUnpWaVdrZHNlbGxYU25OYVYxSmtTVWgwWTJKcFFXZFpiVVpxWVRKa2VXSXpWblZhUkc5blNUQldSbEpVZEdOaWFVRm5XVEk1YzJJelNUWkpRMDVDVDFWRk5WRlVhemRZUnpSblNVZEtkbU50VW14amFURnFZako0ZG1OcWIyZEpNRlpHVWxSMFkySnBRV2RaYlRrMFRGaE9iMWxYVW5aa2VtOW5ZbTA1ZFZwVWRHTmlhVUZuWkVkV05HUkRNWHBoUjBacllqTmpOa2xITlhaaWJWVTNXRWMwWjBsSFRqRmpiazUyWTJwdloxcEhWbTFaV0ZaelpFUjBZMkpwUVdkalJ6bHdZbTVTYkdOcE1XeGtiVloxWkVoTk5rbEhOWFppYlZVM1dFYzFPVmhITldOaWJIUnZZVmRTYTFwWE5XUkpTSFJyWVZoT2QySkhSalZQYVVKMVlqSTFiRTh6TVdOaWFVbHpTV2sxYjAxVFFqZEpSMXAyWW01UmRHTXliRFphVkc5blpHMUdlVXRETUhSaFJFVndTVWd4WTJKcE5XOU5hVUkzU1VkYWRtSnVVWFJqTW13MldsUnZaMlJ0Um5sTFF6QjBZVVJKY0VsSU1XTmlhVFZ2VFhsQ04wbEhXblppYmxGMFl6SnNObHBVYjJka2JVWjVTME13ZEdGRVRYQkpTREZqWW1rMWIwNURRamRKUjFwMlltNVJkR015YkRaYVZHOW5aRzFHZVV0RE1IUmhSRkZ3U1VneFkySnBOVzlPVTBJM1NVZGFkbUp1VVhSak1tdzJXbFJ2WjJSdFJubExRekIwWVVSVmNFbElNV05pYVRWdlRtbENOMGxIV25aaWJsRjBZekpzTmxwVWIyZGtiVVo1UzBNd2RHRkVXWEJKU0RGallteDRkVXh0WjNoTVEwRjFZVVJKYzBsRE5XOU5lWGRuVEcxbk1FeERRWFZoUkZWelNVTTFiMDVwUWpkWVJ6Um5TVWN4YUdOdFpIQmlhbTluVFZkV2RFbEVRVGRZUnpSblNVZGFkbUp1VVhSa01sWndXakpvTUU5cFFuVmlNMHAwV1ZkM04xaEhOVGxZUnpWalltazFiMDVEUWpkYWJUbDFaRU14ZW1SSWJITmFWRzluWVZoU2FHSkhiR3BQTXpGallteDRkVXh0WnpKSlNIUTVXRWMxWTJKcE5YZEpTSE5uWWxkR2VWb3liSFZQYVVGM1NVUkJaMDFYVm5SSlNERmpZbXg0ZFV4dVFYUk1WM2hzV1ZkUloyVjVRbU5pYVVGbllsZEdlVm95YkhWTVYwcDJaRWhTZG1KVWIyZE5VelF4V2xjd04xaEhOR2RKUjFwMlltNVJkR015YkRaYVZHOW5XVEpHYzFsNVozaGpiVlowU1VOdlowMVROSGhPVTJzM1dFYzBaMlpXZUhWWVJ6Um5URzVCWjFCcFFuQmlWMk5uWlRGNGRVbERRbXRoV0U1M1lrZEdOVTlwUW1saVJ6bHFZWHAwWTJKcFFXZGlWMFo1V2pKc2RVOXBRWGhhVnpCbldWaFdNR0o1UVhsYVZ6QTNXRWMwWjJaV2VIVllSelIxWXpJeGFHSkhkMmRsTVhoMVNVTkNiV0l5TlRCTVdFNXdaVzFWTmtsSVdtaGphV2QwVEZoT2RFdFVkR05pYVVGbldtMDVkV1JETVROYVYyeHVZVWhSTmtsSE5YWmpiVEZvWWtSMFkySnVNV05pYkhoMVRHMUtjMkl5VG5KaldGWjJaRWRWWjJVeGVIVkpRMEowV1ZoS2JtRlhORFpKUkVGblRVTkJkMGxFUm14aVZIUmpZbWxCWjJOSFJtdGFSMngxV25wdlowMVhWblJKUkVsMVRsZFdkRTh4ZUhWSlEwSnBZak5LYTFwWVNYUmlSMVp0WkVSdloyUnRSbmxMUXpCMFdXMDVlVnBIVm5sTFZIUmpZbTR4WTJKc2VIVk1iVXB6WWpKT2NtTllWblprUjFWblRHNUJObUpIUm5wa1F6RnFZVWRzYzFwRGQyZFlSelIxV1cxNGRsa3lkSGhrVnprd1dsTkJkV0pIYkhwa1JIQnpXVmhPTUV4WFRtOWhWM2hyU1VoMFkySnBRV2RpVjBaNVdqSnNkVXhYU25aa1NGSjJZbFJ2WjAxRWRHTmliakZqWW14NGRVeHRNV2hqYlhOblpURjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRakpaV0VsdlRGTXhNR0ZIVm5SYVZqbG9Za2RXZVdSRE1UTlpXRXAxWVZjMWJrdFVkR05pYVVGblkwZEdhMXBIYkhWYWVtOW5UVU0wZVZwWE1EZFlSelU1V0VjMVkySnBOWE5oV0U0d1NVaDBZMkpwUVdkaVYwWjVXakpzZFV4WVVuWmpSRzluVFVSMFkySnBRV2RpVjBaNVdqSnNkVXhYU25aa1NGSjJZbFJ2WjAxWFZuUlBNWGgxU1VOQ2QxbFhVbXRoVnpWdVRGZDRiRnB1VVRaSlJFbDFUbGRXZEU4eGVIVm1WbmgxV0VjMGRXSkhiSHBrUTBGMVlrZHNlbVJEUWpkWVJ6Um5TVWN4YUdOdFpIQmlhVEZwWWpOU01HSXlNRFpKUkVFM1dFYzFPVmhITldOaWFUVnpZVmhPTUV4VE1URmliazR3WlZkNGJGcERRamRZUnpSblNVaENhRnBIVW5CaWJXTjBZa2RXYldSRWIyZE5SSFJqWW1sQloySkhiSHBrUXpGNlpFaHNjMXBVYjJkaWJUbDFXbFIwWTJKdU1XTmliSGgxWVVoSloyVXhlSFZKUTBKcFlqTkthMXBZU1RaSlJ6VjJZbTFWTjFoSE5HZEpSMmhzWVZka2IyUkViMmROYmtJMFR6RjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdFBhVUpwWWtkR2FtRjZkR05pYVVGbllsZEdlVm95YkhWTVdGSjJZMFJ2WjAxdFZuUlBNWGgxWmxaNGRVbHBkMmxNYlU1MlltNVNhR0ZYTld4amFVSTNXRWMwWjBsSE1XaGxRekV6WVZkU01HRkViMmRrYlVaNVMwTXdkRm96U25CYVJqbDBXVmhuZEdReWJHdGtSMmR3VHpGNGRVbERRblJaV0VwdVlWYzBOa2xFUVdkWldGWXdZbnAwWTJKcFFXZGpSMFpyV2tkc2RWcDZiMmROUTBGNFkyMVdkRTh4ZUhWbVZuaDFXRWMwZFZreU9YTk1WRVZuWlRGNGRVbERRak5oVjFJd1lVUnZaMDlETkhwTmVrMTZUWGxWTjFoSE5UbFlSelZqWW1rMWFtSXlkM1JOYVVJM1dFYzBaMGxJWkhCYVNGSnZUMmxCZUU1cE5ESk9hbGt5VG5sVk4xaEhOVGxZUnpWalltazFhbUl5ZDNSTmVVSTNXRWMwWjBsSVpIQmFTRkp2VDJsQmVVNVRWVGRZUnpVNVdFYzFZMkpwTldwaU1uZDBUa05DTjFoSE5HZEpTR1J3V2toU2IwOXBRWHBOZVRSNlRYcE5lazE1VlRkWVJ6VTVXRWMxWTJKcE5XcGlNbmQwVGxOQ04xaEhOR2RKU0dSd1draFNiMDlwUVRCTlV6UXlUbXBaTWs1NVZUZFlSelU1V0VjMVkySnBOV3BpTW5kMFRtbENOMWhITkdkSlNHUndXa2hTYjA5cFFURk5RMVUzV0VjMU9WaEhOV05pYVRWcVlqSjNkRTU1UWpkWVJ6Um5TVWhrY0ZwSVVtOVBhVUV4VDBNMGVrMTZUWHBOZVZVM1dFYzFPVmhITldOaWFUVnFZakozZEU5RFFqZFlSelJuU1Voa2NGcElVbTlQYVVFeVRtazBNazVxV1RKT2VWVTNXRWMxT1ZoSE5XTmlhVFZxWWpKM2RFOVRRamRZUnpSblNVaGtjRnBJVW05UGFVRXpUbE5WTjFoSE5UbFlSelZqWW1rMWFtSXlkM1JOVkVGblpURjRkVWxEUWpOaFYxSXdZVVJ2WjA5RVRYVk5lazE2VFhwTmJFOHhlSFZtVm5oMVdFYzBkVmt5T1hOTVZFVjRTVWgwWTJKcFFXZGtNbXhyWkVkbk5rbEVhM2hNYWxreVRtcFpNMHBVZEdOaWJqRmpZbXg0ZFV4dFRuWmlRekI0VFdsQ04xaEhOR2RKU0dSd1draFNiMDlwUVhoTlJFRnNUekY0ZFdaV2VIVllSelIxV2pOS2NGcEdPV1prVnpWd1pFTkNOMWhITkdkSlIxcHpZakpHTUU5cFFuTmFWMW93VHpGNGRVbERRbmRaVjFKcllWYzFiazlwUVhkTWFsWnNZbFIwWTJKdU1XTmliSGgxVEcxa2VXRlhVWFJNV0ZKb1dXMTRiRWxJZEdOaWFVRm5Xa2RzZW1OSGVHaGxWRzluWkVkR2FXSkhWVGRZUnpSblNVaGtjRnBJVW05UGFVRjRUVVJCYkU4eGVIVm1WbmgxV0VjMGRWb3pTbkJhUXpCMFdtMTRiR1ZEUWpkWVJ6Um5TVWRTY0dNelFuTlpXR3MyU1VkYWMxcFlaemRZUnpSblNVZGFjMXBZWjNSYWJYaDJaSHB2WjJOdE9UTkpTR1I1V1ZoQk4xaEhOVGxZUnpWalltazFibU50Ykd0TVV6RXdXVmRLYzFwVFFTdEpRelZ1WTIxc2ExZ3hPVEZpYld3d1NVaDBZMkpwUVdkYVIyeDZZMGQ0YUdWVWIyZGtSMFpwWWtkVmRGa3lWbk5pUkhSalltbEJaMlJ0Vm5sa1IyeHFXVmQzZEZsWGVIQmFNalEyU1VoU2RtTkVkR05pYVVGbllqTmFiR050V25OaU0yTTJTVWRvY0ZwSFVteGlhblJqWW00eFkySnNlSFZNYldSNVlWZFJkRXhYV25OYVdHZG5VR2xCZFZvelNuQmFSamxtWkZjMWNHUkRRamRZUnpSblNVZGFjMXBZWnpaSlJFVTNXRWMxT1ZoSE5HbE1RMGwxWWxkV2RXUlRRamRZUnpSblNVZEthRmt5ZEc1amJUa3hZbTFSZEZreU9YTmlNMGsyU1VoYWFHTnBaM1JNVnpGc1ltNVdabGx0Um1waE1tUjVZak5XZFZwRGF6ZFlSelU1V0VjMVkySnBOWFJhVnpVeFRFWjRkVXh1VGpGWmJURnNZbTVWWjJVeGVIVkpRMEp6WVZoT01FeFlUakJsVjNoc1RGaFNOV05IVlRaSlJ6VjJZbTFWTjFoSE5HZEpSekZvWTIxa2NHSnFiMmROUkhSalltbEJaMk5IUm10YVIyeDFXbnB2WjAxRWRHTmlhVUZuV1cwNU5FeFlUbTlaVjFKMlpIcHZaMDFEUVhsalNHZG5Ua2hDTkVsSVNtNVpiVVZ2VFVOM2QweEVRWE5OUXpSNVMxUjBZMkp1TVdOaWJIaDFURzB4YkdKdVZtWllNMUp3WkVkNGJFbElkR05pYVVGbldtMDVkV1JETVROYVYyeHVZVWhSTmtsSFNuWmlSMUUzV0VjMFowbEhXblppYmxGMFl6SnNObHBVYjJka2JVWjVTME13ZEdGRVRYQlBNWGgxU1VOQ2QxbFhVbXRoVnpWdVQybEJkMGxJV21oamFXZDBURmRrTVdSSVVteGphV3MzV0VjMFowbEhUblppUnpsNVQybENNbGxZU1c5TVV6RXdZVWRXZEZwV09YZGpiV3gwV1ZoS05VdFVkR05pYmpGallteDRkVXh0TVd4aWJsWm1XREpzTUZwWE1HZGxNWGgxU1VOQ2EyRllUbmRpUjBZMVQybENhV0pIT1dwaGVuUmpZbWxCWjFreU9YTmlNMGsyU1Vkc2RXRkhWbmxoV0ZFM1dFYzBaMGxJUW1oYVIxSndZbTFqTmtsSVdtaGphV2QwVEZka01XUklVbXhqYVdzM1dFYzFPVmhITldOaWJVVjFZbGRXZFdSV09XWmhXRkpzWWxSd2IySXpXbXhqYVVJM1dFYzBaMGxIVG5aaVJ6bDVUMmxDTWxsWVNXOU1VekV3WVVkV2RGcFdPWE5oVnpWeVMxUjBZMkpwUVdka1IxWTBaRU14YTFwWFRuWmpiVVl3WVZjNWRVOXBRblZpTWpWc1R6RjRkV1pXZUhWWVJ6UjFZVWRHZWt4WVRqRlpiVEZzWW01Vk5tRkhPVEphV0VsblRHNU9NVmx0TVd4aWJsVnpXRWMwZFdNelZtbGlWMVoxWkZSd2IySXpXbXhqYVVJM1dFYzBaMGxJV25Cak1teHBZVmQ0Y0dSSWF6WkpTRnB3WXpKc2FXSkhWVGRZUnpSblNVYzVkMWxYVG5Ca1NHczJTVVJGTjFoSE5UbFlSelZqWW1rMWRGcFhOVEZNVXpGdllqTktjR1Z0T1hWa1IwWnpTVVEwWjJKSGEyZGxNWGgxU1VOQ2EyRllUbmRpUjBZMVQybENjR0p0ZUhCaWJWVjBXVzE0ZGxreWN6ZFlSelJuU1VoYWJHTnVVbkJaTWtaelRGZEdjMkZYWkhWUGFVSjBZVmRTYTJKSFZUZFlSelU1V0VjMVkySnBOVzlaV0UxMFl6TldhV0pYVm5Wa1UwSTNXRWMwWjBsSVFuWmpNbXd3WVZjNWRVOXBRbmxhVjNob1pFZHNNbHBVZEdOaWJqRmpZbXg0ZFV4dGFHaGplVEY2WkZkS2RGcFhOVEZKUkRSblRHMHhiR0p1Vm1aWU1td3dXbGN3WjJVeGVIVkpRMEozV1ZkU2EyRlhOVzVNV0Vwd1dqSm9NRTlwUVhsYVZ6QTNXRWMxT1ZoSE5XTmlhVFZ2V1ZoTmRHTXpWbWxpVjFaMVpGTkJLMGxETlhSYVZ6VXhXREU1Y0dSSFZuUlBhbkJvV201U2JHTnBRamRZUnpSblNVZE9kbUp1VW14aWJsRTJTVU5qYms4eGVIVkpRMEozWWpOT2NHUkhiSFppYW05bldWZEtlbUl5ZURGa1IxVTNXRWMwWjBsSE1XaGpiV1J3WW1wdlowMUROSHBPVjFaMFR6RjRkVWxEUW05YVYyeHVZVWhSTmtsRVFUZFlSelJuU1Voa2NGcElVbTlQYVVGM1R6RjRkVWxEUW1saU0wcHJXbGhKZEdOdGJHNWhTRkUyU1VSQmRVMTZWbXhpVTBKNllqSjRjRnBEUWpCamJVWjFZek5DYUdOdFZuVmtSSFJqWW1sQloxbHRPWGxhUjFaNVRGZDRiRnB1VVRaSlJFRjFUWHBXYkdKVFFucGlNbmh3V2tOQ01HTnRSblZqTTBKb1kyMVdkV1JFZEdOaWFVRm5XVzA1ZVZwSFZubE1XRkoyWTBSdlowMUROREZhVnpCbll6STVjMkZYVVRkWVJ6Um5TVWhLY0ZveWFEQlBhVUYzVEdwV2JHSlVkR05pYVVGblpFYzVkMDlwUVhoYVZ6QTNXRWMxT1ZoSE5XTmlhVFY2WkZkS2RGcFhOVEZKU0hSalltbEJaMWx0Um1waE1tUjVZak5XZFZwRE1XcGlNbmgyWTJwdloyUnRSbmxMUXpCMFlsZFdkV1JXT1dsWlYwNXlXak5LZG1SWE5XdExWSFJqWW1sQloySlhiSFZNV0dSd1draFNiMDlwUVhoT1ZFSjNaVVIwWTJKcFFXZFpiVGw1V2tkV2VVeFlTbWhhUjJ3eFkzcHZaMlJ0Um5sTFF6QjBXVzA1ZVZwSFZubFlNMHBvV2tkc01XTjVhemRZUnpSblNVaFNlVmxYTlhwaFdGSndZakkwTmtsSVduQmpNbXhwWVZkNGNHUklhMmRPVkVGM1lsaE5jMGxIT1hkWlYwNXdaRWhyWjAxcVZYZGlXRTFuVFdwVmQySllUVGRZUnpSblNVaENkbU15YkRCaFZ6bDFUMmxDYUZsdVRuWmlTRll3V2xSMFkySnBRV2RpUjFadFpFUnZaMHhVUm14aVZIUmpZbWxCWjJOdGJHNWhTRkUyU1VNd2VGcFhNRGRZUnpSblNVaGFjR015YkdsaFYzaHdaRWhyTmtsSGFIQmFSMUpzWW1wMFkySnBRV2RpTTBKb1dUSnNNR1ZVYjJkTlJIUmpZbTR4WTJKcFNYTkphVFZvWWtkV2VXUkRRamRZUnpSblNVaENhRnBIVW5CaWJXTTJTVWRPYUdKSFRXOWtiVVo1UzBNd2RGb3pWakJrUjFaNVMxTTRNRXRUUW1wWlYzaHFTMGhhYUdOcFozUk1WMlF4WkVoU2JHTnBhM1pOYVdzM1dFYzBaMGxIU25aamJWSnNZMmt4ZVZsWFVuQmtXRTAyU1VoYWFHTnBaM1JNVjBwMlkyMVNiR05zT1hsWlYxSndaRmhOY0U4eGVIVkpRMEowV1ZoS2JtRlhORFpKUkVGMVRsZFdkRWxFUVRkWVJ6VTVXRWMxWTJKcE5XaGlSMVo1WkVNd2RGcFlTbmxpTTBsblpURjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRbXBpTW5oMlkybG9NbGxZU1c5TVV6RXdZVWRXZEZwV09XaGlSMVo1WkVNeGJHTnVTblpqYmsxd1NVaFNjR0p1VVc5T1ZFRnNTMU5yTjFoSE5HZEpSMDUyWWtjNWVVOXBRbXBpTW5oMlkybG9NbGxZU1c5TVV6RXdZVWRXZEZwV09XaGlSMVo1WkVNeGJHTnVTblpqYmsxd1NVaE9iMWxYVW14TFJFa3hTbE5yY0ZoSE5UbFlSelZqWW1rMWFHSkhWbmxrUXpCMFl6TldhbGt5Vm5wamVVSTNXRWMwWjBsSFNtaFpNblJ1WTIwNU1XSnRVWFJaTWpsellqTkpOa2xIVG5aaVJ6bDVTMGhhYUdOcFozUk1XRkp2V2xjeGJGZ3lSbk5hV0Vvd1RGaE9NVmt5VG14ak0wMXdTVWhTY0dKdVVXOU9WRUZzUzFOck4xaEhOR2RKUjA1MllrYzVlVTlwUW1waU1uaDJZMmxvTWxsWVNXOU1VekV3WVVkV2RGcFdPV2hpUjFaNVpFTXhlbVJYVG1wYVdFNTZTMU5DZW1GSFJtdGFVMmQ1VGxOVmNFdFdlSFZtVm5oMVdFYzBkVmxYZUd4amJsRjBURmRzZFZwdE9HZGxNWGgxU1VOQ2FWbFhUbkphTTBwMlpGYzFhMHhYVG5aaVJ6bDVUMmxDYW1JeWVIWmphV2d5V1ZoSmIweFRNVEJoUjFaMFdsWTVhR0pIVm5sa1F6RXpXVmhLZFdGWE5XNUxVMEl3WVZjMU1FdEVWWGRLVTJ0d1R6RjRkVWxEUW1waU1uaDJZMnB2WjFreU9YTmlNMGx2WkcxR2VVdERNSFJrUjJoc1lsZFdabGxYZUd4amJsRjBaREpHZVdKdGJIVmFlV3RuWXpKb2FGcEhWVzlOYWxWc1MxTnNZMkp1TVdOaWFVbHpTV2sxYVdSSE5HZGxNWGgxU1VOQ2FWbFhUbkphTTBwMlpGYzFhMHhYVG5aaVJ6bDVUMmxDTWxsWVNXOU1VekZ1WTIxR05VdFVkR05pYVVGbldXMUdhbUV5WkhsaU0xWjFXa1J2WjJSSVNtaGliazUzV1ZoS2JHSnVVVGRZUnpSblNVZFNjR016UW5OWldHczJTVWRzZFdKSGJIVmFVekZwWWtjNWFtRjZkR05pYVVGbldXMDVlVnBIVm5sUGFVRjVZMGhuWjJNeU9YTmhWMUZuWkcxR2VVdERNSFJhTTBwb1pWWTVjMlJJU21aWlUyczNXRWMwWjBsSFNuWmpiVkpzWTJreGVWbFhVbkJrV0UwMlNVaGFhR05wWjNSTVYwcDJZMjFTYkdOc09YbFpWMUp3WkZoTmNFOHhlSFZKUTBKM1dWZFNhMkZYTlc1UGFVRjNUR3BXYkdKVFFYaGFWekEzV0VjMFowbEhUakZqYms1MlkycHZaMk5IT1hCaWJsSnNZMnAwWTJKdU1XTmliSGgxVEcxS01HSnFjRzFpTWs0eFkzbDRZMkpwTldsa1J6UTJZVWM1TWxwWVNXZGxNWGgxU1VOQ2RtUllVbk5oVnpWc1QybEJkMDh4ZUhWSlEwSnBZak5LYTFwWVNYUlpNamx6WWpOSk5rbElXbWhqYVdkMFRGZGtlVmxZYkdaaVNGSm1XVk5yTjFoSE5HZEpSMHAyWlVNeGVtRkhSbXRpTTJNMlNVZHNkV015VmpCSlJFRm5UbFJDZDJWRFFYZEpTRXB1V1cxRmIwMXFWVEZNUkVreFRsTjNlVTVVVlhOTlF6UjVUbE5yTjFoSE5HZEpTRkpzWlVoUmRGcEhWbXBpTTBwb1pFZHNkbUpxYjJkaWJUbDFXbFIwWTJKdU1XTmliSGgxVEcxS01HSnFjR2haTTFKd1pHMVZaMlV4ZUhWSlEwSnBZak5uZEdNeWFHaGFSemt6VDJsQ2NHSnVUbXhrUTBGM1NVUlZkMk5JWjJkTlEwSXlXVmhKYjB4VE1XNWpiVVkxV0RKNE1HTnNPV2hMVkhSalltNHhZMkpzZUhWTWJVb3dZbWt3ZEdOSVNuQmlWMFo1WlZOQ04xaEhOR2RKUjBwb1dUSjBibU50T1RGaWJWRjBXVEk1YzJJelNUWkpTRnBvWTJsbmRFeFlVbTlhVnpGc1dETkNlV0ZYTVdoamJtdHdUekY0ZFVsRFFtcGlNbmgyWTJwdloyUXlhSEJrUjFVM1dFYzFPVmhITldOaWFUVnBaRWMwZEV4WVRteFpNamwxV2tkR2VXVlRRamRZUnpSblNVZEthRmt5ZEc1amJUa3hZbTFSZEZreU9YTmlNMGsyU1VoYWFHTnBaM1JNV0ZKdldsY3hiRmd6VG14Wk1qbDFXa2RHZVdWVGF6ZFlSelJuU1VkT2RtSkhPWGxQYVVJellVZHNNRnBVZEdOaWJqRmpZbXg0ZFV4dFNqQmlhVEIwWkVkV2VXUkhiR2hqYm10blpURjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRakpaV0VsdlRGTXhNR0ZIVm5SYVZqa3dXbGhLTUdGWFJubGxVMnMzV0VjMFowbEhUblppUnpsNVQybENNMkZIYkRCYVZIUmpZbTR4WTJKcFNYTkphVFYzWkZkNGMweFhlR3hhYmxGblpYbENiV0pIT1doa1JHOW5Za2RXYldSRWMyZG1WbmgxVEc1Q01XSkhkM1JqYld4dVlVaFJaMlY1UW0xaVJ6bG9aRVJ2WjJOdGJHNWhTRkUzU1VneFkySnNlSFZNYlRGc1drZHNhRWxJZEdOaWJIZ3dXa2RzZW1OSGVHaGxWRzluV1cxNGRsa3ljemRZUnpWalpFYzVNbHBZU20xaVJ6a3pUMmxDYjJGWFVtdGFWelEzV0VjMU9WaEhOV05pYVRWMFdsZFNjRmxXT1daWmJUbHJaVk5DTjFoSE5XTmtSemt5V2xoS2JXSkhPVE5QYVVKdllWZFNhMXBYTkRkWVJ6VmpaRWhDYUZwSFVuQmliV00yU1VkT2FHSkhUVzlrYlVaNVMwTXdkRm96VmpCa1IxWjVTVU00WjAxcGEzQlBNWGgxWmxaNGRVbHBkMmxNYlZwMlkyMHhabGd6U21oYVIyeDJTVVEwWjJGWE5YZGtXRkZ6V0VjMGRWcHRPWGxpVmpsbVdUSm9iRmt5ZEdsaU0yZG5VR2xDY0dKdVFqRmtRMEkzV0VjMFowbEhXblppYmxGMFl6SnNObHBVYjJkTlZFRjNTbFIwWTJKcFFXZGlSMngxV2xNeGIxcFhiRzVoU0ZFMlNVYzFkbU50TVdoaVJIUmpZbWxCWjJSdFZubGtSMnhxV1ZkM2RGbFhlSEJhTWpRMlNVZEthR015Vm5OaFZ6VnNUekY0ZFVsRFFuUlpXRXB1WVZjME5rbEVRV2ROUXpReFdsY3dOMWhITlRsWVJ6VmpZbTFhY0ZwWGVHdGpNbFl3U1VoMFkySnBRV2RqUjBacldrZHNkVnA2YjJkTlEwRjVXbGN3WjAxdFZuUlBNWGgxU1VOQ2FXSXpTbXRhV0VrMlNVaGFhR05wWjNSTVYwcDJZMjFTYkdOcGF6ZFlSelJuU1VkS2RtTnRVbXhqYVRGNVdWZFNjR1JZVFRaSlNGcG9ZMmxuZEV4WFNuWmpiVkpzWTJ3NWVWbFhVbkJrV0Uxd1R6RjRkVmhITlRsWVJ6VmpZbTE0YkZveVZuVmFRMEkzU1VaNGRVbERRbmRaVjFKcllWYzFiazlwUVhoYVZ6QTNXRWMwWjBsSFduWmlibEYwWkRKV2NGb3lhREJQYVVKcFlqSjRhMDh4ZUhWbVZuaDFXRWMxYzFsWFNteGlRMEkzV0VjMFowbEhVbkJqTTBKeldWaHJOa2xIU25OaU1rNXlUekY0ZFVsRFFuUmhWelIwWkRKc2EyUkhaelpKUkZwc1lsUjBZMkpwUVdkaVYwWjVXakpzZFU5cFFtcFpWM2hxUzBoYWFHTnBaM1JNVjJReFpFaFNiR05wYTNaT1EydG5UVVIwWTJKdU1XTmliSGgxVEcxYWRtTnRNV1pZTTBwb1drZHNka3hHZUhWTWJWcDJZMjB4WmxneVRtOWFWMDV5V1cwNU5FbElkR05pYVVGbllsZEdlVm95YkhWUGFVRjFUbGRXZEVsRVFUZFlSelJuU1VkU2NHTXpRbk5aV0dzMlNVZEtjMkl5VG5KUE1YaDFabE5DWTJKc2VIVk1iVnAyWTIweFpsZ3lUblppYmxKNVlqSjNaMlV4ZUhWSlEwSnJZVmhPZDJKSFJqVlBhVUpwWWtjNWFtRjZkR05pYVVGbldXMDVlVnBIVm5sUGFVSXlXVmhKYjB4VE1XbGlNMHByV2xoSmNFbElXbWhqYVdkMFRGZGtlVmxZYkdaaVNGSjVXREpGY0U4eGVIVkpRMEpwWWpOS2ExcFlTWFJqYlVacllWaFdlazlwUWpKWldFbHZURk14YVdJelNtdGFXRXBtWTIxR2EyRllWbnBMVkhSalltbEJaMk5IUm10YVIyeDFXbnB2WjAxRE5ERmFWekJuVFZkV2RFOHhlSFZKUTBKMFdWaEtibUZYTkhSWmJUa3daRWM1ZEU5cFFqSlpXRWx2VEZNeGJtUllVakJhV0Vsd1R6RjRkV1pXZUhWWVJ6UjFXbTA1ZVdKV09XWlpNamwxWkVoS2RtSkVjRzlpTTFwc1kybDRZMkpwTlcxaU0wcDBXREU1YW1JeU5UQmpiVGx6VDIxYWRsa3pWbnBKU0hSalltbEJaMWx0T1hsYVIxWjVURmRPZG1KSE9YbFBhVUl5V1ZoSmIweFRNVEJoUjFaMFdsWTVkMk50YkhSWldFbzFTMVIwWTJKcFFXZGlNMVl3WWtkc2RWcFViMmROUkhSalltNHhZMkpwU1hOSmFUVXdXVmRLYzFwVFFqZFlSelJuU1VkS2RtTnRVbXhqYVRGcVlqSjRjMWxZUW5wYVZHOW5XVEk1YzJKSFJuZGpNbFUzV0VjMU9WaEhOV05pYVRVd1dWZEtjMXBUUWpCYVEzaGpZbWsxTUZsWFNuTmFVMEl3WVVOQ04xaEhOR2RKU0VKb1drZFNjR0p0WXpaSlIwNW9Za2ROYjJSdFJubExRekIwV2pOV01HUkhWbmxMVTBGMlNVUkpjRTh4ZUhWSlEwSXdXbGhvTUV4WFJuTmhWMlIxVDJsQ2MxcFhXakJQTVhoMVNVTkNkR0ZYTkhSa01teHJaRWRuTmtsRVJYaE5TRUkwVHpGNGRXWldlSFZZUnpSMVpFZEdhV0pIVldka1IyaHNXVmRSWjJSSFoyZGxNWGgxU1VOQ01scFlTakJoVjA1b1lrTXhhR0pIYkc1aWFtOW5XVzA1TUdSSE9YUlBNWGgxU1VOQ2FXSXpTbXRhV0VsMFdXMDVNR1JIT1hSUGFVRjVZMGhuWjJNeU9YTmhWMUZuWkcxR2VVdERNSFJhTTBwb1pWWTVjMlJEYXpkWVJ6VTVXRWMxWTJKcE5UQlpWMHB6V2xOQ01GcHRPWFprUTBJd1drTkNOMWhITkdkSlNGcHNZMjVTY0ZreVJuTk1WMFp6WVZka2RVOXBRakJpTTBFM1dFYzBaMGxIU25aamJWSnNZMmt4TUdJelFUWkpSRXAzWlVOQ2VtSXllSEJhUTBJeVdWaEpiMHhUTVc1amJVWTFXREo0TUV0VWRHTmliakZqWW14NGRVeHVVbWhaYlhoc1RGTXhObHBYU25sWlV6RjVZak5qWjJSSFNuWmFTR3RuWkVoSk5tSnVVbTlNVjA1dllWZDRhMHRIVmpKYVZ6UndTVU5DTjFoSE5HZEpSMHBvV1RKMGJtTnRPVEZpYlZGMFdUSTVjMkl6U1RaSlNGcG9ZMmxuZEV4WFpIbFpXR3htWWtoU2VVdFVkR05pYmpGallteDRkVmhITkhWa1IwWnBZa2RWZEV4WWNHeFpia3BvVEZkT2RtSkRRakJoUkhCMVpFZG5kRmt5YUhCaVIxRnZXbGhhYkdKcGEzTllSelIxWkVkR2FXSkhWWFJNV0hCc1dXNUthRXhYVG5aaVEwSXdXa1J3ZFdSSFozUlpNbWh3WWtkUmIxcFlXbXhpYVd0blpURjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRakpaV0VsdlRGTXhibU50UmpWWU1uZ3dZMmxyTjFoSE5UbFlSelZqWW1rMU1GbFhTbk5hVXpCMFdXMDVlVnBIVm5sTVYwWnpZa05DTUZwRGQyZE1ibEpvV1cxNGJFeFRNV2xpTTBwcldsaEpkRmxYZUhOSlNGSnZTVWgwWTJKcFFXZFpiVGw1V2tkV2VVOXBRakpaV0VsdlRGTXhhV0l6U210YVdFbHdTVWhhYUdOcFozUk1WMlI1V1Zoc1ptSklVWEJQTVhoMVpsWjRkVmhITkhWa1IwWnBZa2RWZEV4WFNuWmpiVkpzWTJreGVXSXpZMmRrUjFGblpURjRkVWxEUVdkSlIwcDJZMjFTYkdOcE1UQmlNMEUyU1VoYWFHTnBaM1JNVjBwMlkyMVNiR05wYTJka2JVWjVTME13ZEZvelNtaGxWamx6WkVOck4xaEhOVGxZUnpWalltazFNRmxYU25OYVV6QjBXVzA1ZVZwSFZubE1WMDUyWWtOQ01GcERlR05pYVRVd1dWZEtjMXBUTUhSWmJUbDVXa2RXZVV4WFRuWmlRMEl3WVVOQ04xaEhOR2RKUjBwMlkyMVNiR05wTVhOYVYxb3dUMmxDTWxsWVNXOU1VekZwWWpOS2ExcFlTWEJKU0Zwb1kybG5kRXhYWkhsWldHeG1Za2hSY0U4eGVIVm1WbmgxV0VjMGRXUkhSbWxpUjFWMFRGZEtkbU50VW14amFURnFZakozWjJSSFVUWmFiV3g1WXpOUmRGa3lhSEJpUjFGeldFYzBkV1JIUm1saVIxVjBURmRLZG1OdFVteGphVEZxWWpKM1oyUkhaelphYld4NVl6TlJkRmt5YUhCaVIxRm5aVEY0ZFVsRFFtbGlNMHByV2xoSmRHSkhWbTFrUkc5blRVWjRkV1pXZUhWSmFYZHBURzVTYkdWSVVYUmlSMVp0WkVOQlowbERRV2RKUTBGblNVTkJaMlY1UWpCYVdHZ3dURmRHYzJGWFpIVlBhVUp6V2xkYU1FbElNV05pYVRVd1dsaG9NRXhZU25CYU1tZ3dTVU5CWjBsRFFXZEpRMEZuU1VoeloyUkhWalJrUXpGb1lrZHNibUpxYjJkamJXeHVZVWhSWjJaV2VIVk1ibEpzWlVoUmRGa3lWblZrUjFaNVNVTkJaMGxEUVdkSlEwRm5aWGxDTUZwWWFEQk1WMFp6WVZka2RVOXBRbXBhVnpVd1dsaEpaMlpXZUhWTWJsSnNaVWhSZEdGdVZucGtSMnh0WlZOQlowbERRV2RKUTBGblpYbENNRnBZYURCTVYwWnpZVmRrZFU5cFFuRmtXRTR3WVZkYU5VbElNV05pYVRVd1dsaG9NRXhYTlhaa00wcG9ZME5CWjBsRFFXZEpRMEZuU1VoeloyUXlhSEJrUjFWMFl6TkNhRmt5VlRaSlJ6VjJaRE5LYUdORFFqbFlSelZqWW1rMU1GcFlhREJNVjNoMlpESldlVmt5Um5wYVUwRm5TVU5CWjBsSWMyZGtSMVkwWkVNeE1HTnRSblZqTWxwMlkyMHdOa2xIZUhaa01sWjVXVEpHZWxwVFFqbFlSelIxWkVkV05HUkRNVEZqU0VKc1kyMU9hR015VldkSlEwRm5TVU5DTjBsSVVteGxTRkYwWkVoS2FHSnVUbTFpTTBwMFQybENNV05JUW14amJVNW9ZekpWWjJaV2VIVk1ibEpzWlVoUmRGa3lSbmRoV0ZKb1lrZHNObHBUUVdkSlEwRm5aWGxDTUZwWWFEQk1XRko1V1ZjMWVscHRPWGxpVkc5bldUSkdkMkZZVW1oaVIydzJXbE5DT1ZoSE5XTmlhVFV4VEZkT2MxcFhSbmxhYld3MFQyMUtiRnB0T1hsYVUzaGpZbWsxTVV4WFRuTmFWMFo1V20xc05FOXRSbTFrUjFaNVNVaDBZMkpwUVdkWk1qbDFaRWRXZFdSRWIyZFlRMHBqU1dwMFkySnBRV2RhUjJ4NlkwZDRhR1ZVYjJka1IwWnBZa2RWTjFoSE5UbFlSelZqWW1rMU1VeFhUbk5hVjBaNVdtMXNORTl0Um0xa1IxWjVTVWgwWTJKcFFXZFpNbmhzV1ZoSk5rbEhTblprUjJjM1dFYzFPVmhITldOaWFUVXhURmRLYzJJeVRuSkpTSE5uV2tkc2VtTkhlR2hsVkc5bldXMTRkbGt5YzJkbVZuaDFURzVWZEdGWFNuTmlNazV5U1VoeloxcEhiSHBqUjNob1pWUnZaMkZYTlhOaFZ6VnNURmRLYzJJeVRuSkpTREZqWW1rMU1VeFhiSFZpUjJ4MVdsTkNOMGxIVW5Cak0wSnpXVmhyTmtsSGJIVmlSMngxV2xOQ09WaEhOV05pYVRWcFlqTkthMXBZU214YVEwSTNXRWMxWTJSSFNuWmpiVkpzWTJwdloyUnRSbmxMUXpCMFdXMDVlVnBIVm5sTFUwSXlXVmhKYjB4VE1XNWpiVVkxV0RKNE1FdFVkR05pYkhnd1dXMDVlVnBIVm5sTVdFcG9Xa2RzTVdONmIyZGtiVVo1UzBNd2RGbHRPWGxhUjFaNVdETkthRnBIYkRGamVXczNXRWMxT1Vsc01Ua2dLaThpTENKQWFXMXdiM0owSUZ3aVltRnpaUzlmY205dmRDNWpjM05jSWp0Y2JrQnBiWEJ2Y25RZ1hDSmlZWE5sTDE5eVpYTmxkQzVqYzNOY0lqdGNibHh1YUhSdGJDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQnpZVzV6TFhObGNtbG1PMXh1SUNCMFpYaDBMWE5wZW1VdFlXUnFkWE4wT2lBeE1EQWxPMXh1ZlZ4dVltOWtlU0I3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzQwTzF4dUlDQmpiMnh2Y2pvZ0l6TXpNenRjYm4xY2JseHVZU0I3WEc0Z0lHTnZiRzl5T2lCMllYSW9MUzEwYUdWdFpWOXNhVzVyS1R0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNTlYRzVjYm1FNmFHOTJaWElnZTF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklIVnVaR1Z5YkdsdVpUdGNibjFjYmx4dUx5b2dZMjl0Y0c5dVpXNTBjeUFxTDF4dVFHbHRjRzl5ZENCY0ltTnZiWEJ2Ym1WdWRITXZYM1I1Y0dVdVkzTnpYQ0k3WEc1QWFXMXdiM0owSUZ3aVkyOXRjRzl1Wlc1MGN5OWZaM0pwWkM1amMzTmNJanRjYmtCcGJYQnZjblFnWENKamIyMXdiMjVsYm5SekwxOXRaVzUxTG1OemMxd2lPMXh1UUdsdGNHOXlkQ0JjSW1OdmJYQnZibVZ1ZEhNdlgyRnNaWEowY3k1amMzTmNJanRjYmtCcGJYQnZjblFnWENKamIyMXdiMjVsYm5SekwxOWlkWFIwYjI1ekxtTnpjMXdpTzF4dVFHbHRjRzl5ZENCY0ltTnZiWEJ2Ym1WdWRITXZYMjFsWkdsaExtTnpjMXdpTzF4dVFHbHRjRzl5ZENCY0ltTnZiWEJ2Ym1WdWRITXZYMlp2Y20xekxtTnpjMXdpTzF4dVFHbHRjRzl5ZENCY0ltTnZiWEJ2Ym1WdWRITXZYM1JoWW14bGN5NWpjM05jSWp0Y2JseHVMeW9nZFhScGJHbDBhV1Z6SUNvdlhHNUFhVzF3YjNKMElGd2lkWFJwYkhNdlgzVjBhV3h6TG1OemMxd2lPMXh1WEc0dktpQmhkSFJ5YVdKMWRHVWdhR1ZzY0dWeWN5QXFMMXh1VzJScGMyRmliR1ZrWFNCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNORlJVVTdYRzRnSUdOdmJHOXlPaUFqUVRsQk9VRTVPMXh1SUNCaWIzSmtaWEl0WTI5c2IzSTZJQ05GUlVVN1hHNGdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzRnSUhSbGVIUXRjMmhoWkc5M09pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNGdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dWZWeHVYRzViYUdsa1pHVnVYU0I3WkdsemNHeGhlVG9nYm05dVpUdDlYRzRpTENJdWFERWdleUJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMV2d4S1NCOVhHNHVhRElnZXlCbWIyNTBMWE5wZW1VNklIWmhjaWd0TFdneUtTQjlYRzR1YURNZ2V5Qm1iMjUwTFhOcGVtVTZJSFpoY2lndExXZ3pLU0I5WEc0dWFEUWdleUJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMV2cwS1NCOVhHNHVhRFVnZXlCbWIyNTBMWE5wZW1VNklIWmhjaWd0TFdnMUtTQjlYRzR1YURZZ2V5Qm1iMjUwTFhOcGVtVTZJSFpoY2lndExXZzJLU0I5WEc1Y2JpNW9NU3dnTG1neUxDQXVhRE1zSUM1b05Dd2dMbWcxTENBdWFEWWdlMXh1SUNCdFlYSm5hVzQ2SURGbGJTQXdPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dibTl5YldGc08xeHVmVnh1WEc0dWFEUWdlMlp2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenQ5WEc1Y2JpNW9OaUI3ZlZ4dVhHNHVjQ0I3SUcxaGNtZHBiam9nTUNBd0lERmxiU0I5WEc1Y2JpNXdMUzFzWldGa0lIc2dYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV1TldWdE8xeHVJQ0JtYjI1MExYTnBlbVU2SUdOaGJHTW9NWEpsYlNBcUlERXVNVFVwTzF4dUlIMWNibHh1SUM1d0lENGdhVzFuSUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJRzFoY21kcGJqb2dNV1Z0SUdGMWRHOGdNbVZ0TzF4dUlIMWNibHh1TG5OdFlXeHNJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQjJZWElvTFMxemJTazdYRzRnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNTlYRzVjYmk1aWJHOWphM0YxYjNSbElIdGNiaUFnYldGeVoybHVPaUF3SURBZ01DQXhaVzA3WEc0Z0lIQmhaR1JwYm1jNklERmxiU0F5TGpWbGJUdGNiaUFnWW05eVpHVnlMV3hsWm5RNklIWmhjaWd0TFdKdmNtUmxjaWs3WEc1OVhHNWNiaTVpYkc5amEzRjFiM1JsSUM1d09teGhjM1F0WTJocGJHUXNJRnh1TG1Kc2IyTnJjWFZ2ZEdVZ0xteHBjM1E2YkdGemRDMWphR2xzWkNCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklEQTdYRzU5WEc1Y2JpNXRZWEpySUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdGRHaGxiV1ZmWVd4bGNuUXRkMkZ5Ym1sdVp5azdYRzRnSUhCaFpHUnBibWM2SURBdU1tVnRPMXh1ZlZ4dVhHNHViR2x6ZENCN1hHNGdJRzFoY21kcGJpMTBiM0E2SURBN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERmxiVHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF5TGpWbGJUdGNibjFjYmx4dUxteHBjM1FnTG14cGMzUWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF3TzF4dWZWeHVYRzR1YkdsemRDMHRkVzV6ZEhsc1pXUWdlMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJREE3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNTlYRzVjYm1oeUlIdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0JvWldsbmFIUTZJREp3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nWW14aFkyczdYRzRnSUcxaGNtZHBiaTEwYjNBNklESmxiVHRjYm4xY2JpSXNJaTVqYjI1MFlXbHVaWElnZTF4dUlDQnRZWGd0ZDJsa2RHZzZJSFpoY2lndExXZHlhV1JmYldGNExYZHBaSFJvS1R0Y2JpQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJSEJoWkdScGJtYzZJREFnTVhKbGJUdGNibjFjYmx4dUxtTnZiQzB4SUh0Y2JpQWdkMmxrZEdnNklEZ3VNek16TXpNbE8xeHVmVnh1WEc0dVkyOXNMVElnZTF4dUlDQjNhV1IwYURvZ01UWXVOalkyTmpjbE8xeHVmVnh1WEc0dVkyOXNMVE1nZTF4dUlDQjNhV1IwYURvZ01qVWxPMXh1ZlZ4dVhHNHVZMjlzTFRRZ2UxeHVJQ0IzYVdSMGFEb2dNek11TXpNek16TWxPMXh1ZlZ4dVhHNHVZMjlzTFRVZ2UxeHVJQ0IzYVdSMGFEb2dOREV1TmpZMk5qY2xPMXh1ZlZ4dVhHNHVZMjlzTFRZZ2UxeHVJQ0IzYVdSMGFEb2dOVEFsTzF4dWZWeHVYRzR1WTI5c0xUY2dlMXh1SUNCM2FXUjBhRG9nTlRndU16TXpNek1sTzF4dWZWeHVYRzR1WTI5c0xUZ2dlMXh1SUNCM2FXUjBhRG9nTmpZdU5qWTJOamNsTzF4dWZWeHVYRzR1WTI5c0xUa2dlMXh1SUNCM2FXUjBhRG9nTnpVbE8xeHVmVnh1WEc0dVkyOXNMVEV3SUh0Y2JpQWdkMmxrZEdnNklEZ3pMak16TXpNekpUdGNibjFjYmx4dUxtTnZiQzB4TVNCN1hHNGdJSGRwWkhSb09pQTVNUzQyTmpZMk55VTdYRzU5WEc1Y2JpNWpiMnd0TVRJZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JuMWNibHh1TG1keWFXUmZYM1Z1YVhRZ2UxeHVJQ0JtYkc5aGREb2diR1ZtZER0Y2JpQWdjR0ZrWkdsdVp6b2dNQzQxWlcwN1hHNTlYRzVjYmk1bmNtbGtMUzEwWVdKc1pTQjdYRzRnSUdScGMzQnNZWGs2SUhSaFlteGxPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNibjFjYmx4dUxtZHlhV1F0TFdac1pYZ2dlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCbWJHVjRMV1pzYjNjNklISnZkeUIzY21Gd08xeHVmVnh1WEc0dVozSnBaQzB0ZEdGaWJHVWdQaUF1WjNKcFpGOWZkVzVwZENCN1hHNGdJR1JwYzNCc1lYazZJSFJoWW14bExXTmxiR3c3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCMGIzQTdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1OVhHNWNiaTVuY21sa0xTMW1iR1Y0SUQ0Z0xtZHlhV1JmWDNWdWFYUWdlMXh1SUNCbWJHVjRPaUF4TzF4dWZWeHVJaXdpTG0xbGJuVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzF0Wlc1MVgySmhZMnRuY205MWJtUXBPMXh1ZlZ4dVhHNHViV1Z1ZFN4Y2JpNXpkV0p0Wlc1MUlIdGNiaUFnYkdsemRDMXpkSGxzWlMxMGVYQmxPaUJ1YjI1bE8xeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUdKdmVDMXphR0ZrYjNjNklEQWdNbkI0SURSd2VDQnlaMkpoS0RBc01Dd3dMREF1TWlrN1hHNTlYRzVjYmk1dFpXNTFYMTkwYVhSc1pTQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dUlDQm1iMjUwTFhOcGVtVTZJSFpoY2lndExXZ3pLVHRjYmlBZ2NHRmtaR2x1WnpvZ01DQjJZWElvTFMxbmRYUjBaWElwTzF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVmZjSEpwYldGeWVTazdYRzU5WEc1Y2JpNXRaVzUxWDE5cGRHVnRJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQndZV1JrYVc1bk9pQjJZWElvTFMxbmRYUjBaWElwTzF4dWZWeHVYRzVoTG0xbGJuVmZYMmwwWlcwNmFHOTJaWElnZTF4dUlDQmpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVmZiR2x1YXlrN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JuMWNibHh1TG1oaGN5MXpkV0p0Wlc1MU9taHZkbVZ5SUM1emRXSnRaVzUxTEZ4dUxuTjFZbTFsYm5VNmFHOTJaWElnZTF4dUlDQjJhWE5wWW1sc2FYUjVPaUIyYVhOcFlteGxPMXh1SUNCdmNHRmphWFI1T2lBeE8xeHVmVnh1WEc0dWJXVnVkUzB0YUc5eWFYcHZiblJoYkNBK0lHeHBJSHRjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1ZlZ4dVhHNHVhR0Z6TFhOMVltMWxiblVnZTF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzU5WEc1Y2JpNW9ZWE10YzNWaWJXVnVkU0ErSUM1dFpXNTFYMTlwZEdWdElIdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNbVZ0TzF4dWZWeHVYRzR1YUdGekxYTjFZbTFsYm5VZ1BpQXViV1Z1ZFY5ZmFYUmxiVG82WVdaMFpYSWdlMXh1SUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQnRZWEpuYVc0NklEQXVNelZsYlR0Y2JpQWdhR1ZwWjJoME9pQXdPMXh1SUNCM2FXUjBhRG9nTUR0Y2JpQWdZbTl5WkdWeUxYSnBaMmgwT2lBd0xqTTFaVzBnYzI5c2FXUWdkSEpoYm5Od1lYSmxiblE3WEc0Z0lHSnZjbVJsY2kxc1pXWjBPaUF3TGpNMVpXMGdjMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjaTEwYjNBNklEQXVOV1Z0SUhOdmJHbGtPMXh1SUNCeWFXZG9kRG9nTUM0MVpXMDdYRzRnSUhSdmNEb2dNV1Z0TzF4dWZWeHVYRzR1YzNWaWJXVnVkU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFcxbGJuVmZZbUZqYTJkeWIzVnVaQ2s3WEc0Z0lHMXBiaTEzYVdSMGFEb2dNVFV3Y0hnN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklIWmhjaWd0TFdKdmNtUmxjbDl5WVdScGRYTXBPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQjJhWE5wWW1sc2FYUjVJRFV3TUcxekxDQnZjR0ZqYVhSNUlESTFNRzF6SURJMU1HMXpPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJR3hsWm5RNklDMHhaVzA3WEc0Z0lISnBaMmgwT2lBdE1XVnRPMXh1SUNCMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNGdJRzl3WVdOcGRIazZJREE3WEc1OVhHNGlMQ0l1WVd4bGNuUWdlMXh1SUNCd1lXUmthVzVuT2lCallXeGpLSFpoY2lndExXZDFkSFJsY2lrdk5Da2dZMkZzWXloMllYSW9MUzFuZFhSMFpYSXBMeklwTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lCMllYSW9MUzFpYjNKa1pYSmZjbUZrYVhWektUdGNiaUFnYldGeVoybHVPaUF3TGpWbGJTQXdPMXh1ZlZ4dVhHNHVZV3hsY25RdExXVnljbTl5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0ZEdobGJXVmZZV3hsY25RdFpYSnliM0p6S1NCMGFXNTBLRFV3SlNrcE8xeHVJQ0JqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0ZEdobGJXVmZZV3hsY25RdFpYSnliM0p6S1NCemFHRmtaU2d5TlNVcEtWeHVmVnh1WEc0dVlXeGxjblF0TFhOMVkyTmxjM01nZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQmpiMnh2Y2loMllYSW9MUzEwYUdWdFpWOWhiR1Z5ZEMxemRXTmpaWE56S1NCMGFXNTBLRFV3SlNrcE8xeHVJQ0JqYjJ4dmNqb2dZMjlzYjNJb2RtRnlLQzB0ZEdobGJXVmZZV3hsY25RdGMzVmpZMlZ6Y3lrZ2MyaGhaR1VvTWpVbEtTbGNibjFjYmx4dUxtRnNaWEowTFMxcGJtWnZJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRkR2hsYldWZllXeGxjblF0ZDJGeWJtbHVaeWtnZEdsdWRDZzFNQ1VwS1R0Y2JpQWdZMjlzYjNJNklHTnZiRzl5S0haaGNpZ3RMWFJvWlcxbFgyRnNaWEowTFhkaGNtNXBibWNwSUhOb1lXUmxLREkxSlNrcFhHNTlYRzRpTENJdVluUnVJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0WjNKaGVTazdYRzRnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUhaaGNpZ3RMV2R5WVhsZmJIUnlYMkVwTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lCMllYSW9MUzFpYjNKa1pYSmZjbUZrYVhWektUdGNiaUFnY0dGa1pHbHVaem9nTUM0MVpXMGdNV1Z0TzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNTlYRzVjYmk1aWRHNDZabTlqZFhNc1hHNHVZblJ1T21odmRtVnlJSHRjYmlBZ2IzVjBiR2x1WlRvZ01EdGNiaUFnWW05eVpHVnlMV052Ykc5eU9pQjJZWElvTFMxbmNtRjVYMngwWDJFcE8xeHVJQ0JpYjNndGMyaGhaRzkzT2lCcGJuTmxkQ0F3SURVd2NIZ2dNQ0J5WjJKaEtESTFOU3d5TlRVc01qVTFMREF1TWpVcE8xeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNTlYRzVjYmk1aWRHNDZZV04wYVhabElIdGNiaUFnWW05NExYTm9ZV1J2ZHpvZ2FXNXpaWFFnTUNBMU1IQjRJREFnZG1GeUtDMHRaM0poZVY5c2RISmZZU2s3WEc1OVhHNWNiaTVpZEc0dExYQnlhVzFoY25rZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMTBhR1Z0WlY5d2NtbHRZWEo1S1R0Y2JpQWdZMjlzYjNJNklIZG9hWFJsTzF4dWZWeHVYRzR1WW5SdUxTMXpaV052Ym1SaGNua2dlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzEwYUdWdFpWOXpaV052Ym1SaGNua3BPMXh1SUNCamIyeHZjam9nZDJocGRHVTdYRzU5WEc1Y2JpNWlkRzR0TFhSbGNuUnBZWEo1SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdGRHaGxiV1ZmZEdWeWRHbGhjbmtwTzF4dUlDQmpiMnh2Y2pvZ2QyaHBkR1U3WEc1OVhHNGlMQ0l1Y0hWc2JDMXNaV1owSUhzZ1pteHZZWFE2SUd4bFpuUTdJSDFjYmk1d2RXeHNMWEpwWjJoMElIc2dabXh2WVhRNklISnBaMmgwT3lCOVhHNWNiaTV0WldScFlTQjdYRzVjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh1WEhSdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dWZWeHVYRzR1YldWa2FXRmZYMkp2WkhrZ2UxeHVYSFJ2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1WEhSd1lXUmthVzVuT2lCallXeGpLSFpoY2lndExXZDFkSFJsY2lBdklESXBLVHRjYm4xY2JpSXNJaTVtYjNKdFgxOXlZV1JwYnlBK0lHbHVjSFYwTEZ4dUxtWnZjbTFmWDJOb1pXTnJZbTk0SUQ0Z2FXNXdkWFFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREV3TUNVN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lCdWIzSnRZV3c3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JpQWdiV0Z5WjJsdU9pQXdJREF1TldWdE8xeHVmVnh1WEc1bWFXVnNaSE5sZENCN1hHNGdJSEJoWkdScGJtYzZJREFnTW1WdElESmxiVHRjYmlBZ1ltOXlaR1Z5T2lCMllYSW9MUzFpYjNKa1pYSXBPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUIyWVhJb0xTMWliM0prWlhKZmNtRmthWFZ6S1R0Y2JseHVmVnh1WEc1c1pXZGxibVFnZXlCY2JpQWdjR0ZrWkdsdVp6b2dNV1Z0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibjFjYmx4dWJHRmlaV3dnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdiV2x1TFhkcFpIUm9PaUEyWlcwN1hHNGdJRzFoY21kcGJqb2dZMkZzWXloMllYSW9MUzFuZFhSMFpYSXBMelFwSURBN1hHNTlYRzVjYmk1bWIzSnRYMTl5WVdScGJ5eGNiaTVtYjNKdFgxOWphR1ZqYTJKdmVDQjdYRzRnSUcxaGNtZHBiam9nTGpWbGJTQXdPMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4wZ1hHNWNiaTVtYjNKdFgxOWpiMjUwY205c0lIdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUdKdmNtUmxjam9nZG1GeUtDMHRZbTl5WkdWeUtTQjJZWElvTFMxbmNtRjVYMngwY2w5aEtUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dkbUZ5S0MwdFltOXlaR1Z5WDNKaFpHbDFjeWs3WEc0Z0lIQmhaR1JwYm1jNklEQXVOV1Z0SURGbGJUdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dkbUZ5S0MwdFozVjBkR1Z5S1R0Y2JuMWNibHh1TG1admNtMWZYMk52Ym5SeWIydzZhRzkyWlhJc1hHNHVabTl5YlY5ZlkyOXVkSEp2YkRwbWIyTjFjeUI3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nZG1GeUtDMHRkR2hsYldWZmNISnBiV0Z5ZVNrN1hHNGdJRzkxZEd4cGJtVTZJREE3WEc1OVhHNGlMQ0l1ZEdGaWJHVWdlMXh1SUNCaWIzSmtaWEl0WTI5c2JHRndjMlU2SUdOdmJHeGhjSE5sTzF4dWZWeHVYRzR1ZEdGaWJHVWdkR1FzWEc0dWRHRmliR1VnZEdnZ2UxeHVJQ0J3WVdSa2FXNW5PaUJqWVd4aktIWmhjaWd0TFdkMWRIUmxjaWtnTHlBeUtUdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRHRjYmlBZ2JXbHVMWGRwWkhSb09pQXhNVEJ3ZUR0Y2JuMWNibHh1TG5SaFlteGxJSFJvWldGa0lIUm9JSHRjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKdmRIUnZiVHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTW5CNElITnZiR2xrSUhaaGNpZ3RMV2R5WVhsZmJIUXBPMXh1ZlZ4dVhHNHVkR0ZpYkdVZ2RHWnZiM1FnZEdRZ2UxeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dkRzl3TzF4dUlDQmliM0prWlhJdGRHOXdPaUF5Y0hnZ2MyOXNhV1FnZG1GeUtDMHRaM0poZVY5c2RDazdYRzU5WEc1Y2JpNTBZV0pzWlMwdGVtVmljbUV0Y205M0lIUmliMlI1SUhSeU9tNTBhQzFqYUdsc1pDaGxkbVZ1S1NBZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMW5jbUY1WDJ4MGNpazdYRzU5WEc1Y2JseHVMblJoWW14bExTMTZaV0p5WVMxamIyd2dkR2c2Ym5Sb0xXTm9hV3hrS0dWMlpXNHBMRnh1TG5SaFlteGxMUzE2WldKeVlTMWpiMndnZEdRNmJuUm9MV05vYVd4a0tHVjJaVzRwSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkbUZ5S0MwdFozSmhlVjlzZEhJcE8xeHVmVnh1WEc0dWRHRmliR1V0TFdKdmNtUmxjaTFoYkd3Z2RHUXNJQzUwWVdKc1pTMHRZbTl5WkdWeUxXRnNiQ0IwYUNCN1hHNGdJR0p2Y21SbGNqb2dkbUZ5S0MwdFltOXlaR1Z5S1NCMllYSW9MUzFuY21GNVgyeDBLVHRjYm4xY2JseHVMblJoWW14bExTMWliM0prWlhJdGNtOTNJSFJrSUh0Y2JpQWdJQ0JpYjNKa1pYSXRkRzl3T2lCMllYSW9MUzFpYjNKa1pYSXBJSFpoY2lndExXZHlZWGxmYkhRcE8xeHVmVnh1WEc0dWRHRmliR1V0TFdKdmNtUmxjaTFqYjJ3Z2RHUXNYRzR1ZEdGaWJHVXRMV0p2Y21SbGNpMWpiMndnZEdnZ2UxeHVJQ0JpYjNKa1pYSXRiR1ZtZERvZ2RtRnlLQzB0WW05eVpHVnlLU0IyWVhJb0xTMW5jbUY1WDJ4MEtUdGNibjFjYmx4dUxuUmhZbXhsTFMxaWIzSmtaWEl0WTI5c0lIUmtPbVpwY25OMExXTm9hV3hrTEZ4dUxuUmhZbXhsTFMxaWIzSmtaWEl0WTI5c0lIUm9PbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdZbTl5WkdWeUxXeGxablE2SURCY2JuMWNiaUlzSWk1MFpYaDBMV3hsWm5RZ0lDQWdJQ0FnSUNBZ0lIc2dkR1Y0ZEMxaGJHbG5iam9nYkdWbWRDQjlYRzR1ZEdWNGRDMXlhV2RvZENBZ0lDQWdJQ0FnSUNCN0lIUmxlSFF0WVd4cFoyNDZJSEpwWjJoMElIMWNiaTUwWlhoMExXTmxiblJsY2lBZ0lDQWdJQ0FnSUhzZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeUlIMWNiaTUwWlhoMExXcDFjM1JwWm5rZ0lDQWdJQ0FnSUhzZ2RHVjRkQzFoYkdsbmJqb2dhblZ6ZEdsbWVTQjlYRzR1ZEdWNGRDMXViM2R5WVhBZ0lDQWdJQ0FnSUNCN0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNkeVlYQWdmVnh1WEc0dWRHVjRkQzFzYjNkbGNtTmhjMlVnSUNBZ0lDQjdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnNiM2RsY21OaGMyVWdmVnh1TG5SbGVIUXRkWEJ3WlhKallYTmxJQ0FnSUNBZ2V5QjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObElIMWNiaTUwWlhoMExXTmhjR2wwWVd4cGVtVWdJQ0FnSUhzZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUdOaGNHbDBZV3hwZW1VZ2ZWeHVYRzR1ZFMxamJHVmhjbVpwZURwaVpXWnZjbVVzWEc0dWRTMWpiR1ZoY21acGVEcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJR1JwYzNCc1lYazZJSFJoWW14bE8xeHVmVnh1WEc0dWRTMWpiR1ZoY21acGVEcGhablJsY2lCN1hHNGdJR05zWldGeU9pQmliM1JvTzF4dWZWeHVYRzR1ZFMxaWJHOWpheUI3SUdScGMzQnNZWGs2SUdKc2IyTnJJSDFjYmk1MUxXbGliRzlqYXlCN0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWpheUI5WEc0dWRTMXBibXhwYm1VZ2V5QmthWE53YkdGNU9pQnBibXhwYm1VZ2ZWeHVYRzR1WW05eVpHVnlaV1FnZTF4dVhIUmliM0prWlhJNklIWmhjaWd0TFdKdmNtUmxjaWtnZG1GeUtDMHRaM0poZVY5c2RDazdYRzVjZEdKdmNtUmxjaTF5WVdScGRYTTZJSFpoY2lndExXSnZjbVJsY2w5eVlXUnBkWE1wTzF4dWZTSmRmUT09ICovIl19 */