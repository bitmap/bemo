* {
  box-sizing: border-box;
}

.form__control,
.btn {
  color: inherit;
  font-size: 1em;
  font-family: inherit;
  line-height: normal;
  text-transform: none;
  margin: 0;
}

.form__control:hover,
.form__control:active,
.form__control:focus,
.btn:focus,
.btn:active,
.btn:hover {
  box-shadow: box-shadow: 0 1px 5px -1px rgba(0,0,0,0.2),
    inset 0 50px 0 rgba(255,255,255,0.2);
}

.btn::-moz-focus-inner {
  padding: 0;
  border: 0;
}

html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  margin: 0;
  font-size: 16px;
  line-height: 1.4;
  color: #333;
}

a {
  color: #00f;
  cursor: pointer;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* components */

.h1 {
  font-size: 2.027em;
}

.h2 {
  font-size: 1.602em;
}

.h3 {
  font-size: 1.424em;
}

.h4 {
  font-size: 1.266em;
}

.h5 {
  font-size: 1.266em;
}

.h6 {
  font-size: 1.125em;
}

.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin: 1em 0;
  font-weight: normal;
}

.h4 {
  font-style: italic;
}

.p {
  margin: 0 0 1em;
}

.p--lead {
  margin-bottom: 1.5em;
  font-size: 1.15rem;
}

.p > img {
  display: block;
  margin: 1em auto 2em;
}

.small {
  font-size: 80%;
  font-weight: normal;
}

.blockquote {
  margin: 0 0 0 1em;
  padding: 1em 2.5em;
  border-left: 2px solid;
}

.blockquote .p:last-child,
.blockquote .list:last-child {
  margin-bottom: 0;
}

.mark {
  background-color: #FAD232;
  padding: 0.2em;
}

.list {
  margin-top: 0;
  margin-bottom: 1em;
  padding-left: 2.5em;
}

.list .list {
  margin-bottom: 0;
}

.list--unstyled {
  padding-left: 0;
  list-style: none;
}

hr {
  border: none;
  height: 2px;
  background: black;
  margin-top: 2em;
}

.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 1rem;
}

.col-1 {
  width: 8.33333%;
}

.col-2 {
  width: 16.66667%;
}

.col-3 {
  width: 25%;
}

.col-4 {
  width: 33.33333%;
}

.col-5 {
  width: 41.66667%;
}

.col-6 {
  width: 50%;
}

.col-7 {
  width: 58.33333%;
}

.col-8 {
  width: 66.66667%;
}

.col-9 {
  width: 75%;
}

.col-10 {
  width: 83.33333%;
}

.col-11 {
  width: 91.66667%;
}

.col-12 {
  width: 100%;
}

.grid__unit {
  float: left;
  padding: 0.5em;
}

.grid--table {
  display: table;
  width: 100%;
}

.grid--flex {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.grid--table > .grid__unit {
  display: table-cell;
  vertical-align: top;
  overflow: hidden;
}

.grid--flex > .grid__unit {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.menu {
  background-color: #eee;
}

.menu,
.submenu {
  list-style-type: none;
  margin: 0;
  padding: 0;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.menu__title {
  font-weight: bold;
  font-size: 1.424em;
  padding: 0 1em;
  color: #0CABE0;
}

.menu__item {
  display: block;
  color: inherit;
  padding: 1em;
}

a.menu__item:hover {
  color: #00f;
  text-decoration: none;
}

.has-submenu:hover .submenu,
.submenu:hover {
  visibility: visible;
  opacity: 1;
}

.menu--horizontal > li {
  display: inline-block;
  vertical-align: middle;
}

.has-submenu {
  position: relative;
}

.has-submenu > .menu__item {
  padding-right: 2em;
}

.has-submenu > .menu__item::after {
  content: '';
  position: absolute;
  margin: 0.35em;
  height: 0;
  width: 0;
  border-right: 0.35em solid transparent;
  border-left: 0.35em solid transparent;
  border-top: 0.5em solid;
  right: 0.5em;
  top: 1em;
}

.submenu {
  background-color: #eee;
  min-width: 150px;
  border-radius: 3px;
  transition: visibility 500ms, opacity 250ms 250ms;
  position: absolute;
  left: -1em;
  right: -1em;
  visibility: hidden;
  opacity: 0;
}

.alert {
  padding: 0.25em 0.5em;
  border-radius: 3px;
  margin: 0.5em 0;
}

.alert--error {
  background-color: rgb(238, 168, 166);
  color: rgb(166, 61, 57);
}

.alert--success {
  background-color: rgb(128, 229, 223);
  color: rgb(0, 152, 143);
}

.alert--info {
  background-color: rgb(253, 233, 153);
  color: rgb(188, 158, 38);
}

.btn {
  background-color: gray;
  background: transparent;
  display: inline-block;
  border: 2px solid rgba(0,0,0,0.1);
  border-radius: 3px;
  padding: 0.5em 1em;
  cursor: pointer;
  box-shadow: 0 1px 5px -1px rgba(0,0,0,0.2);
}

.btn:focus,
.btn:hover {
  outline: 0;
  border-color: rgba(0,0,0,0.25);
  text-decoration: none;
}

.btn:active {
  box-shadow: inset 0 50px 0 rgba(0,0,0,0.1);
}

.btn--primary {
  background-color: #0CABE0;
  color: white;
}

.btn--secondary {
  background-color: #00CABE;
  color: white;
}

.btn--tertiary {
  background-color: #CABE00;
  color: white;
}

/* Bugfixes */

.btn + .btn {
  margin-left: 5px;
}

.btn.pull-right + .btn.pull-right {
  margin-right: 5px;
}

.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.media {
  display: block;
  overflow: hidden;
}

.media__body {
  overflow: hidden;
  padding: 1em;
}

.form__radio > input,
.form__checkbox > input {
  font-size: 100%;
  line-height: normal;
  vertical-align: baseline;
  margin: 0 0.5em;
}

fieldset {
  padding: 0 2em 2em;
  border: 2px solid;
  border-radius: 3px;
}

legend {
  padding: 1em;
  font-weight: bold;
}

label {
  display: block;
  min-width: 6em;
  margin: 0.25em 0;
}

.form__radio,
.form__checkbox {
  margin: .5em 0;
  display: block;
}

.form__control {
  display: block;
  border: 2px solid rgba(0,0,0,0.1);
  border-radius: 3px;
  padding: 0.5em 1em;
  margin-bottom: 1em;
}

.form__control:hover,
.form__control:focus {
  border-color: #0CABE0;
  outline: 0;
}

.table {
  border-collapse: collapse;
}

.table td,
.table th {
  padding: 0.5em;
  text-align: left;
  min-width: 110px;
}

.table thead th {
  vertical-align: bottom;
  border-bottom: 2px solid #BBB;
}

.table tfoot td {
  vertical-align: top;
  border-top: 2px solid #BBB;
}

.table--zebra-row tbody tr:nth-child(even) {
  background-color: #EEE;
}

.table--zebra-col th:nth-child(even),
.table--zebra-col td:nth-child(even) {
  background-color: #EEE;
}

.table--border-all td,
.table--border-all th {
  border: 2px solid #BBB;
}

.table--border-row td {
  border-top: 2px solid #BBB;
}

.table--border-col td,
.table--border-col th {
  border-left: 2px solid #BBB;
}

.table--border-col td:first-child,
.table--border-col th:first-child {
  border-left: 0;
}

/* utilities */

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-nowrap {
  white-space: nowrap;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.u-clearfix:before,
.u-clearfix:after {
  content: "";
  display: table;
}

.u-clearfix:after {
  clear: both;
}

.u-block {
  display: block;
}

.u-iblock {
  display: inline-block;
}

.u-inline {
  display: inline;
}

.bordered {
  border: 2px solid #BBB;
  border-radius: 3px;
}

/* attribute helpers */

[disabled] {
  background: #EEE;
  color: #A9A9A9;
  border-color: #EEE;
  box-shadow: none;
  text-shadow: none;
  cursor: default;
  pointer-events: none;
}

[hidden] {
  display: none;
}


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9vYmVsaXNrL2dpdGh1Yi9iZW1vL3NyYy9iYXNlL19yZXNldC5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvYmVtby5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fdHlwZS5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fZ3JpZC5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fbWVudS5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fYWxlcnRzLmNzcyIsIi9Vc2Vycy9vYmVsaXNrL2dpdGh1Yi9iZW1vL3NyYy9jb21wb25lbnRzL19idXR0b25zLmNzcyIsIi9Vc2Vycy9vYmVsaXNrL2dpdGh1Yi9iZW1vL3NyYy9jb21wb25lbnRzL19tZWRpYS5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvY29tcG9uZW50cy9fZm9ybXMuY3NzIiwiL1VzZXJzL29iZWxpc2svZ2l0aHViL2JlbW8vc3JjL2NvbXBvbmVudHMvX3RhYmxlcy5jc3MiLCIvVXNlcnMvb2JlbGlzay9naXRodWIvYmVtby9zcmMvdXRpbHMvX3V0aWxzLmNzcyIsInNvdXJjZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTs7O0FBR0Y7O0VBRUU7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjs7Ozs7O0VBTUU7Ozs7QUFLRjtFQUNFO0VBQ0E7OztBQ3hCRjtFQUNFO0VBQ0E7RUFBQTtFQUFBOzs7QUFFRjtFQUNFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTs7O0FBR0Y7O0FDeEJBO0VBQU07OztBQUNOO0VBQU07OztBQUNOO0VBQU07OztBQUNOO0VBQU07OztBQUNOO0VBQU07OztBQUNOO0VBQU07OztBQUVOOzs7Ozs7RUFDRTtFQUNBOzs7QUFHRjtFQUFLOzs7QUFJTDtFQUFLOzs7QUFFTDtFQUNFO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7O0VBRUU7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7RUFDQTs7O0FDcEVGO0VBQ0U7RUFDQTtFQUNBOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUFBO0VBQUE7RUFDQTtFQUFBO0VBQUE7OztBQUdGO0VBQ0U7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQUE7RUFBQTs7O0FDNUVGO0VBQ0U7OztBQUdGOztFQUVFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjs7RUFFRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUN2RUY7RUFDRTtFQUNBO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQ2xCRjtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUlGOztFQUVFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTs7O0FBR0Y7O0FBQ0E7RUFDRTs7O0FBR0Y7RUFDRTs7O0FDNUNGO0VBQWE7OztBQUNiO0VBQWM7OztBQUVkO0VBQ0M7RUFDQTs7O0FBR0Q7RUFDQztFQUNBOzs7QUNWRDs7RUFFRTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7OztBQUlGO0VBQ0U7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBO0VBQ0E7OztBQUdGOztFQUVFO0VBQ0E7OztBQUdGO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Y7O0VBRUU7RUFDQTs7O0FDM0NGO0VBQ0U7OztBQUdGOztFQUVFO0VBQ0E7RUFDQTs7O0FBR0Y7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7OztBQUlGOztFQUVFOzs7QUFHRjs7RUFDRTs7O0FBR0Y7RUFDSTs7O0FBR0o7O0VBRUU7OztBQUdGOztFQUVFOzs7QVJaRjs7QVNsQ0E7RUFBdUI7OztBQUN2QjtFQUF1Qjs7O0FBQ3ZCO0VBQXVCOzs7QUFDdkI7RUFBdUI7OztBQUN2QjtFQUF1Qjs7O0FBRXZCO0VBQXVCOzs7QUFDdkI7RUFBdUI7OztBQUN2QjtFQUF1Qjs7O0FBRXZCOztFQUVFO0VBQ0E7OztBQUdGO0VBQ0U7OztBQUdGO0VBQVc7OztBQUNYO0VBQVk7OztBQUNaO0VBQVk7OztBQUVaO0VBQ0M7RUFDQTs7O0FUV0Q7O0FBQ0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Y7RUFBVTs7O0FVeWdCViIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4uZm9ybV9fY29udHJvbCxcbi5idG4ge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbWFyZ2luOiAwO1xufVxuXG4uZm9ybV9fY29udHJvbDpob3Zlcixcbi5mb3JtX19jb250cm9sOmFjdGl2ZSxcbi5mb3JtX19jb250cm9sOmZvY3VzLFxuLmJ0bjpmb2N1cyxcbi5idG46YWN0aXZlLFxuLmJ0bjpob3ZlciB7XG4gIGJveC1zaGFkb3c6XG4gICAgYm94LXNoYWRvdzogMCAxcHggNXB4IC0xcHggcmdiYSgwLDAsMCwwLjIpLFxuICAgIGluc2V0IDAgNTBweCAwIHJnYmEoMjU1LDI1NSwyNTUsMC4yKTtcbn1cblxuLmJ0bjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbn1cbiIsIkBpbXBvcnQgXCJiYXNlL19yb290LmNzc1wiO1xuQGltcG9ydCBcImJhc2UvX3Jlc2V0LmNzc1wiO1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGNvbG9yOiAjMzMzO1xufVxuXG5hIHtcbiAgY29sb3I6IHZhcigtLXRoZW1lX2xpbmspO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4vKiBjb21wb25lbnRzICovXG5AaW1wb3J0IFwiY29tcG9uZW50cy9fdHlwZS5jc3NcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL19ncmlkLmNzc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvX21lbnUuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fYWxlcnRzLmNzc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvX2J1dHRvbnMuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fbWVkaWEuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fZm9ybXMuY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fdGFibGVzLmNzc1wiO1xuXG4vKiB1dGlsaXRpZXMgKi9cbkBpbXBvcnQgXCJ1dGlscy9fdXRpbHMuY3NzXCI7XG5cbi8qIGF0dHJpYnV0ZSBoZWxwZXJzICovXG5bZGlzYWJsZWRdIHtcbiAgYmFja2dyb3VuZDogI0VFRTtcbiAgY29sb3I6ICNBOUE5QTk7XG4gIGJvcmRlci1jb2xvcjogI0VFRTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbltoaWRkZW5dIHtkaXNwbGF5OiBub25lO31cbiIsIi5oMSB7IGZvbnQtc2l6ZTogdmFyKC0taDEpIH1cbi5oMiB7IGZvbnQtc2l6ZTogdmFyKC0taDIpIH1cbi5oMyB7IGZvbnQtc2l6ZTogdmFyKC0taDMpIH1cbi5oNCB7IGZvbnQtc2l6ZTogdmFyKC0taDQpIH1cbi5oNSB7IGZvbnQtc2l6ZTogdmFyKC0taDUpIH1cbi5oNiB7IGZvbnQtc2l6ZTogdmFyKC0taDYpIH1cblxuLmgxLCAuaDIsIC5oMywgLmg0LCAuaDUsIC5oNiB7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5oNCB7Zm9udC1zdHlsZTogaXRhbGljO31cblxuLmg2IHt9XG5cbi5wIHsgbWFyZ2luOiAwIDAgMWVtIH1cblxuLnAtLWxlYWQgeyBcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4xNSk7XG4gfVxuXG4gLnAgPiBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAxZW0gYXV0byAyZW07XG4gfVxuXG4uc21hbGwge1xuICBmb250LXNpemU6IHZhcigtLXNtKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDAgMCAwIDFlbTtcbiAgcGFkZGluZzogMWVtIDIuNWVtO1xuICBib3JkZXItbGVmdDogdmFyKC0tYm9yZGVyKTtcbn1cblxuLmJsb2NrcXVvdGUgLnA6bGFzdC1jaGlsZCwgXG4uYmxvY2txdW90ZSAubGlzdDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZV9hbGVydC13YXJuaW5nKTtcbiAgcGFkZGluZzogMC4yZW07XG59XG5cbi5saXN0IHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBwYWRkaW5nLWxlZnQ6IDIuNWVtO1xufVxuXG4ubGlzdCAubGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5saXN0LS11bnN0eWxlZCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaHIge1xuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgbWFyZ2luLXRvcDogMmVtO1xufVxuIiwiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogdmFyKC0tZ3JpZF9tYXgtd2lkdGgpO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxcmVtO1xufVxuXG4uY29sLTEge1xuICB3aWR0aDogOC4zMzMzMyU7XG59XG5cbi5jb2wtMiB7XG4gIHdpZHRoOiAxNi42NjY2NyU7XG59XG5cbi5jb2wtMyB7XG4gIHdpZHRoOiAyNSU7XG59XG5cbi5jb2wtNCB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7XG59XG5cbi5jb2wtNSB7XG4gIHdpZHRoOiA0MS42NjY2NyU7XG59XG5cbi5jb2wtNiB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5jb2wtNyB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7XG59XG5cbi5jb2wtOCB7XG4gIHdpZHRoOiA2Ni42NjY2NyU7XG59XG5cbi5jb2wtOSB7XG4gIHdpZHRoOiA3NSU7XG59XG5cbi5jb2wtMTAge1xuICB3aWR0aDogODMuMzMzMzMlO1xufVxuXG4uY29sLTExIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTtcbn1cblxuLmNvbC0xMiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZF9fdW5pdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxuLmdyaWQtLXRhYmxlIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZC0tZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5ncmlkLS10YWJsZSA+IC5ncmlkX191bml0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmdyaWQtLWZsZXggPiAuZ3JpZF9fdW5pdCB7XG4gIGZsZXg6IDE7XG59XG4iLCIubWVudSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1lbnVfYmFja2dyb3VuZCk7XG59XG5cbi5tZW51LFxuLnN1Ym1lbnUge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4yKTtcbn1cblxuLm1lbnVfX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogdmFyKC0taDMpO1xuICBwYWRkaW5nOiAwIHZhcigtLWd1dHRlcik7XG4gIGNvbG9yOiB2YXIoLS10aGVtZV9wcmltYXJ5KTtcbn1cblxuLm1lbnVfX2l0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHBhZGRpbmc6IHZhcigtLWd1dHRlcik7XG59XG5cbmEubWVudV9faXRlbTpob3ZlciB7XG4gIGNvbG9yOiB2YXIoLS10aGVtZV9saW5rKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uaGFzLXN1Ym1lbnU6aG92ZXIgLnN1Ym1lbnUsXG4uc3VibWVudTpob3ZlciB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5tZW51LS1ob3Jpem9udGFsID4gbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5oYXMtc3VibWVudSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhhcy1zdWJtZW51ID4gLm1lbnVfX2l0ZW0ge1xuICBwYWRkaW5nLXJpZ2h0OiAyZW07XG59XG5cbi5oYXMtc3VibWVudSA+IC5tZW51X19pdGVtOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbjogMC4zNWVtO1xuICBoZWlnaHQ6IDA7XG4gIHdpZHRoOiAwO1xuICBib3JkZXItcmlnaHQ6IDAuMzVlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDAuMzVlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcDogMC41ZW0gc29saWQ7XG4gIHJpZ2h0OiAwLjVlbTtcbiAgdG9wOiAxZW07XG59XG5cbi5zdWJtZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWVudV9iYWNrZ3JvdW5kKTtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyX3JhZGl1cyk7XG4gIHRyYW5zaXRpb246IHZpc2liaWxpdHkgNTAwbXMsIG9wYWNpdHkgMjUwbXMgMjUwbXM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTFlbTtcbiAgcmlnaHQ6IC0xZW07XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3BhY2l0eTogMDtcbn1cbiIsIi5hbGVydCB7XG4gIHBhZGRpbmc6IGNhbGModmFyKC0tZ3V0dGVyKS80KSBjYWxjKHZhcigtLWd1dHRlcikvMik7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlcl9yYWRpdXMpO1xuICBtYXJnaW46IDAuNWVtIDA7XG59XG5cbi5hbGVydC0tZXJyb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC1lcnJvcnMpIHRpbnQoNTAlKSk7XG4gIGNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC1lcnJvcnMpIHNoYWRlKDI1JSkpXG59XG5cbi5hbGVydC0tc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHZhcigtLXRoZW1lX2FsZXJ0LXN1Y2Nlc3MpIHRpbnQoNTAlKSk7XG4gIGNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC1zdWNjZXNzKSBzaGFkZSgyNSUpKVxufVxuXG4uYWxlcnQtLWluZm8ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcih2YXIoLS10aGVtZV9hbGVydC13YXJuaW5nKSB0aW50KDUwJSkpO1xuICBjb2xvcjogY29sb3IodmFyKC0tdGhlbWVfYWxlcnQtd2FybmluZykgc2hhZGUoMjUlKSlcbn1cbiIsIi5idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5KTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiB2YXIoLS1ib3JkZXIpIHZhcigtLWdyYXlfbHRyX2EpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXJfcmFkaXVzKTtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgMXB4IDVweCAtMXB4IHJnYmEoMCwwLDAsMC4yKTtcblxufVxuXG4uYnRuOmZvY3VzLFxuLmJ0bjpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tZ3JheV9sdF9hKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uYnRuOmFjdGl2ZSB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgNTBweCAwIHZhcigtLWdyYXlfbHRyX2EpO1xufVxuXG4uYnRuLS1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWVfcHJpbWFyeSk7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0tc2Vjb25kYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWVfc2Vjb25kYXJ5KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS10ZXJ0aWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lX3RlcnRpYXJ5KTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4vKiBCdWdmaXhlcyAqL1xuLmJ0biArIC5idG4ge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuXG4uYnRuLnB1bGwtcmlnaHQgKyAuYnRuLnB1bGwtcmlnaHQge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iLCIucHVsbC1sZWZ0IHsgZmxvYXQ6IGxlZnQ7IH1cbi5wdWxsLXJpZ2h0IHsgZmxvYXQ6IHJpZ2h0OyB9XG5cbi5tZWRpYSB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubWVkaWFfX2JvZHkge1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRwYWRkaW5nOiBjYWxjKHZhcigtLWd1dHRlciAvIDIpKTtcbn1cbiIsIi5mb3JtX19yYWRpbyA+IGlucHV0LFxuLmZvcm1fX2NoZWNrYm94ID4gaW5wdXQge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgbWFyZ2luOiAwIDAuNWVtO1xufVxuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAgMmVtIDJlbTtcbiAgYm9yZGVyOiB2YXIoLS1ib3JkZXIpO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXJfcmFkaXVzKTtcblxufVxuXG5sZWdlbmQgeyBcbiAgcGFkZGluZzogMWVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWluLXdpZHRoOiA2ZW07XG4gIG1hcmdpbjogY2FsYyh2YXIoLS1ndXR0ZXIpLzQpIDA7XG59XG5cbi5mb3JtX19yYWRpbyxcbi5mb3JtX19jaGVja2JveCB7XG4gIG1hcmdpbjogLjVlbSAwO1xuICBkaXNwbGF5OiBibG9jaztcbn0gXG5cbi5mb3JtX19jb250cm9sIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogdmFyKC0tYm9yZGVyKSB2YXIoLS1ncmF5X2x0cl9hKTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyX3JhZGl1cyk7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tZ3V0dGVyKTtcbn1cblxuLmZvcm1fX2NvbnRyb2w6aG92ZXIsXG4uZm9ybV9fY29udHJvbDpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogdmFyKC0tdGhlbWVfcHJpbWFyeSk7XG4gIG91dGxpbmU6IDA7XG59XG4iLCIudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG4udGFibGUgdGQsXG4udGFibGUgdGgge1xuICBwYWRkaW5nOiBjYWxjKHZhcigtLWd1dHRlcikgLyAyKTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWluLXdpZHRoOiAxMTBweDtcbn1cblxuLnRhYmxlIHRoZWFkIHRoIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLWdyYXlfbHQpO1xufVxuXG4udGFibGUgdGZvb3QgdGQge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tZ3JheV9sdCk7XG59XG5cbi50YWJsZS0temVicmEtcm93IHRib2R5IHRyOm50aC1jaGlsZChldmVuKSAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5X2x0cik7XG59XG5cblxuLnRhYmxlLS16ZWJyYS1jb2wgdGg6bnRoLWNoaWxkKGV2ZW4pLFxuLnRhYmxlLS16ZWJyYS1jb2wgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JheV9sdHIpO1xufVxuXG4udGFibGUtLWJvcmRlci1hbGwgdGQsIC50YWJsZS0tYm9yZGVyLWFsbCB0aCB7XG4gIGJvcmRlcjogdmFyKC0tYm9yZGVyKSB2YXIoLS1ncmF5X2x0KTtcbn1cblxuLnRhYmxlLS1ib3JkZXItcm93IHRkIHtcbiAgICBib3JkZXItdG9wOiB2YXIoLS1ib3JkZXIpIHZhcigtLWdyYXlfbHQpO1xufVxuXG4udGFibGUtLWJvcmRlci1jb2wgdGQsXG4udGFibGUtLWJvcmRlci1jb2wgdGgge1xuICBib3JkZXItbGVmdDogdmFyKC0tYm9yZGVyKSB2YXIoLS1ncmF5X2x0KTtcbn1cblxuLnRhYmxlLS1ib3JkZXItY29sIHRkOmZpcnN0LWNoaWxkLFxuLnRhYmxlLS1ib3JkZXItY29sIHRoOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLWxlZnQ6IDBcbn1cbiIsIi50ZXh0LWxlZnQgICAgICAgICAgIHsgdGV4dC1hbGlnbjogbGVmdCB9XG4udGV4dC1yaWdodCAgICAgICAgICB7IHRleHQtYWxpZ246IHJpZ2h0IH1cbi50ZXh0LWNlbnRlciAgICAgICAgIHsgdGV4dC1hbGlnbjogY2VudGVyIH1cbi50ZXh0LWp1c3RpZnkgICAgICAgIHsgdGV4dC1hbGlnbjoganVzdGlmeSB9XG4udGV4dC1ub3dyYXAgICAgICAgICB7IHdoaXRlLXNwYWNlOiBub3dyYXAgfVxuXG4udGV4dC1sb3dlcmNhc2UgICAgICB7IHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2UgfVxuLnRleHQtdXBwZXJjYXNlICAgICAgeyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlIH1cbi50ZXh0LWNhcGl0YWxpemUgICAgIHsgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUgfVxuXG4udS1jbGVhcmZpeDpiZWZvcmUsXG4udS1jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4udS1jbGVhcmZpeDphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4udS1ibG9jayB7IGRpc3BsYXk6IGJsb2NrIH1cbi51LWlibG9jayB7IGRpc3BsYXk6IGlubGluZS1ibG9jayB9XG4udS1pbmxpbmUgeyBkaXNwbGF5OiBpbmxpbmUgfVxuXG4uYm9yZGVyZWQge1xuXHRib3JkZXI6IHZhcigtLWJvcmRlcikgdmFyKC0tZ3JheV9sdCk7XG5cdGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlcl9yYWRpdXMpO1xufSIsIlxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLmZvcm1fX2NvbnRyb2wsXG4uYnRuIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIG1hcmdpbjogMDtcbn1cblxuLmZvcm1fX2NvbnRyb2w6aG92ZXIsXG4uZm9ybV9fY29udHJvbDphY3RpdmUsXG4uZm9ybV9fY29udHJvbDpmb2N1cyxcbi5idG46Zm9jdXMsXG4uYnRuOmFjdGl2ZSxcbi5idG46aG92ZXIge1xuICBib3gtc2hhZG93OiBib3gtc2hhZG93OiAwIDFweCA1cHggLTFweCByZ2JhKDAsMCwwLDAuMiksXG4gICAgaW5zZXQgMCA1MHB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjIpO1xufVxuXG4uYnRuOjotbW96LWZvY3VzLWlubmVyIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xufVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAgICAgICAgIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgY29sb3I6ICMzMzM7XG59XG5cbmEge1xuICBjb2xvcjogIzAwZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLyogY29tcG9uZW50cyAqL1xuXG4uaDEge1xuICBmb250LXNpemU6IDIuMDI3ZW07XG59XG5cbi5oMiB7XG4gIGZvbnQtc2l6ZTogMS42MDJlbTtcbn1cblxuLmgzIHtcbiAgZm9udC1zaXplOiAxLjQyNGVtO1xufVxuXG4uaDQge1xuICBmb250LXNpemU6IDEuMjY2ZW07XG59XG5cbi5oNSB7XG4gIGZvbnQtc2l6ZTogMS4yNjZlbTtcbn1cblxuLmg2IHtcbiAgZm9udC1zaXplOiAxLjEyNWVtO1xufVxuXG4uaDEsXG4uaDIsXG4uaDMsXG4uaDQsXG4uaDUsXG4uaDYge1xuICBtYXJnaW46IDFlbSAwO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4uaDQge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cblxuXG4ucCB7XG4gIG1hcmdpbjogMCAwIDFlbTtcbn1cblxuLnAtLWxlYWQge1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbiAgZm9udC1zaXplOiAxLjE1cmVtO1xufVxuXG4ucCA+IGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDFlbSBhdXRvIDJlbTtcbn1cblxuLnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5ibG9ja3F1b3RlIHtcbiAgbWFyZ2luOiAwIDAgMCAxZW07XG4gIHBhZGRpbmc6IDFlbSAyLjVlbTtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZDtcbn1cblxuLmJsb2NrcXVvdGUgLnA6bGFzdC1jaGlsZCxcbi5ibG9ja3F1b3RlIC5saXN0Omxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQUQyMzI7XG4gIHBhZGRpbmc6IDAuMmVtO1xufVxuXG4ubGlzdCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgcGFkZGluZy1sZWZ0OiAyLjVlbTtcbn1cblxuLmxpc3QgLmxpc3Qge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubGlzdC0tdW5zdHlsZWQge1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmhyIHtcbiAgYm9yZGVyOiBub25lO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIG1hcmdpbi10b3A6IDJlbTtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTAwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxcmVtO1xufVxuXG4uY29sLTEge1xuICB3aWR0aDogOC4zMzMzMyU7XG59XG5cbi5jb2wtMiB7XG4gIHdpZHRoOiAxNi42NjY2NyU7XG59XG5cbi5jb2wtMyB7XG4gIHdpZHRoOiAyNSU7XG59XG5cbi5jb2wtNCB7XG4gIHdpZHRoOiAzMy4zMzMzMyU7XG59XG5cbi5jb2wtNSB7XG4gIHdpZHRoOiA0MS42NjY2NyU7XG59XG5cbi5jb2wtNiB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5jb2wtNyB7XG4gIHdpZHRoOiA1OC4zMzMzMyU7XG59XG5cbi5jb2wtOCB7XG4gIHdpZHRoOiA2Ni42NjY2NyU7XG59XG5cbi5jb2wtOSB7XG4gIHdpZHRoOiA3NSU7XG59XG5cbi5jb2wtMTAge1xuICB3aWR0aDogODMuMzMzMzMlO1xufVxuXG4uY29sLTExIHtcbiAgd2lkdGg6IDkxLjY2NjY3JTtcbn1cblxuLmNvbC0xMiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZF9fdW5pdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxuLmdyaWQtLXRhYmxlIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZ3JpZC0tZmxleCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICAgIC1tcy1mbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5ncmlkLS10YWJsZSA+IC5ncmlkX191bml0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmdyaWQtLWZsZXggPiAuZ3JpZF9fdW5pdCB7XG4gIC13ZWJraXQtZmxleDogMTtcbiAgICAgIC1tcy1mbGV4OiAxO1xuICAgICAgICAgIGZsZXg6IDE7XG59XG5cbi5tZW51IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbn1cblxuLm1lbnUsXG4uc3VibWVudSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjIpO1xufVxuXG4ubWVudV9fdGl0bGUge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAxLjQyNGVtO1xuICBwYWRkaW5nOiAwIDFlbTtcbiAgY29sb3I6ICMwQ0FCRTA7XG59XG5cbi5tZW51X19pdGVtIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBwYWRkaW5nOiAxZW07XG59XG5cbmEubWVudV9faXRlbTpob3ZlciB7XG4gIGNvbG9yOiAjMDBmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5oYXMtc3VibWVudTpob3ZlciAuc3VibWVudSxcbi5zdWJtZW51OmhvdmVyIHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLm1lbnUtLWhvcml6b250YWwgPiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmhhcy1zdWJtZW51IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGFzLXN1Ym1lbnUgPiAubWVudV9faXRlbSB7XG4gIHBhZGRpbmctcmlnaHQ6IDJlbTtcbn1cblxuLmhhcy1zdWJtZW51ID4gLm1lbnVfX2l0ZW06OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luOiAwLjM1ZW07XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIGJvcmRlci1yaWdodDogMC4zNWVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItbGVmdDogMC4zNWVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiAwLjVlbSBzb2xpZDtcbiAgcmlnaHQ6IDAuNWVtO1xuICB0b3A6IDFlbTtcbn1cblxuLnN1Ym1lbnUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIHRyYW5zaXRpb246IHZpc2liaWxpdHkgNTAwbXMsIG9wYWNpdHkgMjUwbXMgMjUwbXM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTFlbTtcbiAgcmlnaHQ6IC0xZW07XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmFsZXJ0IHtcbiAgcGFkZGluZzogMC4yNWVtIDAuNWVtO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIG1hcmdpbjogMC41ZW0gMDtcbn1cblxuLmFsZXJ0LS1lcnJvciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDE2OCwgMTY2KTtcbiAgY29sb3I6IHJnYigxNjYsIDYxLCA1Nyk7XG59XG5cbi5hbGVydC0tc3VjY2VzcyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMjgsIDIyOSwgMjIzKTtcbiAgY29sb3I6IHJnYigwLCAxNTIsIDE0Myk7XG59XG5cbi5hbGVydC0taW5mbyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTMsIDIzMywgMTUzKTtcbiAgY29sb3I6IHJnYigxODgsIDE1OCwgMzgpO1xufVxuXG4uYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgwLDAsMCwwLjEpO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2hhZG93OiAwIDFweCA1cHggLTFweCByZ2JhKDAsMCwwLDAuMik7XG59XG5cbi5idG46Zm9jdXMsXG4uYnRuOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsMCwwLDAuMjUpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5idG46YWN0aXZlIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCA1MHB4IDAgcmdiYSgwLDAsMCwwLjEpO1xufVxuXG4uYnRuLS1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBDQUJFMDtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBDQUJFO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5idG4tLXRlcnRpYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0NBQkUwMDtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4vKiBCdWdmaXhlcyAqL1xuXG4uYnRuICsgLmJ0biB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbi5idG4ucHVsbC1yaWdodCArIC5idG4ucHVsbC1yaWdodCB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufVxuXG4ucHVsbC1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5wdWxsLXJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4ubWVkaWEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLm1lZGlhX19ib2R5IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMWVtO1xufVxuXG4uZm9ybV9fcmFkaW8gPiBpbnB1dCxcbi5mb3JtX19jaGVja2JveCA+IGlucHV0IHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIG1hcmdpbjogMCAwLjVlbTtcbn1cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwIDJlbSAyZW07XG4gIGJvcmRlcjogMnB4IHNvbGlkO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbmxlZ2VuZCB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbmxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1pbi13aWR0aDogNmVtO1xuICBtYXJnaW46IDAuMjVlbSAwO1xufVxuXG4uZm9ybV9fcmFkaW8sXG4uZm9ybV9fY2hlY2tib3gge1xuICBtYXJnaW46IC41ZW0gMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5mb3JtX19jb250cm9sIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmZvcm1fX2NvbnRyb2w6aG92ZXIsXG4uZm9ybV9fY29udHJvbDpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzBDQUJFMDtcbiAgb3V0bGluZTogMDtcbn1cblxuLnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLnRhYmxlIHRkLFxuLnRhYmxlIHRoIHtcbiAgcGFkZGluZzogMC41ZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG1pbi13aWR0aDogMTEwcHg7XG59XG5cbi50YWJsZSB0aGVhZCB0aCB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjQkJCO1xufVxuXG4udGFibGUgdGZvb3QgdGQge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBib3JkZXItdG9wOiAycHggc29saWQgI0JCQjtcbn1cblxuLnRhYmxlLS16ZWJyYS1yb3cgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcbn1cblxuLnRhYmxlLS16ZWJyYS1jb2wgdGg6bnRoLWNoaWxkKGV2ZW4pLFxuLnRhYmxlLS16ZWJyYS1jb2wgdGQ6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcbn1cblxuLnRhYmxlLS1ib3JkZXItYWxsIHRkLFxuLnRhYmxlLS1ib3JkZXItYWxsIHRoIHtcbiAgYm9yZGVyOiAycHggc29saWQgI0JCQjtcbn1cblxuLnRhYmxlLS1ib3JkZXItcm93IHRkIHtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNCQkI7XG59XG5cbi50YWJsZS0tYm9yZGVyLWNvbCB0ZCxcbi50YWJsZS0tYm9yZGVyLWNvbCB0aCB7XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgI0JCQjtcbn1cblxuLnRhYmxlLS1ib3JkZXItY29sIHRkOmZpcnN0LWNoaWxkLFxuLnRhYmxlLS1ib3JkZXItY29sIHRoOmZpcnN0LWNoaWxkIHtcbiAgYm9yZGVyLWxlZnQ6IDA7XG59XG5cbi8qIHV0aWxpdGllcyAqL1xuXG4udGV4dC1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGV4dC1qdXN0aWZ5IHtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbn1cblxuLnRleHQtbm93cmFwIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLnRleHQtbG93ZXJjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbn1cblxuLnRleHQtdXBwZXJjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLnRleHQtY2FwaXRhbGl6ZSB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4udS1jbGVhcmZpeDpiZWZvcmUsXG4udS1jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4udS1jbGVhcmZpeDphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4udS1ibG9jayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4udS1pYmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi51LWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cblxuLmJvcmRlcmVkIHtcbiAgYm9yZGVyOiAycHggc29saWQgI0JCQjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4vKiBhdHRyaWJ1dGUgaGVscGVycyAqL1xuXG5bZGlzYWJsZWRdIHtcbiAgYmFja2dyb3VuZDogI0VFRTtcbiAgY29sb3I6ICNBOUE5QTk7XG4gIGJvcmRlci1jb2xvcjogI0VFRTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTlWYzJWeWN5OXZZbVZzYVhOckwyZHBkR2gxWWk5aVpXMXZMM055WXk5aVlYTmxMMTl5WlhObGRDNWpjM01pTENKaVpXMXZMbU56Y3lJc0lpOVZjMlZ5Y3k5dlltVnNhWE5yTDJkcGRHaDFZaTlpWlcxdkwzTnlZeTlpWlcxdkxtTnpjeUlzSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OWpiMjF3YjI1bGJuUnpMMTkwZVhCbExtTnpjeUlzSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OWpiMjF3YjI1bGJuUnpMMTluY21sa0xtTnpjeUlzSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OWpiMjF3YjI1bGJuUnpMMTl0Wlc1MUxtTnpjeUlzSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OWpiMjF3YjI1bGJuUnpMMTloYkdWeWRITXVZM056SWl3aUwxVnpaWEp6TDI5aVpXeHBjMnN2WjJsMGFIVmlMMkpsYlc4dmMzSmpMMk52YlhCdmJtVnVkSE12WDJKMWRIUnZibk11WTNOeklpd2lMMVZ6WlhKekwyOWlaV3hwYzJzdloybDBhSFZpTDJKbGJXOHZjM0pqTDJOdmJYQnZibVZ1ZEhNdlgyMWxaR2xoTG1OemN5SXNJaTlWYzJWeWN5OXZZbVZzYVhOckwyZHBkR2gxWWk5aVpXMXZMM055WXk5amIyMXdiMjVsYm5SekwxOW1iM0p0Y3k1amMzTWlMQ0l2VlhObGNuTXZiMkpsYkdsemF5OW5hWFJvZFdJdlltVnRieTl6Y21NdlkyOXRjRzl1Wlc1MGN5OWZkR0ZpYkdWekxtTnpjeUlzSWk5VmMyVnljeTl2WW1Wc2FYTnJMMmRwZEdoMVlpOWlaVzF2TDNOeVl5OTFkR2xzY3k5ZmRYUnBiSE11WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN08wRkJRVUU3UlVGRFJTeDNRa0ZCUVR0RlEwZEVPenRCUkVGRU96dEZRVVZGTEdkQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHpRa0ZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4WFFVRkJPMFZEUjBRN08wRkVRVVE3T3pzN096dEZRVTFGT3pCRFEwZDFRenRGUVVONFF6czdRVVJEUkR0RlFVTkZMRmxCUVVFN1JVRkRRU3hYUVVGQk8wVkRSVVE3TzBGRE1VSkVPMFZCUTBVc2VVSkJRVUU3UlVGRFFTeG5RMEZCUVR0TlFVRkJMRFJDUVVGQk8xVkJRVUVzZDBKQlFVRTdSVVEyUWtRN08wRkRNMEpFTzBWQlEwVXNWMEZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4aFFVRkJPMFZFT0VKRU96dEJRek5DUkR0RlFVTkZMR0ZCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEhWQ1FVRkJPMFZFT0VKRU96dEJRek5DUkR0RlFVTkZMRFJDUVVGQk8wVkVPRUpFT3p0QlF6TkNSQ3hwUWtGQlFUczdRVU40UWtFN1JVRkJUU3h2UWtGQlFUdEZSbmxFVERzN1FVVjRSRVE3UlVGQlRTeHZRa0ZCUVR0RlJqUkVURHM3UVVVelJFUTdSVUZCVFN4dlFrRkJRVHRGUml0RVREczdRVVU1UkVRN1JVRkJUU3h2UWtGQlFUdEZSbXRGVERzN1FVVnFSVVE3UlVGQlRTeHZRa0ZCUVR0RlJuRkZURHM3UVVWd1JVUTdSVUZCVFN4dlFrRkJRVHRGUm5kRlREczdRVVYwUlVRN096czdPenRGUVVORkxHVkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlJqaEZSRHM3UVVVelJVUTdSVUZCU3l4dlFrRkJRVHRGUml0RlNqczdPenRCUlRORlJEdEZRVUZMTEdsQ1FVRkJPMFZHYVVaS096dEJSUzlGUkR0RlFVTkZMSE5DUVVGQk8wVkJRMEVzYjBKQlFVRTdSVVpyUmtRN08wRkZMMFZCTzBWQlEwTXNaMEpCUVVFN1JVRkRRU3h6UWtGQlFUdEZSbXRHUkRzN1FVVXZSVVE3UlVGRFJTeG5Ra0ZCUVR0RlFVTkJMSEZDUVVGQk8wVkdhMFpFT3p0QlJTOUZSRHRGUVVORkxHMUNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3gzUWtGQlFUdEZSbXRHUkRzN1FVVXZSVVE3TzBWQlJVVXNhMEpCUVVFN1JVWnJSa1E3TzBGRkwwVkVPMFZCUTBVc01rSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlJtdEdSRHM3UVVVdlJVUTdSVUZEUlN4bFFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlJtdEdSRHM3UVVVdlJVUTdSVUZEUlN4clFrRkJRVHRGUm10R1JEczdRVVV2UlVRN1JVRkRSU3hwUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZHYTBaRU96dEJSUzlGUkR0RlFVTkZMR05CUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUm10R1JEczdRVWQwU2tRN1JVRkRSU3h0UWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVoNVNrUTdPMEZIZEVwRU8wVkJRMFVzYVVKQlFVRTdSVWg1U2tRN08wRkhkRXBFTzBWQlEwVXNhMEpCUVVFN1JVaDVTa1E3TzBGSGRFcEVPMFZCUTBVc1dVRkJRVHRGU0hsS1JEczdRVWQwU2tRN1JVRkRSU3hyUWtGQlFUdEZTSGxLUkRzN1FVZDBTa1E3UlVGRFJTeHJRa0ZCUVR0RlNIbEtSRHM3UVVkMFNrUTdSVUZEUlN4WlFVRkJPMFZJZVVwRU96dEJSM1JLUkR0RlFVTkZMR3RDUVVGQk8wVkllVXBFT3p0QlIzUktSRHRGUVVORkxHdENRVUZCTzBWSWVVcEVPenRCUjNSS1JEdEZRVU5GTEZsQlFVRTdSVWg1U2tRN08wRkhkRXBFTzBWQlEwVXNhMEpCUVVFN1JVaDVTa1E3TzBGSGRFcEVPMFZCUTBVc2EwSkJRVUU3UlVoNVNrUTdPMEZIZEVwRU8wVkJRMFVzWVVGQlFUdEZTSGxLUkRzN1FVZDBTa1E3UlVGRFJTeGhRVUZCTzBWQlEwRXNaMEpCUVVFN1JVaDVTa1E3TzBGSGRFcEVPMFZCUTBVc1owSkJRVUU3UlVGRFFTeGhRVUZCTzBWSWVVcEVPenRCUjNSS1JEdEZRVU5GTEhWQ1FVRkJPMFZCUVVFc2MwSkJRVUU3UlVGQlFTeGxRVUZCTzBWQlEwRXNOa0pCUVVFN1RVRkJRU3g1UWtGQlFUdFZRVUZCTEhGQ1FVRkJPMFZJZVVwRU96dEJSM1JLUkR0RlFVTkZMSEZDUVVGQk8wVkJRMEVzY1VKQlFVRTdSVUZEUVN4clFrRkJRVHRGU0hsS1JEczdRVWQwU2tRN1JVRkRSU3hwUWtGQlFUdE5RVUZCTEdGQlFVRTdWVUZCUVN4VFFVRkJPMFZJZVVwRU96dEJTWEpQUkR0RlFVTkZMSGRDUVVGQk8wVktkMDlFT3p0QlNYSlBSRHM3UlVGRlJTeDFRa0ZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzZFVOQlFVRTdSVXAzVDBRN08wRkpjazlFTzBWQlEwVXNiVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVwM1QwUTdPMEZKY2s5RU8wVkJRMFVzWjBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHTkJRVUU3UlVwM1QwUTdPMEZKY2s5RU8wVkJRMFVzWVVGQlFUdEZRVU5CTEhWQ1FVRkJPMFZLZDA5RU96dEJTWEpQUkRzN1JVRkZSU3h4UWtGQlFUdEZRVU5CTEZsQlFVRTdSVXAzVDBRN08wRkpjazlFTzBWQlEwVXNkVUpCUVVFN1JVRkRRU3gzUWtGQlFUdEZTbmRQUkRzN1FVbHlUMFE3UlVGRFJTeHZRa0ZCUVR0RlNuZFBSRHM3UVVseVQwUTdSVUZEUlN4dlFrRkJRVHRGU25kUFJEczdRVWx5VDBRN1JVRkRSU3hoUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNkME5CUVVFN1JVRkRRU3gxUTBGQlFUdEZRVU5CTEhsQ1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxGVkJRVUU3UlVwM1QwUTdPMEZKY2s5RU8wVkJRMFVzZDBKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNiVVJCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTeFpRVUZCTzBWS2QwOUVPenRCU3k5VFJEdEZRVU5GTEhWQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlRHdFVSRHM3UVVzdlUwUTdSVUZEUlN4elEwRkJRVHRGUVVOQkxIbENRVUZCTzBWTWExUkVPenRCU3k5VFJEdEZRVU5GTEhORFFVRkJPMFZCUTBFc2VVSkJRVUU3UlV4clZFUTdPMEZMTDFORU8wVkJRMFVzYzBOQlFVRTdSVUZEUVN3d1FrRkJRVHRGVEd0VVJEczdRVTF3VlVRN1JVRkRSU3gzUWtGQlFUdEZRVU5CTEhsQ1FVRkJPMFZCUTBFc2RVSkJRVUU3UlVGRFFTeHRRMEZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxEUkRRVUZCTzBWT2RWVkVPenRCVFc1VlJEczdSVUZGUlN4WlFVRkJPMFZCUTBFc1owTkJRVUU3UlVGRFFTeDFRa0ZCUVR0RlRuTlZSRHM3UVUxdVZVUTdSVUZEUlN3MFEwRkJRVHRGVG5OVlJEczdRVTF1VlVRN1JVRkRSU3d5UWtGQlFUdEZRVU5CTEdOQlFVRTdSVTV6VlVRN08wRk5ibFZFTzBWQlEwVXNNa0pCUVVFN1JVRkRRU3hqUVVGQk8wVk9jMVZFT3p0QlRXNVZSRHRGUVVORkxESkNRVUZCTzBWQlEwRXNZMEZCUVR0RlRuTlZSRHM3UVUxdVZVUXNaVUZCUVRzN1FVRkRRVHRGUVVORkxHdENRVUZCTzBWT2RWVkVPenRCVFhCVlJEdEZRVU5GTEcxQ1FVRkJPMFZPZFZWRU96dEJUMjVZUkR0RlFVRmhMR0ZCUVVFN1JWQjFXRm83TzBGUGRGaEVPMFZCUVdNc1kwRkJRVHRGVURCWVlqczdRVTk0V0VRN1JVRkRReXhuUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZRTWxoQk96dEJUM2hZUkR0RlFVTkRMR3RDUVVGQk8wVkJRMEVzWTBGQlFUdEZVREpZUVRzN1FWRnlXVVE3TzBWQlJVVXNhVUpCUVVFN1JVRkRRU3h4UWtGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlZKM1dVUTdPMEZSY2xsRU8wVkJRMFVzYjBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWU2QxbEVPenRCVVhCWlJEdEZRVU5GTEdOQlFVRTdSVUZEUVN4dFFrRkJRVHRGVW5WWlJEczdRVkZ3V1VRN1JVRkRSU3huUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlZKMVdVUTdPMEZSY0ZsRU96dEZRVVZGTEdkQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlZKMVdVUTdPMEZSY0ZsRU8wVkJRMFVzWjBKQlFVRTdSVUZEUVN4dFEwRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3h2UWtGQlFUdEZVblZaUkRzN1FWRndXVVE3TzBWQlJVVXNkVUpCUVVFN1JVRkRRU3haUVVGQk8wVlNkVmxFT3p0QlUyeGlSRHRGUVVORkxESkNRVUZCTzBWVWNXSkVPenRCVTJ4aVJEczdSVUZGUlN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNhMEpCUVVFN1JWUnhZa1E3TzBGVGJHSkVPMFZCUTBVc2QwSkJRVUU3UlVGRFFTd3JRa0ZCUVR0RlZIRmlSRHM3UVZOc1lrUTdSVUZEUlN4eFFrRkJRVHRGUVVOQkxEUkNRVUZCTzBWVWNXSkVPenRCVTJ4aVJEdEZRVU5GTEhkQ1FVRkJPMFZVY1dKRU96dEJVMnBpUkRzN1JVRkZSU3gzUWtGQlFUdEZWRzlpUkRzN1FWTnFZa1E3TzBWQlEwVXNkMEpCUVVFN1JWUnhZa1E3TzBGVGJHSkVPMFZCUTBrc05FSkJRVUU3UlZSeFlrZzdPMEZUYkdKRU96dEZRVVZGTERaQ1FVRkJPMFZVY1dKRU96dEJVMnhpUkRzN1JVRkZSU3huUWtGQlFUdEZWSEZpUkRzN1FVTnFZMFFzWjBKQlFVRTdPMEZUYkVOQk8wVkJRWFZDTEd0Q1FVRkJPMFZXZVdWMFFqczdRVlY0WlVRN1JVRkJkVUlzYlVKQlFVRTdSVlkwWlhSQ096dEJWVE5sUkR0RlFVRjFRaXh2UWtGQlFUdEZWaXRsZEVJN08wRlZPV1ZFTzBWQlFYVkNMSEZDUVVGQk8wVldhMlowUWpzN1FWVnFaa1E3UlVGQmRVSXNjVUpCUVVFN1JWWnhablJDT3p0QlZXNW1SRHRGUVVGMVFpd3lRa0ZCUVR0RlZuVm1kRUk3TzBGVmRHWkVPMFZCUVhWQ0xESkNRVUZCTzBWV01HWjBRanM3UVZWNlprUTdSVUZCZFVJc05FSkJRVUU3UlZZMlpuUkNPenRCVlRObVJEczdSVUZGUlN4aFFVRkJPMFZCUTBFc1owSkJRVUU3UlZZNFprUTdPMEZWTTJaRU8wVkJRMFVzWVVGQlFUdEZWamhtUkRzN1FWVXpaa1E3UlVGQlZ5eG5Ra0ZCUVR0RlZpdG1WanM3UVZVNVprUTdSVUZCV1N4MVFrRkJRVHRGVm10blFsZzdPMEZWYW1kQ1JEdEZRVUZaTEdsQ1FVRkJPMFZXY1dkQ1dEczdRVlZ1WjBKRU8wVkJRME1zZDBKQlFVRTdSVUZEUVN4dlFrRkJRVHRGVm5OblFrRTdPMEZETTJaRUxIZENRVUZCT3p0QlFVTkJPMFZCUTBVc2EwSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNjMEpCUVVFN1JVUXJaa1E3TzBGRE5XWkVPMFZCUVZVc1pVRkJRVHRGUkdkblFsUWlMQ0ptYVd4bElqb2lZbVZ0Ynk1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlxSUh0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JuMWNibHh1TG1admNtMWZYMk52Ym5SeWIyd3NYRzR1WW5SdUlIdGNiaUFnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzRnSUdadmJuUXRjMmw2WlRvZ01XVnRPMXh1SUNCbWIyNTBMV1poYldsc2VUb2dhVzVvWlhKcGREdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklHNXZjbTFoYkR0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklHNXZibVU3WEc0Z0lHMWhjbWRwYmpvZ01EdGNibjFjYmx4dUxtWnZjbTFmWDJOdmJuUnliMnc2YUc5MlpYSXNYRzR1Wm05eWJWOWZZMjl1ZEhKdmJEcGhZM1JwZG1Vc1hHNHVabTl5YlY5ZlkyOXVkSEp2YkRwbWIyTjFjeXhjYmk1aWRHNDZabTlqZFhNc1hHNHVZblJ1T21GamRHbDJaU3hjYmk1aWRHNDZhRzkyWlhJZ2UxeHVJQ0JpYjNndGMyaGhaRzkzT2x4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SURBZ01YQjRJRFZ3ZUNBdE1YQjRJSEpuWW1Fb01Dd3dMREFzTUM0eUtTeGNiaUFnSUNCcGJuTmxkQ0F3SURVd2NIZ2dNQ0J5WjJKaEtESTFOU3d5TlRVc01qVTFMREF1TWlrN1hHNTlYRzVjYmk1aWRHNDZPaTF0YjNvdFptOWpkWE10YVc1dVpYSWdlMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0JpYjNKa1pYSTZJREE3WEc1OVhHNGlMQ0pjYmx4dUtpQjdYRzRnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzU5WEc1Y2JpNW1iM0p0WDE5amIyNTBjbTlzTEZ4dUxtSjBiaUI3WEc0Z0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUJ1YjNKdFlXdzdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUJ1YjI1bE8xeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNiaTVtYjNKdFgxOWpiMjUwY205c09taHZkbVZ5TEZ4dUxtWnZjbTFmWDJOdmJuUnliMnc2WVdOMGFYWmxMRnh1TG1admNtMWZYMk52Ym5SeWIydzZabTlqZFhNc1hHNHVZblJ1T21adlkzVnpMRnh1TG1KMGJqcGhZM1JwZG1Vc1hHNHVZblJ1T21odmRtVnlJSHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dZbTk0TFhOb1lXUnZkem9nTUNBeGNIZ2dOWEI0SUMweGNIZ2djbWRpWVNnd0xEQXNNQ3d3TGpJcExGeHVJQ0FnSUdsdWMyVjBJREFnTlRCd2VDQXdJSEpuWW1Fb01qVTFMREkxTlN3eU5UVXNNQzR5S1R0Y2JuMWNibHh1TG1KMGJqbzZMVzF2ZWkxbWIyTjFjeTFwYm01bGNpQjdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJR0p2Y21SbGNqb2dNRHRjYm4xY2JseHVhSFJ0YkNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCellXNXpMWE5sY21sbU8xeHVJQ0IwWlhoMExYTnBlbVV0WVdScWRYTjBPaUF4TURBbE8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhMalE3WEc0Z0lHTnZiRzl5T2lBak16TXpPMXh1ZlZ4dVhHNWhJSHRjYmlBZ1kyOXNiM0k2SUNNd01HWTdYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1ZlZ4dVhHNWhPbWh2ZG1WeUlIdGNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVPaUIxYm1SbGNteHBibVU3WEc1OVhHNWNiaThxSUdOdmJYQnZibVZ1ZEhNZ0tpOWNibHh1TG1neElIdGNiaUFnWm05dWRDMXphWHBsT2lBeUxqQXlOMlZ0TzF4dWZWeHVYRzR1YURJZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFdU5qQXlaVzA3WEc1OVhHNWNiaTVvTXlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVM0ME1qUmxiVHRjYm4xY2JseHVMbWcwSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpJMk5tVnRPMXh1ZlZ4dVhHNHVhRFVnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREV1TWpZMlpXMDdYRzU5WEc1Y2JpNW9OaUI3WEc0Z0lHWnZiblF0YzJsNlpUb2dNUzR4TWpWbGJUdGNibjFjYmx4dUxtZ3hMRnh1TG1neUxGeHVMbWd6TEZ4dUxtZzBMRnh1TG1nMUxGeHVMbWcySUh0Y2JpQWdiV0Z5WjJsdU9pQXhaVzBnTUR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUc1dmNtMWhiRHRjYm4xY2JseHVMbWcwSUh0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYVhSaGJHbGpPMXh1ZlZ4dVhHNWNibHh1TG5BZ2UxeHVJQ0J0WVhKbmFXNDZJREFnTUNBeFpXMDdYRzU5WEc1Y2JpNXdMUzFzWldGa0lIdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNUzQxWlcwN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVM0eE5YSmxiVHRjYm4xY2JseHVMbkFnUGlCcGJXY2dlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2JXRnlaMmx1T2lBeFpXMGdZWFYwYnlBeVpXMDdYRzU5WEc1Y2JpNXpiV0ZzYkNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nT0RBbE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2JtOXliV0ZzTzF4dWZWeHVYRzR1WW14dlkydHhkVzkwWlNCN1hHNGdJRzFoY21kcGJqb2dNQ0F3SURBZ01XVnRPMXh1SUNCd1lXUmthVzVuT2lBeFpXMGdNaTQxWlcwN1hHNGdJR0p2Y21SbGNpMXNaV1owT2lBeWNIZ2djMjlzYVdRN1hHNTlYRzVjYmk1aWJHOWphM0YxYjNSbElDNXdPbXhoYzNRdFkyaHBiR1FzWEc0dVlteHZZMnR4ZFc5MFpTQXViR2x6ZERwc1lYTjBMV05vYVd4a0lIdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjYm4xY2JseHVMbTFoY21zZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqUmtGRU1qTXlPMXh1SUNCd1lXUmthVzVuT2lBd0xqSmxiVHRjYm4xY2JseHVMbXhwYzNRZ2UxeHVJQ0J0WVhKbmFXNHRkRzl3T2lBd08xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhaVzA3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTWk0MVpXMDdYRzU5WEc1Y2JpNXNhWE4wSUM1c2FYTjBJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JuMWNibHh1TG14cGMzUXRMWFZ1YzNSNWJHVmtJSHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF3TzF4dUlDQnNhWE4wTFhOMGVXeGxPaUJ1YjI1bE8xeHVmVnh1WEc1b2NpQjdYRzRnSUdKdmNtUmxjam9nYm05dVpUdGNiaUFnYUdWcFoyaDBPaUF5Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVE2SUdKc1lXTnJPMXh1SUNCdFlYSm5hVzR0ZEc5d09pQXlaVzA3WEc1OVhHNWNiaTVqYjI1MFlXbHVaWElnZTF4dUlDQnRZWGd0ZDJsa2RHZzZJREV3TURCd2VEdGNiaUFnYldGeVoybHVPaUF3SUdGMWRHODdYRzRnSUhCaFpHUnBibWM2SURBZ01YSmxiVHRjYm4xY2JseHVMbU52YkMweElIdGNiaUFnZDJsa2RHZzZJRGd1TXpNek16TWxPMXh1ZlZ4dVhHNHVZMjlzTFRJZ2UxeHVJQ0IzYVdSMGFEb2dNVFl1TmpZMk5qY2xPMXh1ZlZ4dVhHNHVZMjlzTFRNZ2UxeHVJQ0IzYVdSMGFEb2dNalVsTzF4dWZWeHVYRzR1WTI5c0xUUWdlMXh1SUNCM2FXUjBhRG9nTXpNdU16TXpNek1sTzF4dWZWeHVYRzR1WTI5c0xUVWdlMXh1SUNCM2FXUjBhRG9nTkRFdU5qWTJOamNsTzF4dWZWeHVYRzR1WTI5c0xUWWdlMXh1SUNCM2FXUjBhRG9nTlRBbE8xeHVmVnh1WEc0dVkyOXNMVGNnZTF4dUlDQjNhV1IwYURvZ05UZ3VNek16TXpNbE8xeHVmVnh1WEc0dVkyOXNMVGdnZTF4dUlDQjNhV1IwYURvZ05qWXVOalkyTmpjbE8xeHVmVnh1WEc0dVkyOXNMVGtnZTF4dUlDQjNhV1IwYURvZ056VWxPMXh1ZlZ4dVhHNHVZMjlzTFRFd0lIdGNiaUFnZDJsa2RHZzZJRGd6TGpNek16TXpKVHRjYm4xY2JseHVMbU52YkMweE1TQjdYRzRnSUhkcFpIUm9PaUE1TVM0Mk5qWTJOeVU3WEc1OVhHNWNiaTVqYjJ3dE1USWdlMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNibjFjYmx4dUxtZHlhV1JmWDNWdWFYUWdlMXh1SUNCbWJHOWhkRG9nYkdWbWREdGNiaUFnY0dGa1pHbHVaem9nTUM0MVpXMDdYRzU5WEc1Y2JpNW5jbWxrTFMxMFlXSnNaU0I3WEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsTzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYm4xY2JseHVMbWR5YVdRdExXWnNaWGdnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQm1iR1Y0TFdac2IzYzZJSEp2ZHlCM2NtRndPMXh1ZlZ4dVhHNHVaM0pwWkMwdGRHRmliR1VnUGlBdVozSnBaRjlmZFc1cGRDQjdYRzRnSUdScGMzQnNZWGs2SUhSaFlteGxMV05sYkd3N1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNTlYRzVjYmk1bmNtbGtMUzFtYkdWNElENGdMbWR5YVdSZlgzVnVhWFFnZTF4dUlDQm1iR1Y0T2lBeE8xeHVmVnh1WEc0dWJXVnVkU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTmxaV1U3WEc1OVhHNWNiaTV0Wlc1MUxGeHVMbk4xWW0xbGJuVWdlMXh1SUNCc2FYTjBMWE4wZVd4bExYUjVjR1U2SUc1dmJtVTdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F5Y0hnZ05IQjRJSEpuWW1Fb01Dd3dMREFzTUM0eUtUdGNibjFjYmx4dUxtMWxiblZmWDNScGRHeGxJSHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVM0ME1qUmxiVHRjYmlBZ2NHRmtaR2x1WnpvZ01DQXhaVzA3WEc0Z0lHTnZiRzl5T2lBak1FTkJRa1V3TzF4dWZWeHVYRzR1YldWdWRWOWZhWFJsYlNCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JqYjJ4dmNqb2dhVzVvWlhKcGREdGNiaUFnY0dGa1pHbHVaem9nTVdWdE8xeHVmVnh1WEc1aExtMWxiblZmWDJsMFpXMDZhRzkyWlhJZ2UxeHVJQ0JqYjJ4dmNqb2dJekF3Wmp0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dWZWeHVYRzR1YUdGekxYTjFZbTFsYm5VNmFHOTJaWElnTG5OMVltMWxiblVzWEc0dWMzVmliV1Z1ZFRwb2IzWmxjaUI3WEc0Z0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVTdYRzRnSUc5d1lXTnBkSGs2SURFN1hHNTlYRzVjYmk1dFpXNTFMUzFvYjNKcGVtOXVkR0ZzSUQ0Z2JHa2dlMXh1SUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVTdYRzU5WEc1Y2JpNW9ZWE10YzNWaWJXVnVkU0I3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNibjFjYmx4dUxtaGhjeTF6ZFdKdFpXNTFJRDRnTG0xbGJuVmZYMmwwWlcwZ2UxeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXlaVzA3WEc1OVhHNWNiaTVvWVhNdGMzVmliV1Z1ZFNBK0lDNXRaVzUxWDE5cGRHVnRPanBoWm5SbGNpQjdYRzRnSUdOdmJuUmxiblE2SUNjbk8xeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lHMWhjbWRwYmpvZ01DNHpOV1Z0TzF4dUlDQm9aV2xuYUhRNklEQTdYRzRnSUhkcFpIUm9PaUF3TzF4dUlDQmliM0prWlhJdGNtbG5hSFE2SURBdU16VmxiU0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5TFd4bFpuUTZJREF1TXpWbGJTQnpiMnhwWkNCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlMWFJ2Y0RvZ01DNDFaVzBnYzI5c2FXUTdYRzRnSUhKcFoyaDBPaUF3TGpWbGJUdGNiaUFnZEc5d09pQXhaVzA3WEc1OVhHNWNiaTV6ZFdKdFpXNTFJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyVmxaVHRjYmlBZ2JXbHVMWGRwWkhSb09pQXhOVEJ3ZUR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ00zQjRPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQjJhWE5wWW1sc2FYUjVJRFV3TUcxekxDQnZjR0ZqYVhSNUlESTFNRzF6SURJMU1HMXpPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJR3hsWm5RNklDMHhaVzA3WEc0Z0lISnBaMmgwT2lBdE1XVnRPMXh1SUNCMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hHNGdJRzl3WVdOcGRIazZJREE3WEc1OVhHNWNiaTVoYkdWeWRDQjdYRzRnSUhCaFpHUnBibWM2SURBdU1qVmxiU0F3TGpWbGJUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNM0I0TzF4dUlDQnRZWEpuYVc0NklEQXVOV1Z0SURBN1hHNTlYRzVjYmk1aGJHVnlkQzB0WlhKeWIzSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySW9Nak00TENBeE5qZ3NJREUyTmlrN1hHNGdJR052Ykc5eU9pQnlaMklvTVRZMkxDQTJNU3dnTlRjcE8xeHVmVnh1WEc0dVlXeGxjblF0TFhOMVkyTmxjM01nZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMklvTVRJNExDQXlNamtzSURJeU15azdYRzRnSUdOdmJHOXlPaUJ5WjJJb01Dd2dNVFV5TENBeE5ETXBPMXh1ZlZ4dVhHNHVZV3hsY25RdExXbHVabThnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMklvTWpVekxDQXlNek1zSURFMU15azdYRzRnSUdOdmJHOXlPaUJ5WjJJb01UZzRMQ0F4TlRnc0lETTRLVHRjYm4xY2JseHVMbUowYmlCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJR2R5WVhrN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJR0p2Y21SbGNqb2dNbkI0SUhOdmJHbGtJSEpuWW1Fb01Dd3dMREFzTUM0eEtUdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNM0I0TzF4dUlDQndZV1JrYVc1bk9pQXdMalZsYlNBeFpXMDdYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F4Y0hnZ05YQjRJQzB4Y0hnZ2NtZGlZU2d3TERBc01Dd3dMaklwTzF4dWZWeHVYRzR1WW5SdU9tWnZZM1Z6TEZ4dUxtSjBianBvYjNabGNpQjdYRzRnSUc5MWRHeHBibVU2SURBN1hHNGdJR0p2Y21SbGNpMWpiMnh2Y2pvZ2NtZGlZU2d3TERBc01Dd3dMakkxS1R0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dWZWeHVYRzR1WW5SdU9tRmpkR2wyWlNCN1hHNGdJR0p2ZUMxemFHRmtiM2M2SUdsdWMyVjBJREFnTlRCd2VDQXdJSEpuWW1Fb01Dd3dMREFzTUM0eEtUdGNibjFjYmx4dUxtSjBiaTB0Y0hKcGJXRnllU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdRMEZDUlRBN1hHNGdJR052Ykc5eU9pQjNhR2wwWlR0Y2JuMWNibHh1TG1KMGJpMHRjMlZqYjI1a1lYSjVJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdRMEZDUlR0Y2JpQWdZMjlzYjNJNklIZG9hWFJsTzF4dWZWeHVYRzR1WW5SdUxTMTBaWEowYVdGeWVTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNORFFVSkZNREE3WEc0Z0lHTnZiRzl5T2lCM2FHbDBaVHRjYm4xY2JseHVMeW9nUW5WblptbDRaWE1nS2k5Y2JseHVMbUowYmlBcklDNWlkRzRnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTlhCNE8xeHVmVnh1WEc0dVluUnVMbkIxYkd3dGNtbG5hSFFnS3lBdVluUnVMbkIxYkd3dGNtbG5hSFFnZTF4dUlDQnRZWEpuYVc0dGNtbG5hSFE2SURWd2VEdGNibjFjYmx4dUxuQjFiR3d0YkdWbWRDQjdYRzRnSUdac2IyRjBPaUJzWldaME8xeHVmVnh1WEc0dWNIVnNiQzF5YVdkb2RDQjdYRzRnSUdac2IyRjBPaUJ5YVdkb2REdGNibjFjYmx4dUxtMWxaR2xoSUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzU5WEc1Y2JpNXRaV1JwWVY5ZlltOWtlU0I3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNGdJSEJoWkdScGJtYzZJREZsYlR0Y2JuMWNibHh1TG1admNtMWZYM0poWkdsdklENGdhVzV3ZFhRc1hHNHVabTl5YlY5ZlkyaGxZMnRpYjNnZ1BpQnBibkIxZENCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklHNXZjbTFoYkR0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHVJQ0J0WVhKbmFXNDZJREFnTUM0MVpXMDdYRzU5WEc1Y2JtWnBaV3hrYzJWMElIdGNiaUFnY0dGa1pHbHVaem9nTUNBeVpXMGdNbVZ0TzF4dUlDQmliM0prWlhJNklESndlQ0J6YjJ4cFpEdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNM0I0TzF4dWZWeHVYRzVzWldkbGJtUWdlMXh1SUNCd1lXUmthVzVuT2lBeFpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dWZWeHVYRzVzWVdKbGJDQjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCdGFXNHRkMmxrZEdnNklEWmxiVHRjYmlBZ2JXRnlaMmx1T2lBd0xqSTFaVzBnTUR0Y2JuMWNibHh1TG1admNtMWZYM0poWkdsdkxGeHVMbVp2Y20xZlgyTm9aV05yWW05NElIdGNiaUFnYldGeVoybHVPaUF1TldWdElEQTdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVhHNHVabTl5YlY5ZlkyOXVkSEp2YkNCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JpYjNKa1pYSTZJREp3ZUNCemIyeHBaQ0J5WjJKaEtEQXNNQ3d3TERBdU1TazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE53ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNQzQxWlcwZ01XVnRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4WlcwN1hHNTlYRzVjYmk1bWIzSnRYMTlqYjI1MGNtOXNPbWh2ZG1WeUxGeHVMbVp2Y20xZlgyTnZiblJ5YjJ3NlptOWpkWE1nZTF4dUlDQmliM0prWlhJdFkyOXNiM0k2SUNNd1EwRkNSVEE3WEc0Z0lHOTFkR3hwYm1VNklEQTdYRzU5WEc1Y2JpNTBZV0pzWlNCN1hHNGdJR0p2Y21SbGNpMWpiMnhzWVhCelpUb2dZMjlzYkdGd2MyVTdYRzU5WEc1Y2JpNTBZV0pzWlNCMFpDeGNiaTUwWVdKc1pTQjBhQ0I3WEc0Z0lIQmhaR1JwYm1jNklEQXVOV1Z0TzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHVJQ0J0YVc0dGQybGtkR2c2SURFeE1IQjRPMXh1ZlZ4dVhHNHVkR0ZpYkdVZ2RHaGxZV1FnZEdnZ2UxeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbTkwZEc5dE8xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXljSGdnYzI5c2FXUWdJMEpDUWp0Y2JuMWNibHh1TG5SaFlteGxJSFJtYjI5MElIUmtJSHRjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUhSdmNEdGNiaUFnWW05eVpHVnlMWFJ2Y0RvZ01uQjRJSE52Ykdsa0lDTkNRa0k3WEc1OVhHNWNiaTUwWVdKc1pTMHRlbVZpY21FdGNtOTNJSFJpYjJSNUlIUnlPbTUwYUMxamFHbHNaQ2hsZG1WdUtTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNORlJVVTdYRzU5WEc1Y2JpNTBZV0pzWlMwdGVtVmljbUV0WTI5c0lIUm9PbTUwYUMxamFHbHNaQ2hsZG1WdUtTeGNiaTUwWVdKc1pTMHRlbVZpY21FdFkyOXNJSFJrT201MGFDMWphR2xzWkNobGRtVnVLU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTkZSVVU3WEc1OVhHNWNiaTUwWVdKc1pTMHRZbTl5WkdWeUxXRnNiQ0IwWkN4Y2JpNTBZV0pzWlMwdFltOXlaR1Z5TFdGc2JDQjBhQ0I3WEc0Z0lHSnZjbVJsY2pvZ01uQjRJSE52Ykdsa0lDTkNRa0k3WEc1OVhHNWNiaTUwWVdKc1pTMHRZbTl5WkdWeUxYSnZkeUIwWkNCN1hHNGdJR0p2Y21SbGNpMTBiM0E2SURKd2VDQnpiMnhwWkNBalFrSkNPMXh1ZlZ4dVhHNHVkR0ZpYkdVdExXSnZjbVJsY2kxamIyd2dkR1FzWEc0dWRHRmliR1V0TFdKdmNtUmxjaTFqYjJ3Z2RHZ2dlMXh1SUNCaWIzSmtaWEl0YkdWbWREb2dNbkI0SUhOdmJHbGtJQ05DUWtJN1hHNTlYRzVjYmk1MFlXSnNaUzB0WW05eVpHVnlMV052YkNCMFpEcG1hWEp6ZEMxamFHbHNaQ3hjYmk1MFlXSnNaUzB0WW05eVpHVnlMV052YkNCMGFEcG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lHSnZjbVJsY2kxc1pXWjBPaUF3TzF4dWZWeHVYRzR2S2lCMWRHbHNhWFJwWlhNZ0tpOWNibHh1TG5SbGVIUXRiR1ZtZENCN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUTdYRzU5WEc1Y2JpNTBaWGgwTFhKcFoyaDBJSHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2djbWxuYUhRN1hHNTlYRzVjYmk1MFpYaDBMV05sYm5SbGNpQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JuMWNibHh1TG5SbGVIUXRhblZ6ZEdsbWVTQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHcDFjM1JwWm5rN1hHNTlYRzVjYmk1MFpYaDBMVzV2ZDNKaGNDQjdYRzRnSUhkb2FYUmxMWE53WVdObE9pQnViM2R5WVhBN1hHNTlYRzVjYmk1MFpYaDBMV3h2ZDJWeVkyRnpaU0I3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCc2IzZGxjbU5oYzJVN1hHNTlYRzVjYmk1MFpYaDBMWFZ3Y0dWeVkyRnpaU0I3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNTlYRzVjYmk1MFpYaDBMV05oY0dsMFlXeHBlbVVnZTF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ1kyRndhWFJoYkdsNlpUdGNibjFjYmx4dUxuVXRZMnhsWVhKbWFYZzZZbVZtYjNKbExGeHVMblV0WTJ4bFlYSm1hWGc2WVdaMFpYSWdlMXh1SUNCamIyNTBaVzUwT2lCY0lsd2lPMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVHRjYm4xY2JseHVMblV0WTJ4bFlYSm1hWGc2WVdaMFpYSWdlMXh1SUNCamJHVmhjam9nWW05MGFEdGNibjFjYmx4dUxuVXRZbXh2WTJzZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNibjFjYmx4dUxuVXRhV0pzYjJOcklIdGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVmVnh1WEc0dWRTMXBibXhwYm1VZ2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVTdYRzU5WEc1Y2JpNWliM0prWlhKbFpDQjdYRzRnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUNOQ1FrSTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE53ZUR0Y2JuMWNibHh1THlvZ1lYUjBjbWxpZFhSbElHaGxiSEJsY25NZ0tpOWNibHh1VzJScGMyRmliR1ZrWFNCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNORlJVVTdYRzRnSUdOdmJHOXlPaUFqUVRsQk9VRTVPMXh1SUNCaWIzSmtaWEl0WTI5c2IzSTZJQ05GUlVVN1hHNGdJR0p2ZUMxemFHRmtiM2M2SUc1dmJtVTdYRzRnSUhSbGVIUXRjMmhoWkc5M09pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNGdJSEJ2YVc1MFpYSXRaWFpsYm5Sek9pQnViMjVsTzF4dWZWeHVYRzViYUdsa1pHVnVYU0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNHZLaU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1ltRnpaVFkwTEdWNVNqSmFXRXA2WVZjNWRVbHFiM3BNUTBwNllqTldlVmt5Vm5wSmFuQmlTV2s1Vm1NeVZubGplVGwyV1cxV2MyRllUbkpNTW1Sd1pFZG9NVmxwT1dsYVZ6RjJURE5PZVZsNU9XbFpXRTVzVERFNWVWcFlUbXhrUXpWcVl6Tk5hVXhEU1haV1dFNXNZMjVOZG1JeVNteGlSMng2WVhrNWJtRllVbTlrVjBsMldXMVdkR0o1T1hwamJVMTJXVzFXZEdKNU5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1aRWhzZDFwVE5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1Xak5LY0ZwRE5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1ZbGRXZFdSVE5XcGpNMDFwVEVOSmRsWllUbXhqYmsxMllqSktiR0pIYkhwaGVUbHVZVmhTYjJSWFNYWlpiVlowWW5rNWVtTnRUWFpaTWpsMFkwYzVkVnBYTlRCamVUbG1XVmQ0YkdOdVVucE1iVTU2WTNsSmMwbHBPVlpqTWxaNVkzazVkbGx0Vm5OaFdFNXlUREprY0dSSGFERlphVGxwV2xjeGRrd3pUbmxaZVRscVlqSXhkMkl5Tld4aWJsSjZUREU1YVdSWVVqQmlNalY2VEcxT2VtTjVTWE5KYVRsV1l6SldlV041T1haWmJWWnpZVmhPY2t3eVpIQmtSMmd4V1drNWFWcFhNWFpNTTA1NVdYazVhbUl5TVhkaU1qVnNZbTVTZWt3eE9YUmFWMUp3V1ZNMWFtTXpUV2xNUTBsMlZsaE9iR051VFhaaU1rcHNZa2RzZW1GNU9XNWhXRkp2WkZkSmRsbHRWblJpZVRsNlkyMU5kbGt5T1hSalJ6bDFXbGMxTUdONU9XWmFiVGw1WWxoTmRWa3pUbnBKYVhkcFRERldlbHBZU25wTU1qbHBXbGQ0Y0dNeWMzWmFNbXd3WVVoV2FVd3lTbXhpVnpoMll6Tktha3d5VG5aaVdFSjJZbTFXZFdSSVRYWllNMUpvV1cxNGJHTjVOV3BqTTAxcFRFTkpkbFpZVG14amJrMTJZakpLYkdKSGJIcGhlVGx1WVZoU2IyUlhTWFpaYlZaMFluazVlbU50VFhaa1dGSndZa2hOZGxnelZqQmhWM2g2VEcxT2VtTjVTbVJNUTBwMVdWY3hiR041U1RaWE1UQnpTVzB4YUdOSVFuQmliV1I2U1dwdmFVOTZkRUpSVlVaQ1R6QldRbEV3VlRkUGVuUkNVVlZrUjA5NmRFWlJWVlpHVHpCV1FsRXdSVGRTVlVaRVVWUjBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdXVGRQZW5NM1QzcDBSbEZWTVVaUGVuTTNUekJHUWxNd1dUZFNWVVpFVWxSMFJsRlZUa0pQZW5NM1VWVk9ORkZyV1RkU1ZVWkVVbFIwUmxGVlRrSlBlbk0zVVZWR1JsSnFkRVpSVlU1R1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBlbk0zVVZWR1NGSnFkRVpSVlU1R1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRmszVWxWR1JGSlVjemRQTUVaQ1VqQlpOMDh3UmtSbFJVcENUekJXUWxGVk1EZFBlblJDVVZWT1QwOHdWa0pSVlRBM1QzcDBRbEZWVGs5UE1GWkNVVlV3TjA5NmRFSlJWVTVQVHpCV1FsRlZNRGRQZW5SQ1VWVk9UMDh3VmtKUlZUQTNUM3AwUWxGVlRrOVBNRlpDVVZVd04wOTZkRUpSVlZaUFQzcHpOMDk2Y3pkU1ZVWkVVbFIwUmxGVlRrSlBlbk0zVVZWR1NGSnFkRVpSVlVaTVQzcHpOMDk2ZEVKUlZXeE5UekJXUWxGVmN6ZFBlblJDVVZWV1RVOHdWa0pSTUZVM1VsVkdSRkZVY3pkUE1FWkNVakJSTjFKVlJrUlJlblJHVVZWT1FrOTZjemRSVlVaSVVtcDBSbEZWVGtaUE1GWkNVVEJGTjA5NmRFSlJWV1JIVHpCV1FsRXdWVGRTVlVaRVVWUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWN6ZFNWVVpHVWxSek4wOHdSa0pTTUZrM1VsVkdSRkpVZEVaUlZVNUNUM3B6TjFGVlJraFNhblJHVVZWT1JrOHdWa0pSTUVVM1VsVkdSRkZVY3pkUE1FWkNVakJaTjFKVlJrUlNWSE0zVHpCR1FsSXdXVGRTVlVaRVVsUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWRFWlJWVTVHVHpCV1FsRXdSVGRTVlVaRVVWUjBSbEZWVGtKUGVuTTNVVlZPZDFKVldUZFNWVVpFVWxSMFJsRlZUa0pQTUZaQ1VUQkZOMDk2ZEVKUlZXUkhUekJXUWxFd1ZUZFBlblJDVVZWa1IwOHdWa0pSTUZVM1QzcDBRbEZWWkVkUE1GWkNVVEJWTjA5NmRFSlJWV1JIVHpCV1FsRXdWVGRQZW5SQ1VWVmtSMDh3VmtKUk1GVTNUM3AwUWxGVlpFZFBNRlpDVVRCVk4wOTZkRUpSVldSSFR6QldRbEV3VlRkUGVuUkNVVlZrUjA4d1ZrSlJNRlUzVDNwMFFsRlZaRWRQTUZaQ1VUQlZOMDk2ZEVKUlZXUkhUekJXUWxFd1ZUZFBlblJDVVZWa1IwOHdWa0pSTUZVM1QzcDBRbEZWWkVkUE1GWkNVVEJWTjA5NmRFSlJWV1JIVHpCV1FsRXdWVGRTVlVaRVVWUnpOMDh3UmtKU01GazNVbFZHUkZKVWRFWlJWVTVDVDNwek4xRlZSa2hTYW5SR1VWVk9Sazh3VmtKUk1FVTNUM3AwUWxGVlpFZFBNRlpDVVRCVk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVbXAwUmxGVlRrWlBlbk0zVVZWTk1WSlZXVGRTVlVaRVVsUnpOMDh3UmtKU01GazNUekJXUWxKVlZUZFNWVVpFVVZSMFJsRlZUa0pQTUZaQ1VUQkZOMDk2ZEVKUlZXUkhUekJXUWxFd1ZUZFNWVVpFVVZSMFJsRlZUa0pQTUZaQ1VUQkZOMDk2ZEVKUlZXUkhUekJXUWxFd1ZUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpxZEVaUlZVNUdUekJXUWxFd1JUZFBlblJDVVZWa1IwOTZkRVpSVlZaR1R6QldRbEV3UlRkUGVuUkNVVlZrUjA4d1ZrSlJNRlUzVWxWR1JGRlVjemRQTUVaQ1VqQlpOMUpWUmtSU1ZITTNUekJHUWxJd1dUZFNWVVpFVWxSek4wOHdSa0pTTUZrM1VsVkdSRkpVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQTUZaQ1VUQkZOMUpWUmtSUlZIUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlpOMUpWUmtSU1ZIUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBNRlpDVVRCRk4wOTZkRUpSTTFwR1VtcDBSbEZWVGtaUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdXVGRTVlVaRVVsUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWRFWlJWVTVHVHpCV1FsRXdSVGRQZW5SQ1VWVmtSMDh3VmtKUk1GVTNVbFZHUkZGVWN6ZFBNRVpFWWtWS1IwOHdWa0pSTUZVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQTUZaQ1VUQkZOMUpWUmtSUlZITTNUekJHUWxOVldUZFBNRlpDVWxWVk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVbXAwUmxGVlRrWlBlbk0zVVZWR1NGSnFkRVpSVlU1R1R6QldRbEV3UlRkUGVuUkNVVlZrUjA4d1ZrSlJNRlUzVWxWR1JGRlVjemRQTUVaQ1VqQlpOMUpWUmtSU1ZIUkdVVlZPUWs5NmN6ZFJWVVpJVW1wek4xRlZSa1JSVkhSR1VWVk9Sazk2Y3pkUlZVWklVbXAwUmxGVlRrWlBlbk0zVVZWTk1WRXdXVGRTVlVaQ1dWUnpOMDh3UmtKUk1razNVbFZHUWxsNmN6ZFBNRVpDVWxkUk4xSlZSa1JSZW5SR1VWVk9Razk2Y3pkUlZVWklVa1IwUmxGVlRrUlBNRlpDVVRCRk4wOTZkRUpSTVZwRlQzcDBSbEZWVmtaUE1GWkNVVEJGTjFKVlJrUlJWSFJHVVZWT1FrOTZjemRSVlVaSVVtcDBSbEZWVGtaUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsTlZXVGRTVlVaRVVsUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWRFWlJWVTVHVHpCV1FsRXdSVGRTVlVaRVVWUnpOMDh3UmtKU01GazNUekJXUWxKVlZUZFNWVVpFVVZSek4wOHdSa0pTTUZrM1VsVkdSRkpVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpxY3pkU1ZVWkdVbFIwUmxGVlRrSlBlbk0zVVZWTmVsRXdXVGRTVlVaRVVsUnpOMDh3UmtKU01GazNUekJXUWxKVlZUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpxZEVaUlZVNUdUekJXUWxFd1JUZFBlblJDVVZWa1IwOHdWa0pSTUZVM1VsVkdSRkZVY3pkUE1FWkNVakJaTjFKVlJrUlNWSE0zVHpCR1FsTlZXVGRQTUZaQ1VsVlZOMDk2ZEVKUlZXUkhUM3AwUmxGVlRrWlBlbk0zVVZWR1NGSnFkRVpSVlU1S1QzcHpOMUZWUmtoVGFuTTNVbFZHUmxKVWN6ZFBNRVpDVWpCWk4wOHdWa0pTVlZVM1QzcDBRbFZzY0VkUGVuUkNWVEo0UkZGVWRFWlJWVVl4VVdwek4wOHdSa0pSTTFwRFR6QldRbEZZVmtOUGVuTTNVVlZHUkdSclNUZFNWVVpDWkZWSk4wOTZkRUpSVlU0eVVXcDBSbEZWUmpGUmFuTTNUekJHUWxFeldrTlBNRlpDVVZoV1EwOTZjemRSVlVaR1pHdEpOMUpWUmtKa1ZVazNUM3AwUWxGVlRqSlJhblJHVVZWR01WRnFjemRQTUVaQ1VUTmFRMDh3VmtKUldGWkRUM3B6TjFGVlJrWmthMGszVHpCV1FsSlZWVGRTVlVaRVVWUnpOMDh3UmtKU01GazNVbFZHUkZKVWN6ZFBNRVpDVWpCWk4xSlZSa0pXZW5NM1R6QkdRbEV4WnpkU1ZVWkNWMVJ6TjA4d1JrSlJNVzgzVWxWR1FsZFVjemRQTUVaQ1VsWnZOMUpWUmtSUmVuUkdVVlZPUWs5NmN6ZFJWbEpZVWtSek4xRlZSa1JSVkhSR1VWVk9Sazh3VmtKUk1FVTNVbFZHUkZGVWRFWlJWVTVDVHpCV1FsRXdSVGRTVlVaRVVWUjBSbEZWVGtKUGVuTTNVVlZHU0ZKcWRFWlJWVVpXU1dsM2FXTXlPVEZqYlU1c1l6Qk9kbUp1VW14aWJsRnBUMnh6YVV0cFFqZFlSelJuU1VkS2RtVkRNWHBoV0hCd1ltMWpOa2xIU25aamJWSnNZMmt4YVdJelp6ZFlSelU1V0VjMVkySnBOVzFpTTBwMFdERTVhbUl5TlRCamJUbHpURVo0ZFV4dFNqQmlhVUkzV0VjMFowbEhUblppUnpsNVQybENjR0p0YUd4amJXd3dUekY0ZFVsRFFtMWlNalV3VEZoT2NHVnRWVFpKUkVac1lsUjBZMkpwUVdkYWJUbDFaRU14YlZsWE1YQmlTR3MyU1Vkc2RXRkhWbmxoV0ZFM1dFYzBaMGxIZUhCaWJWVjBZVWRXY0ZveWFEQlBhVUoxWWpOS2RGbFhkemRZUnpSblNVaFNiR1ZJVVhSa1NFcG9ZbTVPYldJelNuUlBhVUoxWWpJMWJFOHhlSFZKUTBKMFdWaEtibUZYTkRaSlJFRTNXRWMxT1ZoSE5XTmlhVFZ0WWpOS2RGZ3hPV3BpTWpVd1kyMDVjMDl0YUhaa2JWWjVURVo0ZFV4dFduWmpiVEZtV0RKT2RtSnVVbmxpTW5jMldWZE9NR0ZZV214TVJuaDFURzFhZG1OdE1XWllNazUyWW01U2VXSXlkelphYlRscVpGaE5jMWhITkhWWmJsSjFUMjFhZGxrelZucE1SbmgxVEcxS01HSnFjR2haTTFKd1pHMVZjMWhITkhWWmJsSjFUMjFvZG1SdFZubEpTSFJqWW1sQloxbHRPVFJNV0U1dldWZFNkbVI2Y0dOaWFVRm5TVU5DYVdJelozUmpNbWhvV2tjNU0wOXBRWGRKUkVaM1pVTkJNV05JWjJkTVZFWjNaVU5DZVZveVNtaExSRUZ6VFVOM2QweEVRWFZOYVd0eldFYzBaMGxEUVdkaFZ6VjZXbGhSWjAxRFFURk5TRUkwU1VSQloyTnRaR2xaVTJkNVRsUlZjMDFxVlRGTVJFa3hUbE4zZDB4cVNYQlBNWGgxWmxaNGRWaEhOSFZaYmxKMVQycHZkR0pYT1RaTVYxcDJXVE5XZWt4WGJIVmliVlo1U1VoMFkySnBRV2RqUjBacldrZHNkVnA2YjJkTlJIUmpZbWxCWjFsdE9YbGFSMVo1VDJsQmQwOHhlSFZtVm5oMVNXbDNhVkZIYkhSalJ6bDVaRU5DWTBsdFNtaGpNbFYyV0ROS2RtSXpVWFZaTTA1NldFTkpOMWhITlVGaFZ6RjNZak5LTUVsR2QybFpiVVo2V2xNNVptTnRWbnBhV0ZGMVdUTk9lbGhEU1RkWVJ6VmpZbTFvTUdKWGQyZGxNWGgxU1VOQ2JXSXlOVEJNVjFwb1lsZHNjMlZVYjJkak1rWjFZM2t4ZWxwWVNuQmFhblJqWW1sQloyUkhWalJrUXpGNllWaHdiRXhYUm10aGJsWjZaRVJ2WjAxVVFYZEtWSFJqWW00eFkySnRTblphU0d0blpURjRkVWxEUW5SWldFcHVZVmMwTmtsRVFUZFlSelJuU1VkYWRtSnVVWFJqTW13MldsUnZaMDFVV25kbFJIUmpZbWxCWjJKSGJIVmFVekZ2V2xkc2JtRklVVFpKUkVWMVRrUjBZMkpwUVdkWk1qbHpZak5KTmtsRFRYcE5lazAzV0VjMU9WaEhOV05pYlVWblpURjRkVWxEUW1waU1uaDJZMnB2WjJSdFJubExRekIwWkVkb2JHSlhWbVppUjJ4MVlYbHJOMWhITkdkSlIwNHhZMjVPZG1OcWIyZGpSemx3WW01U2JHTnFkR05pYVVGblpFZFdOR1JETVd0YVYwNTJZMjFHTUdGWE9YVlBhVUoxWWpJMWJFOHhlSFZtVm5oMVdFYzFhRTl0YUhaa2JWWjVTVWgwWTJKcFFXZGtSMVkwWkVNeGExcFhUblpqYlVZd1lWYzVkVTlwUWpGaWJWSnNZMjE0Y0dKdFZUZFlSelU1V0VjMVkySnBPSEZKUjA1MllsaENkbUp0Vm5Wa1NFMW5TMms1WTJKclFuQmlXRUoyWTI1UloxaERTbXBpTWpGM1lqSTFiR0p1VW5wTU1Ua3daVmhDYkV4dFRucGpNWGRwVHpGNGRWRkhiSFJqUnpsNVpFTkNZMGx0VG5aaVdFSjJZbTFXZFdSSVRYWllNbVI1WVZkUmRWa3pUbnBZUTBrM1dFYzFRV0ZYTVhkaU0wb3dTVVozYVZreU9YUmpSemwxV2xjMU1HTjVPV1ppVjFaMVpGTTFhbU16VG1OSmFuUmpZbXRDY0dKWVFuWmpibEZuV0VOS2FtSXlNWGRpTWpWc1ltNVNla3d4T1doaVIxWjVaRWhOZFZrelRucFlRMGszV0VjMVFXRlhNWGRpTTBvd1NVWjNhVmt5T1hSalJ6bDFXbGMxTUdONU9XWlpibFl3WkVjNWRXTjVOV3BqTTA1alNXcDBZMkpyUW5CaVdFSjJZMjVSWjFoRFNtcGlNakYzWWpJMWJHSnVVbnBNTVRsMFdsZFNjRmxUTldwak0wNWpTV3AwWTJKclFuQmlXRUoyWTI1UloxaERTbXBpTWpGM1lqSTFiR0p1VW5wTU1UbHRZak5LZEdONU5XcGpNMDVqU1dwMFkySnJRbkJpV0VKMlkyNVJaMWhEU21waU1qRjNZakkxYkdKdVVucE1NVGt3V1ZkS2MxcFlUWFZaTTA1NldFTkpOMWhITldOaWFUaHhTVWhXTUdGWGVIQmtSMnhzWTNsQmNVd3hlSFZSUjJ4MFkwYzVlV1JEUW1OSmJsWXdZVmQ0ZWt3eE9URmtSMnh6WTNrMWFtTXpUbU5KYW5SallteDRkVXg1YjJkWldGSXdZMjFzYVdSWVVteEpSMmhzWWtoQ2JHTnVUV2RMYVRsallteDBhMkZZVG1oWmJYaHNXa1l3WjJVeGVIVkpRMEpwV1ZkT2Nsb3pTblprVnpWclQybEJhbEpWVmtaUE1YaDFTVU5DYW1JeWVIWmphbTluU1RCRk5WRlViRUpQVkhSalltbEJaMWx0T1hsYVIxWjVURmRPZG1KSE9YbFBhVUZxVWxWV1JrOHhlSFZKUTBKcFlqTm5kR015YUdoYVJ6a3pUMmxDZFdJeU5XeFBNWGgxU1VOQ01GcFlhREJNV0U1dldWZFNkbVI2YjJkaWJUbDFXbFIwWTJKcFFXZFpNMVo1WXpJNWVVOXBRbXRhVjFwb1pGZDRNRTh4ZUhWSlEwSjNZakpzZFdSSFZubE1WMVl5V2xjMU1HTjZiMmRpYlRsMVdsUjBZMkp1TVdOaWJIaDFWekpvY0ZwSFVteGliREJuWlRKU2NHTXpRbk5aV0dzMlNVYzFkbUp0VlRkbVZuaDFTV2wzYVV4dFozaEpTSE5uV20wNWRXUkRNWHBoV0hCc1QybENNbGxZU1c5TVV6RnZUVk5yWjJaV2VIVk1iV2Q1U1VoeloxcHRPWFZrUXpGNllWaHdiRTlwUWpKWldFbHZURk14YjAxcGEyZG1WbmgxVEcxbmVrbEljMmRhYlRsMVpFTXhlbUZZY0d4UGFVSXlXVmhKYjB4VE1XOU5lV3RuWmxaNGRVeHRaekJKU0hObldtMDVkV1JETVhwaFdIQnNUMmxDTWxsWVNXOU1VekZ2VGtOcloyWldlSFZNYldjeFNVaHpaMXB0T1hWa1F6RjZZVmh3YkU5cFFqSlpXRWx2VEZNeGIwNVRhMmRtVm5oMVRHMW5Na2xJYzJkYWJUbDFaRU14ZW1GWWNHeFBhVUl5V1ZoSmIweFRNVzlPYVd0blpsWjRkVmhITkhWaFJFVnpTVU0xYjAxcGQyZE1iV2Q2VEVOQmRXRkVVWE5KUXpWdlRsTjNaMHh0WnpKSlNIUmpZbWxCWjJKWFJubGFNbXgxVDJsQmVGcFhNR2ROUkhSalltbEJaMXB0T1hWa1F6RXpXbGRzYm1GSVVUWkpSelYyWTIweGFHSkVkR05pYmpGallteDRkVXh0WnpCSlNIUnRZakkxTUV4WVRqQmxWM2hzVDJsQ2NHUkhSbk5oVjAwM1psWjRkVmhITkhWaFJGbG5aVE14WTJKc2VIVk1ia0ZuWlhsQ2RGbFlTbTVoVnpRMlNVUkJaMDFEUVhoYVZ6Qm5abFo0ZFZoSE5IVmpRekIwWWtkV2FGcERRamRKUm5oMVNVTkNkRmxZU201aFZ6UjBXVzA1TUdSSE9YUlBhVUY0VEdwV2JHSlVkR05pYVVGbldtMDVkV1JETVhwaFdIQnNUMmxDYWxsWGVHcExSRVo1V2xjd1owdHBRWGhNYWtVeFMxUjBZMkpwUWpsWVJ6VmpZbWxCZFdORFFTdEpSMngwV25sQ04xaEhOR2RKUjFKd1l6TkNjMWxZYXpaSlIwcHpZakpPY2s4eGVIVkpRMEowV1ZoS2JtRlhORFpKUkVac1lsTkNhR1JZVW5aSlJFcHNZbFIwWTJKcFFqbFlSelZqWW1rMWVtSlhSbk5pUTBJM1dFYzBaMGxIV25aaWJsRjBZekpzTmxwVWIyZGtiVVo1UzBNd2RHTXlNSEJQTVhoMVNVTkNiV0l5TlRCTVdHUnNZVmRrYjJSRWIyZGliVGw1WWxkR2MwOHhlSFZtVm5oMVdFYzBkVmx0ZUhaWk1uUjRaRmM1TUZwVFFqZFlSelJuU1VjeGFHTnRaSEJpYW05blRVTkJkMGxFUVdkTlYxWjBUekY0ZFVsRFFuZFpWMUpyWVZjMWJrOXBRWGhhVnpCblRXazBNVnBYTURkWVJ6Um5TVWRLZG1OdFVteGphVEZ6V2xkYU1FOXBRakpaV0VsdlRGTXhhV0l6U210YVdFbHdUekY0ZFdaV2VIVllSelIxV1cxNGRsa3lkSGhrVnprd1dsTkJkV05FY0hOWldFNHdURmRPYjJGWGVHdE1RMEpqWW1rMWFXSkhPV3BoTTBZeFlqTlNiRWxETlhOaFdFNHdUMjE0YUdNelVYUlpNbWh3WWtkUloyVXhlSFZKUTBKMFdWaEtibUZYTkhSWmJUa3daRWM1ZEU5cFFYZFBNWGgxWmxaNGRWaEhOSFZpVjBaNVlYbENOMWhITkdkSlIwcG9XVEowYm1OdE9URmliVkYwV1RJNWMySXpTVFpKU0Zwb1kybG5kRXhZVW05YVZ6RnNXREpHYzFwWVNqQk1XR1JvWTIwMWNHSnRZM0JQTVhoMVNVTkNkMWxYVW10aFZ6VnVUMmxCZDB4cVNteGlWSFJqWW00eFkySnNlSFZNYlhod1l6TlJaMlV4ZUhWSlEwSjBXVmhLYm1GWE5IUmtSemwzVDJsQmQwOHhlSFZKUTBKMFdWaEtibUZYTkhSWmJUa3daRWM1ZEU5cFFYaGFWekEzV0VjMFowbElRbWhhUjFKd1ltMWpkR0pIVm0xa1JHOW5UV2swTVZwWE1EZFlSelU1V0VjMVkySnBOWE5oV0U0d1NVTTFjMkZZVGpCSlNIUmpZbWxCWjJKWFJubGFNbXgxVEZkS2RtUklVblppVkc5blRVUjBZMkp1TVdOaWJIaDFURzE0Y0dNelVYUk1XRloxWXpOU05XSkhWbXRKU0hSalltbEJaMk5IUm10YVIyeDFXbmt4YzFwWFdqQlBhVUYzVHpGNGRVbERRbk5oV0U0d1RGaE9NR1ZYZUd4UGFVSjFZakkxYkU4eGVIVm1WbmgxV0VjMWIyTnBRamRZUnpSblNVZEtkbU50VW14amFtOW5ZbTA1ZFZwVWRHTmlhVUZuWVVkV2NGb3lhREJQYVVGNVkwaG5OMWhITkdkSlIwcG9XVEowYm1OdE9URmliVkUyU1VkS2MxbFhUbkpQTVhoMVNVTkNkRmxZU201aFZ6UjBaRWM1ZDA5cFFYbGFWekEzV0VjMU9WaEhOR2xNUTBsMVdUSTVkV1JIUm5CaWJWWjVTVWgwWTJKcFFXZGlWMFkwVEZoa2NGcElVbTlQYVVJeVdWaEpiMHhUTVc1amJXeHJXREl4YUdWRE1UTmhWMUl3WVVOck4xaEhOR2RKUnpGb1kyMWtjR0pxYjJkTlEwSm9aRmhTZGs4eGVIVkpRMEozV1ZkU2EyRlhOVzVQYVVGM1NVUkdlVnBYTURkWVJ6VTVXRWMxWTJKcE5XcGlNbmQwVFZOQ04xaEhOR2RKU0dSd1draFNiMDlwUVRSTWFrMTZUWHBOZWtwVWRHTmliakZqWW14NGRVeHRUblppUXpCNVNVaDBZMkpwUVdka01teHJaRWRuTmtsRVJUSk1hbGt5VG1wWk0wcFVkR05pYmpGallteDRkVXh0VG5aaVF6QjZTVWgwWTJKcFFXZGtNbXhyWkVkbk5rbEVTVEZLVkhSalltNHhZMkpzZUhWTWJVNTJZa013TUVsSWRHTmlhVUZuWkRKc2EyUkhaelpKUkUxNlRHcE5lazE2VFhwS1ZIUmpZbTR4WTJKc2VIVk1iVTUyWWtNd01VbElkR05pYVVGblpESnNhMlJIWnpaSlJGRjRUR3BaTWs1cVdUTktWSFJqWW00eFkySnNlSFZNYlU1MllrTXdNa2xJZEdOaWFVRm5aREpzYTJSSFp6WkpSRlYzU2xSMFkySnVNV05pYkhoMVRHMU9kbUpETUROSlNIUmpZbWxCWjJReWJHdGtSMmMyU1VSVk5FeHFUWHBOZWsxNlNsUjBZMkp1TVdOaWJIaDFURzFPZG1KRE1EUkpTSFJqWW1sQloyUXliR3RrUjJjMlNVUlpNa3hxV1RKT2Fsa3pTbFIwWTJKdU1XTmliSGgxVEcxT2RtSkRNRFZKU0hSalltbEJaMlF5Ykd0a1IyYzJTVVJqTVVwVWRHTmliakZqWW14NGRVeHRUblppUXpCNFRVTkNOMWhITkdkSlNHUndXa2hTYjA5cFFUUk5lVFI2VFhwTmVrMTVWVGRZUnpVNVdFYzFZMkpwTldwaU1uZDBUVlJGWjJVeGVIVkpRMEl6WVZkU01HRkViMmRQVkVWMVRtcFpNazVxWTJ4UE1YaDFabFo0ZFZoSE5IVlpNamx6VEZSRmVVbElkR05pYVVGblpESnNhMlJIWnpaSlJFVjNUVU5WTjFoSE5UbFlSelZqWW1rMWJtTnRiR3RZTVRreFltMXNNRWxJZEdOaWFVRm5XbTE0ZGxsWVVUWkpSM2hzV201Uk4xaEhOR2RKU0VKb1drZFNjR0p0WXpaSlJFRjFUbGRXZEU4eGVIVm1WbmgxV0VjMGRWb3pTbkJhUXpCMFpFZEdhV0pIVldkbE1YaDFTVU5DYTJGWVRuZGlSMFkxVDJsQ01GbFhTbk5hVkhSalltbEJaMlF5Ykd0a1IyYzJTVVJGZDAxRFZUZFlSelU1V0VjMVkySnBOVzVqYld4clRGTXhiV0pIVmpSSlNIUmpZbWxCWjFwSGJIcGpSM2hvWlZSdloxcHRlR3hsUkhSalltbEJaMXB0ZUd4bFF6RnRZa2M1TTA5cFFubGlNMk5uWkROS2FHTkVkR05pYmpGallteDRkVXh0WkhsaFYxRjBURmhTYUZsdGVHeEpSRFJuVEcxa2VXRlhVbVpZTTFaMVlWaFJaMlV4ZUhWSlEwSnJZVmhPZDJKSFJqVlBhVUl3V1ZkS2MxcFRNV3BhVjNoelR6RjRkVWxEUWpKYVdFb3dZVmRPYUdKRE1XaGlSMnh1WW1wdloyUkhPWGRQTVhoMVNVTkNkbVJ0Vm5sYWJYaDJaSHB2WjJGSGJHdGFSMVoxVHpGNGRXWldlSFZZUnpSMVdqTktjRnBETUhSYWJYaHNaVU5CSzBsRE5XNWpiV3hyV0RFNU1XSnRiREJKU0hSalltbEJaMXB0ZUd4bFJHOW5UVlIwWTJKdU1XTmlhVWx6U1drMWRGcFhOVEZKU0hSalltbEJaMWx0Um1waE1tUjVZak5XZFZwRE1XcGlNbmgyWTJwdloyUnRSbmxMUXpCMFlsZFdkV1JXT1dsWlYwNXlXak5LZG1SWE5XdExWSFJqWW00eFkySnNlSFZNYlRGc1ltNVZjMWhITkhWak0xWnBZbGRXZFdSVFFqZFlSelJuU1VkNGNHTXpVWFJqTTFJMVlrZFZkR1JJYkhkYVZHOW5ZbTA1ZFZwVWRHTmlhVUZuWWxkR2VWb3liSFZQYVVGM1R6RjRkVWxEUW5kWlYxSnJZVmMxYms5cFFYZFBNWGgxU1VOQ2FXSXpaM1JqTW1ob1drYzVNMDlwUVhkSlJFcDNaVU5CTUdOSVoyZGpiV1JwV1ZObmQweEVRWE5OUTNkM1RHcEpjRTh4ZUhWbVZuaDFXRWMwZFdKWFZuVmtWamxtWkVkc01HSkhWV2RsTVhoMVNVTkNiV0l5TlRCTVdHUnNZVmRrYjJSRWIyZFpiVGx6V2tSMFkySnBRV2RhYlRsMVpFTXhlbUZZY0d4UGFVSXlXVmhKYjB4VE1XOU5lV3MzV0VjMFowbElRbWhhUjFKd1ltMWpOa2xFUVdka2JVWjVTME13ZEZvelZqQmtSMVo1UzFSMFkySnBRV2RaTWpsellqTkpOa2xJV21oamFXZDBURmhTYjFwWE1XeFlNMEo1WVZjeGFHTnVhM0JQTVhoMVpsWjRkVmhITkhWaVYxWjFaRlk1Wm1GWVVteGlVMEkzV0VjMFowbEhVbkJqTTBKeldWaHJOa2xIU25OaU1rNXlUekY0ZFVsRFFtcGlNbmgyWTJwdloyRlhOVzlhV0Vwd1pFUjBZMkpwUVdkalIwWnJXa2RzZFZwNmIyZGtiVVo1UzBNd2RGb3pWakJrUjFaNVMxUjBZMkp1TVdOaWJIaDFXVk0xZEZwWE5URllNVGx3WkVkV2RFOXRhSFprYlZaNVNVaDBZMkpwUVdkWk1qbHpZak5KTmtsSVdtaGphV2QwVEZoU2IxcFhNV3hZTW5od1ltMXpjRTh4ZUhWSlEwSXdXbGhvTUV4WFVteFpNamw1V1ZoU2NHSXlORFpKUnpWMlltMVZOMWhITlRsWVJ6VmpZbWsxYjFsWVRYUmpNMVpwWWxkV2RXUlVjRzlpTTFwc1kybEJkV016Vm1saVYxWjFaRk40WTJKcE5YcGtWMHAwV2xjMU1VOXRhSFprYlZaNVNVaDBZMkpwUVdka2JXeDZZVmRLY0dKSGJEQmxWRzluWkcxc2VtRlhTbk5hVkhSalltbEJaMkl6UW1oWk1td3daVlJ2WjAxVWRHTmliakZqWW14NGRVeHRNV3hpYmxWMFRGZG9kbU50YkRaaU1qVXdXVmQzWjFCcFFuTmhVMEkzV0VjMFowbEhVbkJqTTBKeldWaHJOa2xIYkhWaVIyeDFXbE14YVdKSE9XcGhlblJqWW1sQloyUnRWbmxrUjJ4cVdWZDNkRmxYZUhCYU1qUTJTVWN4Y0ZwSFVuTmFWSFJqWW00eFkySnNlSFZNYldob1kza3hlbVJYU25SYVZ6VXhTVWgwWTJKcFFXZGpSemw2WVZoU2NHSXlORFpKU0Vwc1lrZEdNR0ZZV214UE1YaDFabFo0ZFZoSE5IVmhSMFo2VEZoT01WbHRNV3hpYmxWblVHbEJkV0pYVm5Wa1ZqbG1ZVmhTYkdKVFFqZFlSelJuU1VoQ2FGcEhVbkJpYldOMFkyMXNibUZJVVRaSlJFcHNZbFIwWTJKdU1XTmliSGgxVEcxb2FHTjVNWHBrVjBwMFdsYzFNVWxFTkdkTWJURnNZbTVXWmxneWJEQmFWekEyVDIxR2JXUkhWbmxKU0hSalltbEJaMWt5T1hWa1IxWjFaRVJ2WjBwNVl6ZFlSelJuU1VoQ2RtTXliREJoVnpsMVQybENhRmx1VG5aaVNGWXdXbFIwWTJKcFFXZGlWMFo1V2pKc2RVOXBRWGRNYWsweFdsY3dOMWhITkdkSlIyaHNZVmRrYjJSRWIyZE5SSFJqWW1sQloyUXliR3RrUjJjMlNVUkJOMWhITkdkSlIwcDJZMjFTYkdOcE1YbGhWMlJ2WkVSdlowMUROSHBPVjFaMFNVaE9kbUpIYkd0SlNGSjVXVmMxZW1OSFJubGFWelV3VHpGNGRVbERRbWxpTTBwcldsaEpkR0pIVm0xa1JHOW5UVU0wZWs1WFZuUkpTRTUyWWtkc2EwbElVbmxaVnpWNlkwZEdlVnBYTlRCUE1YaDFTVU5DYVdJelNtdGFXRWwwWkVjNWQwOXBRWGRNYWxac1lsTkNlbUl5ZUhCYVJIUmpZbWxCWjJOdGJHNWhTRkUyU1VSQmRVNVhWblJQTVhoMVNVTkNNR0l6UVRaSlJFWnNZbFIwWTJKdU1XTmliSGgxVEc1T01WbHRNV3hpYmxWblpURjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRakpaV0VsdlRGTXhkRnBYTlRGWU1rcG9XVEowYm1OdE9URmliVkZ3VHpGNGRVbERRblJoVnpSMFpESnNhMlJIWnpaSlJFVXhUVWhDTkU4eGVIVkpRMEpwWWpOS2ExcFlTWFJqYlVacllWaFdlazlwUWpKWldFbHZURk14YVdJelNtdGFXRXBtWTIxR2EyRllWbnBMVkhSalltbEJaMlJJU21oaWJrNXdaRWRzZG1KcWIyZGtiV3g2WVZkS2NHSkhiREJsVTBFeFRVUkNkR041ZDJkaU0wSm9XVEpzTUdWVFFYbE9WRUowWTNsQmVVNVVRblJqZW5SalltbEJaMk5IT1hwaFdGSndZakkwTmtsSFJtbGpNamx6WkZoU2JFOHhlSFZKUTBKeldsZGFNRTlwUVhSTlYxWjBUekY0ZFVsRFFubGhWMlJ2WkVSdloweFVSbXhpVkhSalltbEJaMlJ0YkhwaFYwcHdZa2RzTUdWVWIyZGhSMnhyV2tkV2RVOHhlSFZKUTBKMlkwZEdhbUZZVWpWUGFVRjNUekY0ZFdaV2VIVkphWGRwVEcxR2MxcFlTakJKU0hSalltbEJaMk5IUm10YVIyeDFXbnB2WjFreVJuTlplV2d5V1ZoSmIweFRNVzVrV0ZJd1dsaEpjRXg2VVhCSlIwNW9Za2ROYjJSdFJubExRekIwV2pOV01HUkhWbmxMVXpoNVMxUjBZMkpwUVdkWmJUbDVXa2RXZVV4WVNtaGFSMnd4WTNwdloyUnRSbmxMUXpCMFdXMDVlVnBIVm5sWU0wcG9Xa2RzTVdONWF6ZFlSelJuU1VjeGFHTnRaSEJpYW05blRVTTBNVnBYTUdkTlJIUmpZbTR4WTJKc2VIVk1iVVp6V2xoS01FeFRNV3hqYmtwMlkybENOMWhITkdkSlIwcG9XVEowYm1OdE9URmliVkYwV1RJNWMySXpTVFpKUjA1MllrYzVlVXRJV21oamFXZDBURmhTYjFwWE1XeFlNa1p6V2xoS01FeFhWbmxqYlRsNVkzbHJaMlJIYkhWa1EyY3hUVU5WY0V0VWRHTmlhVUZuV1RJNWMySXpTVFpKUjA1MllrYzVlVXRJV21oamFXZDBURmhTYjFwWE1XeFlNa1p6V2xoS01FeFhWbmxqYlRsNVkzbHJaMk15YUdoYVIxVnZUV3BWYkV0VGJHTmliakZqWW14NGRVeHRSbk5hV0Vvd1RGTXhlbVJYVG1wYVdFNTZTVWgwWTJKcFFXZFpiVVpxWVRKa2VXSXpWblZhUXpGcVlqSjRkbU5xYjJkWk1qbHpZak5KYjJSdFJubExRekIwWkVkb2JHSlhWbVpaVjNoc1kyNVJkR016Vm1wWk1sWjZZM2xyWjJSSGJIVmtRMmN4VFVOVmNFdFVkR05pYVVGbldUSTVjMkl6U1RaSlIwNTJZa2M1ZVV0SVdtaGphV2QwVEZoU2IxcFhNV3hZTWtaeldsaEtNRXhZVGpGWk1rNXNZek5OY0VsSVRtOVpWMUpzUzBSSk1VcFRhM0JZUnpVNVdFYzFZMkpwTldoaVIxWjVaRU13ZEdGWE5XMWllVUkzV0VjMFowbEhTbWhaTW5SdVkyMDVNV0p0VVhSWk1qbHpZak5KTmtsSFRuWmlSemw1UzBoYWFHTnBaM1JNV0ZKdldsY3hiRmd5Um5OYVdFb3dURmhrYUdOdE5YQmliV053U1VoU2NHSnVVVzlPVkVGc1MxTnJOMWhITkdkSlIwNTJZa2M1ZVU5cFFtcGlNbmgyWTJsb01sbFlTVzlNVXpFd1lVZFdkRnBXT1doaVIxWjVaRU14TTFsWVNuVmhWelZ1UzFOQ2VtRkhSbXRhVTJkNVRsTlZjRXRXZUhWbVZuaDFTV2wzYVV4dFNqQmlhVUkzV0VjMFowbEhTbWhaTW5SdVkyMDVNV0p0VVhSWk1qbHpZak5KTmtsSVdtaGphV2QwVEZka2VWbFlhM0JQTVhoMVNVTkNhVmxYVG5KYU0wcDJaRmMxYTA5cFFqQmpiVVoxWXpOQ2FHTnRWblZrUkhSalltbEJaMXBIYkhwalIzaG9aVlJ2WjJGWE5YTmhWelZzVEZkS2MySXlUbkpQTVhoMVNVTkNhV0l6U210YVdFazJTVWhhYUdOcFozUk1WMHAyWTIxU2JHTnBhMmRrYlVaNVMwTXdkRm96U21obFZqbHpaRWhLWmxsVGF6ZFlSelJuU1VkS2RtTnRVbXhqYVRGNVdWZFNjR1JZVFRaSlNGcG9ZMmxuZEV4WFNuWmpiVkpzWTJ3NWVWbFhVbkJrV0Uxd1R6RjRkVWxEUW5kWlYxSnJZVmMxYms5cFFYZE1hbFpzWWxOQmVGcFhNRGRZUnpSblNVZE9NV051VG5aamFtOW5ZMGM1Y0dKdVVteGphblJqWW1sQloxbHRPVFJNV0U1dldWZFNkbVI2YjJkTlEwRjRZMGhuWjA1WVFqUkpRekI0WTBobloyTnRaR2xaVTJkM1RFUkJjMDFEZDNkTWFrbHdUekY0ZFZoSE5UbFlSelZqWW1rMWFXUkhORFphYlRscVpGaE5jMWhITkhWWmJsSjFUMjFvZG1SdFZubEpTSFJqWW1sQloySXpWakJpUjJ4MVdsUnZaMDFFZEdOaWFVRm5XVzA1ZVZwSFZubE1WMDUyWWtjNWVVOXBRakpaV0VsdlRGTXhibU50UmpWWU1uZ3dXREpGY0U4eGVIVkpRMEl3V2xob01FeFhVbXhaTWpsNVdWaFNjR0l5TkRaSlJ6VjJZbTFWTjFoSE5UbFlSelZqWW1rMWFXUkhORFpaVjA0d1lWaGFiRWxJZEdOaWFVRm5XVzA1TkV4WVRtOVpWMUoyWkhwdloyRlhOWHBhV0ZGblRVTkJNVTFJUWpSSlJFRm5aRzFHZVV0RE1IUmFNMHBvWlZZNWMyUklTbVpaVTJzM1dFYzFPVmhITldOaWFUVnBaRWMwZEV4WVFubGhWekZvWTI1cloyVXhlSFZKUTBKcFdWZE9jbG96U25aa1Z6VnJURmRPZG1KSE9YbFBhVUl5V1ZoSmIweFRNVEJoUjFaMFdsWTVkMk50YkhSWldFbzFTMVIwWTJKcFFXZFpNamx6WWpOSk5rbElaRzloV0ZKc1R6RjRkV1pXZUhWWVJ6UjFXVzVTZFV4VE1YcGFWMDUyWW0xU2FHTnVhMmRsTVhoMVNVTkNhVmxYVG5KYU0wcDJaRmMxYTB4WFRuWmlSemw1VDJsQ01sbFlTVzlNVXpFd1lVZFdkRnBXT1hwYVYwNTJZbTFTYUdOdWEzQlBNWGgxU1VOQ2FtSXllSFpqYW05blpESm9jR1JIVlRkWVJ6VTVXRWMxWTJKcE5XbGtSelIwVEZoU2JHTnVVbkJaV0VvMVNVaDBZMkpwUVdkWmJVWnFZVEprZVdJelZuVmFRekZxWWpKNGRtTnFiMmRrYlVaNVMwTXdkR1JIYUd4aVYxWm1aRWRXZVdSSGJHaGpibXR3VHpGNGRVbERRbXBpTW5oMlkycHZaMlF5YUhCa1IxVTNXRWMxT1ZoSE5XTmlhVGh4U1VWS01Wb3lXbkJsUjFaNlNVTnZkbGhITkhWWmJsSjFTVU56WjB4dFNqQmlhVUkzV0VjMFowbEhNV2hqYldSd1lta3hjMXBYV2pCUGFVRXhZMGhuTjFoSE5UbFlSelZqWW1rMWFXUkhOSFZqU0ZaellrTXhlV0ZYWkc5a1EwRnlTVU0xYVdSSE5IVmpTRlp6WWtNeGVXRlhaRzlrUTBJM1dFYzBaMGxITVdoamJXUndZbWt4ZVdGWFpHOWtSRzluVGxoQ05FOHhlSFZtVTBselNXazFkMlJYZUhOTVYzaHNXbTVSWjJWNVFtMWlSemxvWkVSdloySkhWbTFrUkhOblpsWjRkVXh1UWpGaVIzZDBZMjFzYm1GSVVXZGxlVUp0WWtjNWFHUkViMmRqYld4dVlVaFJOMGxJTVdOaWJIaDFURzB4YkZwSGJHaEpTSFJqWW14NE1GcEhiSHBqUjNob1pWUnZaMWx0ZUhaWk1uTTNXRWMxWTJSSE9USmFXRXB0WWtjNU0wOXBRbTloVjFKcldsYzBOMWhITlRsWVJ6VmpZbWsxZEZwWFVuQlpWamxtV1cwNWEyVlRRamRZUnpWalpFYzVNbHBZU20xaVJ6a3pUMmxDYjJGWFVtdGFWelEzV0VjMVkyUklRbWhhUjFKd1ltMWpOa2xIVG1oaVIwMXZaRzFHZVV0RE1IUmFNMVl3WkVkV2VVbERPR2ROYVd0d1R6RjRkV1pXZUhWSmFYZHBURzFhZG1OdE1XWllNMHBvV2tkc2RrbEVOR2RoVnpWM1pGaFJjMWhITkhWYWJUbDVZbFk1WmxreWFHeFpNblJwWWpObloxQnBRbkJpYmtJeFpFTkNOMWhITkdkSlIxcDJZbTVSZEdNeWJEWmFWRzluVFZSQmQwcFVkR05pYVVGbllrZHNkVnBUTVc5YVYyeHVZVWhSTmtsSE5YWmpiVEZvWWtSMFkySnBRV2RrYlZaNVpFZHNhbGxYZDNSWlYzaHdXakkwTmtsSFNtaGpNbFp6WVZjMWJFOHhlSFZKUTBKMFdWaEtibUZYTkRaSlJFRm5UVU0wTVZwWE1EZFlSelU1V0VjMVkySnRXbkJhVjNocll6SldNRWxJZEdOaWFVRm5ZMGRHYTFwSGJIVmFlbTluVFVOQmVWcFhNR2ROYlZaMFR6RjRkVWxEUW1saU0wcHJXbGhKTmtsSVdtaGphV2QwVEZkS2RtTnRVbXhqYVdzM1dFYzBaMGxIU25aamJWSnNZMmt4ZVZsWFVuQmtXRTAyU1VoYWFHTnBaM1JNVjBwMlkyMVNiR05zT1hsWlYxSndaRmhOY0U4eGVIVllSelU1V0VjMVkySnRlR3hhTWxaMVdrTkNOMGxHZUhWSlEwSjNXVmRTYTJGWE5XNVBhVUY0V2xjd04xaEhOR2RKUjFwMlltNVJkR1F5Vm5CYU1tZ3dUMmxDYVdJeWVHdFBNWGgxWmxaNGRWaEhOWE5aVjBwc1lrTkNOMWhITkdkSlIxSndZek5DYzFsWWF6WkpSMHB6WWpKT2NrOHhlSFZKUTBKMFlWYzBkR1F5Ykd0a1IyYzJTVVJhYkdKVWRHTmlhVUZuWWxkR2VWb3liSFZQYVVKcVdWZDRha3RJV21oamFXZDBURmRrTVdSSVVteGphV3QyVGtOclowMUVkR05pYmpGallteDRkVXh0V25aamJURm1XRE5LYUZwSGJIWk1SbmgxVEcxYWRtTnRNV1pZTWs1dldsZE9jbGx0T1RSSlNIUmpZbWxCWjJKWFJubGFNbXgxVDJsQmRVNVhWblJKUkVFM1dFYzBaMGxIVW5Cak0wSnpXVmhyTmtsSFNuTmlNazV5VHpGNGRXWlRRbU5pYkhoMVRHMWFkbU50TVdaWU1rNTJZbTVTZVdJeWQyZGxNWGgxU1VOQ2EyRllUbmRpUjBZMVQybENhV0pIT1dwaGVuUmpZbWxCWjFsdE9YbGFSMVo1VDJsQ01sbFlTVzlNVXpGcFlqTkthMXBZU1hCSlNGcG9ZMmxuZEV4WFpIbFpXR3htWWtoU2VWZ3lSWEJQTVhoMVNVTkNhV0l6U210YVdFbDBZMjFHYTJGWVZucFBhVUl5V1ZoSmIweFRNV2xpTTBwcldsaEtabU50Um10aFdGWjZTMVIwWTJKcFFXZGpSMFpyV2tkc2RWcDZiMmROUXpReFdsY3daMDFYVm5SUE1YaDFTVU5DZEZsWVNtNWhWelIwV1cwNU1HUkhPWFJQYVVJeVdWaEpiMHhUTVc1a1dGSXdXbGhKY0U4eGVIVm1WbmgxV0VjMGRWcHRPWGxpVmpsbVdUSTVkV1JJU25aaVJIQnZZak5hYkdOcGVHTmlhVFZ0WWpOS2RGZ3hPV3BpTWpVd1kyMDVjMDl0V25aWk0xWjZTVWgwWTJKcFFXZFpiVGw1V2tkV2VVeFhUblppUnpsNVQybENNbGxZU1c5TVV6RXdZVWRXZEZwV09YZGpiV3gwV1ZoS05VdFVkR05pYVVGbllqTldNR0pIYkhWYVZHOW5UVVIwWTJKdU1XTmlhVWx6U1drMU1GbFhTbk5hVTBJM1dFYzBaMGxIU25aamJWSnNZMmt4YW1JeWVITlpXRUo2V2xSdloxa3lPWE5pUjBaM1l6SlZOMWhITlRsWVJ6VmpZbWsxTUZsWFNuTmFVMEl3V2tONFkySnBOVEJaVjBweldsTkNNR0ZEUWpkWVJ6Um5TVWhDYUZwSFVuQmliV00yU1VkT2FHSkhUVzlrYlVaNVMwTXdkRm96VmpCa1IxWjVTMU5CZGtsRVNYQlBNWGgxU1VOQ01GcFlhREJNVjBaellWZGtkVTlwUW5OYVYxb3dUekY0ZFVsRFFuUmhWelIwWkRKc2EyUkhaelpKUkVWNFRVaENORTh4ZUhWbVZuaDFXRWMwZFdSSFJtbGlSMVZuWkVkb2JGbFhVV2RrUjJkblpURjRkVWxEUWpKYVdFb3dZVmRPYUdKRE1XaGlSMnh1WW1wdloxbHRPVEJrUnpsMFR6RjRkVWxEUW1saU0wcHJXbGhKZEZsdE9UQmtSemwwVDJsQmVXTklaMmRqTWpsellWZFJaMlJ0Um5sTFF6QjBXak5LYUdWV09YTmtRMnMzV0VjMU9WaEhOV05pYVRVd1dWZEtjMXBUUWpCYWJUbDJaRU5DTUZwRFFqZFlSelJuU1VoYWJHTnVVbkJaTWtaelRGZEdjMkZYWkhWUGFVSXdZak5CTjFoSE5HZEpSMHAyWTIxU2JHTnBNVEJpTTBFMlNVUktkMlZEUW5waU1uaHdXa05DTWxsWVNXOU1VekZ1WTIxR05WZ3llREJMVkhSalltNHhZMkpzZUhWTWJsSm9XVzE0YkV4VE1UWmFWMHA1V1ZNeGVXSXpZMmRrUjBwMldraHJaMlJJU1RaaWJsSnZURmRPYjJGWGVHdExSMVl5V2xjMGNFbERRamRZUnpSblNVZEthRmt5ZEc1amJUa3hZbTFSZEZreU9YTmlNMGsyU1VoYWFHTnBaM1JNVjJSNVdWaHNabUpJVW5sTFZIUmpZbTR4WTJKc2VIVllSelIxWkVkR2FXSkhWWFJNV0hCc1dXNUthRXhYVG5aaVEwSXdZVVJ3ZFdSSFozUlpNbWh3WWtkUmIxcFlXbXhpYVd0eldFYzBkV1JIUm1saVIxVjBURmh3YkZsdVNtaE1WMDUyWWtOQ01GcEVjSFZrUjJkMFdUSm9jR0pIVVc5YVdGcHNZbWxyWjJVeGVIVkpRMEpwV1ZkT2Nsb3pTblprVnpWclRGZE9kbUpIT1hsUGFVSXlXVmhKYjB4VE1XNWpiVVkxV0RKNE1HTnBhemRZUnpVNVdFYzFZMkpwTlRCWlYwcHpXbE13ZEZsdE9YbGFSMVo1VEZkR2MySkRRakJhUTNkblRHNVNhRmx0ZUd4TVV6RnBZak5LYTFwWVNYUlpWM2h6U1VoU2IwbElkR05pYVVGbldXMDVlVnBIVm5sUGFVSXlXVmhKYjB4VE1XbGlNMHByV2xoSmNFbElXbWhqYVdkMFRGZGtlVmxZYkdaaVNGRndUekY0ZFdaV2VIVllSelIxWkVkR2FXSkhWWFJNVjBwMlkyMVNiR05wTVhsaU0yTm5aRWRSWjJVeGVIVkpRMEZuU1VkS2RtTnRVbXhqYVRFd1lqTkJOa2xJV21oamFXZDBURmRLZG1OdFVteGphV3RuWkcxR2VVdERNSFJhTTBwb1pWWTVjMlJEYXpkWVJ6VTVXRWMxWTJKcE5UQlpWMHB6V2xNd2RGbHRPWGxhUjFaNVRGZE9kbUpEUWpCYVEzaGpZbWsxTUZsWFNuTmFVekIwV1cwNWVWcEhWbmxNVjA1MllrTkNNR0ZEUWpkWVJ6Um5TVWRLZG1OdFVteGphVEZ6V2xkYU1FOXBRakpaV0VsdlRGTXhhV0l6U210YVdFbHdTVWhhYUdOcFozUk1WMlI1V1Zoc1ptSklVWEJQTVhoMVpsWjRkVmhITkhWa1IwWnBZa2RWZEV4WFNuWmpiVkpzWTJreGFtSXlkMmRrUjFFMldtMXNlV016VVhSWk1taHdZa2RSYzFoSE5IVmtSMFpwWWtkVmRFeFhTblpqYlZKc1kya3hhbUl5ZDJka1IyYzJXbTFzZVdNelVYUlpNbWh3WWtkUloyVXhlSFZKUTBKcFlqTkthMXBZU1hSaVIxWnRaRVJ2WjAxR2VIVm1WbmgxU1dsM2FVeHVVbXhsU0ZGMFlrZFdiV1JEUVdkSlEwRm5TVU5CWjBsRFFXZGxlVUl3V2xob01FeFhSbk5oVjJSMVQybENjMXBYV2pCSlNERmpZbWsxTUZwWWFEQk1XRXB3V2pKb01FbERRV2RKUTBGblNVTkJaMGxJYzJka1IxWTBaRU14YUdKSGJHNWlhbTluWTIxc2JtRklVV2RtVm5oMVRHNVNiR1ZJVVhSWk1sWjFaRWRXZVVsRFFXZEpRMEZuU1VOQloyVjVRakJhV0dnd1RGZEdjMkZYWkhWUGFVSnFXbGMxTUZwWVNXZG1WbmgxVEc1U2JHVklVWFJoYmxaNlpFZHNiV1ZUUVdkSlEwRm5TVU5CWjJWNVFqQmFXR2d3VEZkR2MyRlhaSFZQYVVKeFpGaE9NR0ZYV2pWSlNERmpZbWsxTUZwWWFEQk1WelYyWkROS2FHTkRRV2RKUTBGblNVTkJaMGxJYzJka01taHdaRWRWZEdNelFtaFpNbFUyU1VjMWRtUXpTbWhqUTBJNVdFYzFZMkpwTlRCYVdHZ3dURmQ0ZG1ReVZubFpNa1o2V2xOQlowbERRV2RKU0hOblpFZFdOR1JETVRCamJVWjFZekphZG1OdE1EWkpSM2gyWkRKV2VWa3lSbnBhVTBJNVdFYzBkV1JIVmpSa1F6RXhZMGhDYkdOdFRtaGpNbFZuU1VOQlowbERRamRKU0ZKc1pVaFJkR1JJU21oaWJrNXRZak5LZEU5cFFqRmpTRUpzWTIxT2FHTXlWV2RtVm5oMVRHNVNiR1ZJVVhSWk1rWjNZVmhTYUdKSGJEWmFVMEZuU1VOQloyVjVRakJhV0dnd1RGaFNlVmxYTlhwYWJUbDVZbFJ2WjFreVJuZGhXRkpvWWtkc05scFRRamxZUnpWalltazFNVXhYVG5OYVYwWjVXbTFzTkU5dFNteGFiVGw1V2xONFkySnBOVEZNVjA1eldsZEdlVnB0YkRSUGJVWnRaRWRXZVVsSWRHTmlhVUZuV1RJNWRXUkhWblZrUkc5bldFTktZMGxxZEdOaWFVRm5Xa2RzZW1OSGVHaGxWRzluWkVkR2FXSkhWVGRZUnpVNVdFYzFZMkpwTlRGTVYwNXpXbGRHZVZwdGJEUlBiVVp0WkVkV2VVbElkR05pYVVGbldUSjRiRmxZU1RaSlIwcDJaRWRuTjFoSE5UbFlSelZqWW1rMU1VeFhTbk5pTWs1eVNVaHpaMXBIYkhwalIzaG9aVlJ2WjFsdGVIWlpNbk5uWmxaNGRVeHVWWFJoVjBwellqSk9ja2xJYzJkYVIyeDZZMGQ0YUdWVWIyZGhWelZ6WVZjMWJFeFhTbk5pTWs1eVNVZ3hZMkpwTlRGTVYyeDFZa2RzZFZwVFFqZEpSMUp3WXpOQ2MxbFlhelpKUjJ4MVlrZHNkVnBUUWpsWVJ6VmpZbWsxYVdJelNtdGFXRXBzV2tOQ04xaEhOV05rUjBwMlkyMVNiR05xYjJka2JVWjVTME13ZEZsdE9YbGFSMVo1UzFOQ01sbFlTVzlNVXpGdVkyMUdOVmd5ZURCTFZIUmpZbXg0TUZsdE9YbGFSMVo1VEZoS2FGcEhiREZqZW05blpHMUdlVXRETUhSWmJUbDVXa2RXZVZnelNtaGFSMnd4WTNsck4xaEhOVGxKYkRFNUlDb3ZJaXdpUUdsdGNHOXlkQ0JjSW1KaGMyVXZYM0p2YjNRdVkzTnpYQ0k3WEc1QWFXMXdiM0owSUZ3aVltRnpaUzlmY21WelpYUXVZM056WENJN1hHNWNibWgwYld3Z2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ2MyRnVjeTF6WlhKcFpqdGNiaUFnZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUdGNibjFjYm1KdlpIa2dlMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVORHRjYmlBZ1kyOXNiM0k2SUNNek16TTdYRzU5WEc1Y2JtRWdlMXh1SUNCamIyeHZjam9nZG1GeUtDMHRkR2hsYldWZmJHbHVheWs3WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dWZWeHVYRzVoT21odmRtVnlJSHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hHNTlYRzVjYmk4cUlHTnZiWEJ2Ym1WdWRITWdLaTljYmtCcGJYQnZjblFnWENKamIyMXdiMjVsYm5SekwxOTBlWEJsTG1OemMxd2lPMXh1UUdsdGNHOXlkQ0JjSW1OdmJYQnZibVZ1ZEhNdlgyZHlhV1F1WTNOelhDSTdYRzVBYVcxd2IzSjBJRndpWTI5dGNHOXVaVzUwY3k5ZmJXVnVkUzVqYzNOY0lqdGNia0JwYlhCdmNuUWdYQ0pqYjIxd2IyNWxiblJ6TDE5aGJHVnlkSE11WTNOelhDSTdYRzVBYVcxd2IzSjBJRndpWTI5dGNHOXVaVzUwY3k5ZlluVjBkRzl1Y3k1amMzTmNJanRjYmtCcGJYQnZjblFnWENKamIyMXdiMjVsYm5SekwxOXRaV1JwWVM1amMzTmNJanRjYmtCcGJYQnZjblFnWENKamIyMXdiMjVsYm5SekwxOW1iM0p0Y3k1amMzTmNJanRjYmtCcGJYQnZjblFnWENKamIyMXdiMjVsYm5SekwxOTBZV0pzWlhNdVkzTnpYQ0k3WEc1Y2JpOHFJSFYwYVd4cGRHbGxjeUFxTDF4dVFHbHRjRzl5ZENCY0luVjBhV3h6TDE5MWRHbHNjeTVqYzNOY0lqdGNibHh1THlvZ1lYUjBjbWxpZFhSbElHaGxiSEJsY25NZ0tpOWNibHRrYVhOaFlteGxaRjBnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqUlVWRk8xeHVJQ0JqYjJ4dmNqb2dJMEU1UVRsQk9UdGNiaUFnWW05eVpHVnlMV052Ykc5eU9pQWpSVVZGTzF4dUlDQmliM2d0YzJoaFpHOTNPaUJ1YjI1bE8xeHVJQ0IwWlhoMExYTm9ZV1J2ZHpvZ2JtOXVaVHRjYmlBZ1kzVnljMjl5T2lCa1pXWmhkV3gwTzF4dUlDQndiMmx1ZEdWeUxXVjJaVzUwY3pvZ2JtOXVaVHRjYm4xY2JseHVXMmhwWkdSbGJsMGdlMlJwYzNCc1lYazZJRzV2Ym1VN2ZWeHVJaXdpTG1neElIc2dabTl1ZEMxemFYcGxPaUIyWVhJb0xTMW9NU2tnZlZ4dUxtZ3lJSHNnWm05dWRDMXphWHBsT2lCMllYSW9MUzFvTWlrZ2ZWeHVMbWd6SUhzZ1ptOXVkQzF6YVhwbE9pQjJZWElvTFMxb015a2dmVnh1TG1nMElIc2dabTl1ZEMxemFYcGxPaUIyWVhJb0xTMW9OQ2tnZlZ4dUxtZzFJSHNnWm05dWRDMXphWHBsT2lCMllYSW9MUzFvTlNrZ2ZWeHVMbWcySUhzZ1ptOXVkQzF6YVhwbE9pQjJZWElvTFMxb05pa2dmVnh1WEc0dWFERXNJQzVvTWl3Z0xtZ3pMQ0F1YURRc0lDNW9OU3dnTG1nMklIdGNiaUFnYldGeVoybHVPaUF4WlcwZ01EdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHNXZjbTFoYkR0Y2JuMWNibHh1TG1nMElIdG1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTTdmVnh1WEc0dWFEWWdlMzFjYmx4dUxuQWdleUJ0WVhKbmFXNDZJREFnTUNBeFpXMGdmVnh1WEc0dWNDMHRiR1ZoWkNCN0lGeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhMalZsYlR0Y2JpQWdabTl1ZEMxemFYcGxPaUJqWVd4aktERnlaVzBnS2lBeExqRTFLVHRjYmlCOVhHNWNiaUF1Y0NBK0lHbHRaeUI3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQnRZWEpuYVc0NklERmxiU0JoZFhSdklESmxiVHRjYmlCOVhHNWNiaTV6YldGc2JDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0YzIwcE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2JtOXliV0ZzTzF4dWZWeHVYRzR1WW14dlkydHhkVzkwWlNCN1hHNGdJRzFoY21kcGJqb2dNQ0F3SURBZ01XVnRPMXh1SUNCd1lXUmthVzVuT2lBeFpXMGdNaTQxWlcwN1hHNGdJR0p2Y21SbGNpMXNaV1owT2lCMllYSW9MUzFpYjNKa1pYSXBPMXh1ZlZ4dVhHNHVZbXh2WTJ0eGRXOTBaU0F1Y0Rwc1lYTjBMV05vYVd4a0xDQmNiaTVpYkc5amEzRjFiM1JsSUM1c2FYTjBPbXhoYzNRdFkyaHBiR1FnZTF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBd08xeHVmVnh1WEc0dWJXRnlheUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIWmhjaWd0TFhSb1pXMWxYMkZzWlhKMExYZGhjbTVwYm1jcE8xeHVJQ0J3WVdSa2FXNW5PaUF3TGpKbGJUdGNibjFjYmx4dUxteHBjM1FnZTF4dUlDQnRZWEpuYVc0dGRHOXdPaUF3TzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeFpXMDdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dNaTQxWlcwN1hHNTlYRzVjYmk1c2FYTjBJQzVzYVhOMElIdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjYm4xY2JseHVMbXhwYzNRdExYVnVjM1I1YkdWa0lIdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXdPMXh1SUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dWZWeHVYRzVvY2lCN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JpQWdhR1ZwWjJoME9pQXljSGc3WEc0Z0lHSmhZMnRuY205MWJtUTZJR0pzWVdOck8xeHVJQ0J0WVhKbmFXNHRkRzl3T2lBeVpXMDdYRzU5WEc0aUxDSXVZMjl1ZEdGcGJtVnlJSHRjYmlBZ2JXRjRMWGRwWkhSb09pQjJZWElvTFMxbmNtbGtYMjFoZUMxM2FXUjBhQ2s3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQndZV1JrYVc1bk9pQXdJREZ5WlcwN1hHNTlYRzVjYmk1amIyd3RNU0I3WEc0Z0lIZHBaSFJvT2lBNExqTXpNek16SlR0Y2JuMWNibHh1TG1OdmJDMHlJSHRjYmlBZ2QybGtkR2c2SURFMkxqWTJOalkzSlR0Y2JuMWNibHh1TG1OdmJDMHpJSHRjYmlBZ2QybGtkR2c2SURJMUpUdGNibjFjYmx4dUxtTnZiQzAwSUh0Y2JpQWdkMmxrZEdnNklETXpMak16TXpNekpUdGNibjFjYmx4dUxtTnZiQzAxSUh0Y2JpQWdkMmxrZEdnNklEUXhMalkyTmpZM0pUdGNibjFjYmx4dUxtTnZiQzAySUh0Y2JpQWdkMmxrZEdnNklEVXdKVHRjYm4xY2JseHVMbU52YkMwM0lIdGNiaUFnZDJsa2RHZzZJRFU0TGpNek16TXpKVHRjYm4xY2JseHVMbU52YkMwNElIdGNiaUFnZDJsa2RHZzZJRFkyTGpZMk5qWTNKVHRjYm4xY2JseHVMbU52YkMwNUlIdGNiaUFnZDJsa2RHZzZJRGMxSlR0Y2JuMWNibHh1TG1OdmJDMHhNQ0I3WEc0Z0lIZHBaSFJvT2lBNE15NHpNek16TXlVN1hHNTlYRzVjYmk1amIyd3RNVEVnZTF4dUlDQjNhV1IwYURvZ09URXVOalkyTmpjbE8xeHVmVnh1WEc0dVkyOXNMVEV5SUh0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc1OVhHNWNiaTVuY21sa1gxOTFibWwwSUh0Y2JpQWdabXh2WVhRNklHeGxablE3WEc0Z0lIQmhaR1JwYm1jNklEQXVOV1Z0TzF4dWZWeHVYRzR1WjNKcFpDMHRkR0ZpYkdVZ2UxeHVJQ0JrYVhOd2JHRjVPaUIwWVdKc1pUdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNTlYRzVjYmk1bmNtbGtMUzFtYkdWNElIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMW1iRzkzT2lCeWIzY2dkM0poY0R0Y2JuMWNibHh1TG1keWFXUXRMWFJoWW14bElENGdMbWR5YVdSZlgzVnVhWFFnZTF4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNPMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nZEc5d08xeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1ZlZ4dVhHNHVaM0pwWkMwdFpteGxlQ0ErSUM1bmNtbGtYMTkxYm1sMElIdGNiaUFnWm14bGVEb2dNVHRjYm4xY2JpSXNJaTV0Wlc1MUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZG1GeUtDMHRiV1Z1ZFY5aVlXTnJaM0p2ZFc1a0tUdGNibjFjYmx4dUxtMWxiblVzWEc0dWMzVmliV1Z1ZFNCN1hHNGdJR3hwYzNRdGMzUjViR1V0ZEhsd1pUb2dibTl1WlR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0JpYjNndGMyaGhaRzkzT2lBd0lESndlQ0EwY0hnZ2NtZGlZU2d3TERBc01Dd3dMaklwTzF4dWZWeHVYRzR1YldWdWRWOWZkR2wwYkdVZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHRjYmlBZ1ptOXVkQzF6YVhwbE9pQjJZWElvTFMxb015azdYRzRnSUhCaFpHUnBibWM2SURBZ2RtRnlLQzB0WjNWMGRHVnlLVHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMWFJvWlcxbFgzQnlhVzFoY25rcE8xeHVmVnh1WEc0dWJXVnVkVjlmYVhSbGJTQjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ2NHRmtaR2x1WnpvZ2RtRnlLQzB0WjNWMGRHVnlLVHRjYm4xY2JseHVZUzV0Wlc1MVgxOXBkR1Z0T21odmRtVnlJSHRjYmlBZ1kyOXNiM0k2SUhaaGNpZ3RMWFJvWlcxbFgyeHBibXNwTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNWNiaTVvWVhNdGMzVmliV1Z1ZFRwb2IzWmxjaUF1YzNWaWJXVnVkU3hjYmk1emRXSnRaVzUxT21odmRtVnlJSHRjYmlBZ2RtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNiaUFnYjNCaFkybDBlVG9nTVR0Y2JuMWNibHh1TG0xbGJuVXRMV2h2Y21sNmIyNTBZV3dnUGlCc2FTQjdYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJRzFwWkdSc1pUdGNibjFjYmx4dUxtaGhjeTF6ZFdKdFpXNTFJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVmVnh1WEc0dWFHRnpMWE4xWW0xbGJuVWdQaUF1YldWdWRWOWZhWFJsYlNCN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklESmxiVHRjYm4xY2JseHVMbWhoY3kxemRXSnRaVzUxSUQ0Z0xtMWxiblZmWDJsMFpXMDZPbUZtZEdWeUlIdGNiaUFnWTI5dWRHVnVkRG9nSnljN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ2JXRnlaMmx1T2lBd0xqTTFaVzA3WEc0Z0lHaGxhV2RvZERvZ01EdGNiaUFnZDJsa2RHZzZJREE3WEc0Z0lHSnZjbVJsY2kxeWFXZG9kRG9nTUM0ek5XVnRJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCaWIzSmtaWEl0YkdWbWREb2dNQzR6TldWdElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JpYjNKa1pYSXRkRzl3T2lBd0xqVmxiU0J6YjJ4cFpEdGNiaUFnY21sbmFIUTZJREF1TldWdE8xeHVJQ0IwYjNBNklERmxiVHRjYm4xY2JseHVMbk4xWW0xbGJuVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzF0Wlc1MVgySmhZMnRuY205MWJtUXBPMXh1SUNCdGFXNHRkMmxrZEdnNklERTFNSEI0TzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lCMllYSW9MUzFpYjNKa1pYSmZjbUZrYVhWektUdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RtbHphV0pwYkdsMGVTQTFNREJ0Y3l3Z2IzQmhZMmwwZVNBeU5UQnRjeUF5TlRCdGN6dGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQnNaV1owT2lBdE1XVnRPMXh1SUNCeWFXZG9kRG9nTFRGbGJUdGNiaUFnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dUlDQnZjR0ZqYVhSNU9pQXdPMXh1ZlZ4dUlpd2lMbUZzWlhKMElIdGNiaUFnY0dGa1pHbHVaem9nWTJGc1l5aDJZWElvTFMxbmRYUjBaWElwTHpRcElHTmhiR01vZG1GeUtDMHRaM1YwZEdWeUtTOHlLVHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nZG1GeUtDMHRZbTl5WkdWeVgzSmhaR2wxY3lrN1hHNGdJRzFoY21kcGJqb2dNQzQxWlcwZ01EdGNibjFjYmx4dUxtRnNaWEowTFMxbGNuSnZjaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklHTnZiRzl5S0haaGNpZ3RMWFJvWlcxbFgyRnNaWEowTFdWeWNtOXljeWtnZEdsdWRDZzFNQ1VwS1R0Y2JpQWdZMjlzYjNJNklHTnZiRzl5S0haaGNpZ3RMWFJvWlcxbFgyRnNaWEowTFdWeWNtOXljeWtnYzJoaFpHVW9NalVsS1NsY2JuMWNibHh1TG1Gc1pYSjBMUzF6ZFdOalpYTnpJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1kyOXNiM0lvZG1GeUtDMHRkR2hsYldWZllXeGxjblF0YzNWalkyVnpjeWtnZEdsdWRDZzFNQ1VwS1R0Y2JpQWdZMjlzYjNJNklHTnZiRzl5S0haaGNpZ3RMWFJvWlcxbFgyRnNaWEowTFhOMVkyTmxjM01wSUhOb1lXUmxLREkxSlNrcFhHNTlYRzVjYmk1aGJHVnlkQzB0YVc1bWJ5QjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUdOdmJHOXlLSFpoY2lndExYUm9aVzFsWDJGc1pYSjBMWGRoY201cGJtY3BJSFJwYm5Rb05UQWxLU2s3WEc0Z0lHTnZiRzl5T2lCamIyeHZjaWgyWVhJb0xTMTBhR1Z0WlY5aGJHVnlkQzEzWVhKdWFXNW5LU0J6YUdGa1pTZ3lOU1VwS1Z4dWZWeHVJaXdpTG1KMGJpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMV2R5WVhrcE8xeHVJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0JpYjNKa1pYSTZJSFpoY2lndExXSnZjbVJsY2lrZ2RtRnlLQzB0WjNKaGVWOXNkSEpmWVNrN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklIWmhjaWd0TFdKdmNtUmxjbDl5WVdScGRYTXBPMXh1SUNCd1lXUmthVzVuT2lBd0xqVmxiU0F4WlcwN1hHNGdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnWW05NExYTm9ZV1J2ZHpvZ01DQXhjSGdnTlhCNElDMHhjSGdnY21kaVlTZ3dMREFzTUN3d0xqSXBPMXh1WEc1OVhHNWNiaTVpZEc0NlptOWpkWE1zWEc0dVluUnVPbWh2ZG1WeUlIdGNiaUFnYjNWMGJHbHVaVG9nTUR0Y2JpQWdZbTl5WkdWeUxXTnZiRzl5T2lCMllYSW9MUzFuY21GNVgyeDBYMkVwTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNWNiaTVpZEc0NllXTjBhWFpsSUh0Y2JpQWdZbTk0TFhOb1lXUnZkem9nYVc1elpYUWdNQ0ExTUhCNElEQWdkbUZ5S0MwdFozSmhlVjlzZEhKZllTazdYRzU5WEc1Y2JpNWlkRzR0TFhCeWFXMWhjbmtnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxMGFHVnRaVjl3Y21sdFlYSjVLVHRjYmlBZ1kyOXNiM0k2SUhkb2FYUmxPMXh1ZlZ4dVhHNHVZblJ1TFMxelpXTnZibVJoY25rZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMTBhR1Z0WlY5elpXTnZibVJoY25rcE8xeHVJQ0JqYjJ4dmNqb2dkMmhwZEdVN1hHNTlYRzVjYmk1aWRHNHRMWFJsY25ScFlYSjVJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0ZEdobGJXVmZkR1Z5ZEdsaGNua3BPMXh1SUNCamIyeHZjam9nZDJocGRHVTdYRzU5WEc1Y2JpOHFJRUoxWjJacGVHVnpJQ292WEc0dVluUnVJQ3NnTG1KMGJpQjdYRzRnSUcxaGNtZHBiaTFzWldaME9pQTFjSGc3WEc1OVhHNWNiaTVpZEc0dWNIVnNiQzF5YVdkb2RDQXJJQzVpZEc0dWNIVnNiQzF5YVdkb2RDQjdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dOWEI0TzF4dWZTSXNJaTV3ZFd4c0xXeGxablFnZXlCbWJHOWhkRG9nYkdWbWREc2dmVnh1TG5CMWJHd3RjbWxuYUhRZ2V5Qm1iRzloZERvZ2NtbG5hSFE3SUgxY2JseHVMbTFsWkdsaElIdGNibHgwWkdsemNHeGhlVG9nWW14dlkyczdYRzVjZEc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1OVhHNWNiaTV0WldScFlWOWZZbTlrZVNCN1hHNWNkRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzVjZEhCaFpHUnBibWM2SUdOaGJHTW9kbUZ5S0MwdFozVjBkR1Z5SUM4Z01pa3BPMXh1ZlZ4dUlpd2lMbVp2Y20xZlgzSmhaR2x2SUQ0Z2FXNXdkWFFzWEc0dVptOXliVjlmWTJobFkydGliM2dnUGlCcGJuQjFkQ0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVEF3SlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUc1dmNtMWhiRHRjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKaGMyVnNhVzVsTzF4dUlDQnRZWEpuYVc0NklEQWdNQzQxWlcwN1hHNTlYRzVjYm1acFpXeGtjMlYwSUh0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0F5WlcwZ01tVnRPMXh1SUNCaWIzSmtaWEk2SUhaaGNpZ3RMV0p2Y21SbGNpazdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJSFpoY2lndExXSnZjbVJsY2w5eVlXUnBkWE1wTzF4dVhHNTlYRzVjYm14bFoyVnVaQ0I3SUZ4dUlDQndZV1JrYVc1bk9pQXhaVzA3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVmVnh1WEc1c1lXSmxiQ0I3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQnRhVzR0ZDJsa2RHZzZJRFpsYlR0Y2JpQWdiV0Z5WjJsdU9pQmpZV3hqS0haaGNpZ3RMV2QxZEhSbGNpa3ZOQ2tnTUR0Y2JuMWNibHh1TG1admNtMWZYM0poWkdsdkxGeHVMbVp2Y20xZlgyTm9aV05yWW05NElIdGNiaUFnYldGeVoybHVPaUF1TldWdElEQTdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlNCY2JseHVMbVp2Y20xZlgyTnZiblJ5YjJ3Z2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnWW05eVpHVnlPaUIyWVhJb0xTMWliM0prWlhJcElIWmhjaWd0TFdkeVlYbGZiSFJ5WDJFcE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQjJZWElvTFMxaWIzSmtaWEpmY21Ga2FYVnpLVHRjYmlBZ2NHRmtaR2x1WnpvZ01DNDFaVzBnTVdWdE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQjJZWElvTFMxbmRYUjBaWElwTzF4dWZWeHVYRzR1Wm05eWJWOWZZMjl1ZEhKdmJEcG9iM1psY2l4Y2JpNW1iM0p0WDE5amIyNTBjbTlzT21adlkzVnpJSHRjYmlBZ1ltOXlaR1Z5TFdOdmJHOXlPaUIyWVhJb0xTMTBhR1Z0WlY5d2NtbHRZWEo1S1R0Y2JpQWdiM1YwYkdsdVpUb2dNRHRjYm4xY2JpSXNJaTUwWVdKc1pTQjdYRzRnSUdKdmNtUmxjaTFqYjJ4c1lYQnpaVG9nWTI5c2JHRndjMlU3WEc1OVhHNWNiaTUwWVdKc1pTQjBaQ3hjYmk1MFlXSnNaU0IwYUNCN1hHNGdJSEJoWkdScGJtYzZJR05oYkdNb2RtRnlLQzB0WjNWMGRHVnlLU0F2SURJcE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh1SUNCdGFXNHRkMmxrZEdnNklERXhNSEI0TzF4dWZWeHVYRzR1ZEdGaWJHVWdkR2hsWVdRZ2RHZ2dlMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW05MGRHOXRPMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF5Y0hnZ2MyOXNhV1FnZG1GeUtDMHRaM0poZVY5c2RDazdYRzU5WEc1Y2JpNTBZV0pzWlNCMFptOXZkQ0IwWkNCN1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc0Z0lHSnZjbVJsY2kxMGIzQTZJREp3ZUNCemIyeHBaQ0IyWVhJb0xTMW5jbUY1WDJ4MEtUdGNibjFjYmx4dUxuUmhZbXhsTFMxNlpXSnlZUzF5YjNjZ2RHSnZaSGtnZEhJNmJuUm9MV05vYVd4a0tHVjJaVzRwSUNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExXZHlZWGxmYkhSeUtUdGNibjFjYmx4dVhHNHVkR0ZpYkdVdExYcGxZbkpoTFdOdmJDQjBhRHB1ZEdndFkyaHBiR1FvWlhabGJpa3NYRzR1ZEdGaWJHVXRMWHBsWW5KaExXTnZiQ0IwWkRwdWRHZ3RZMmhwYkdRb1pYWmxiaWtnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxbmNtRjVYMngwY2lrN1hHNTlYRzVjYmk1MFlXSnNaUzB0WW05eVpHVnlMV0ZzYkNCMFpDd2dMblJoWW14bExTMWliM0prWlhJdFlXeHNJSFJvSUh0Y2JpQWdZbTl5WkdWeU9pQjJZWElvTFMxaWIzSmtaWElwSUhaaGNpZ3RMV2R5WVhsZmJIUXBPMXh1ZlZ4dVhHNHVkR0ZpYkdVdExXSnZjbVJsY2kxeWIzY2dkR1FnZTF4dUlDQWdJR0p2Y21SbGNpMTBiM0E2SUhaaGNpZ3RMV0p2Y21SbGNpa2dkbUZ5S0MwdFozSmhlVjlzZENrN1hHNTlYRzVjYmk1MFlXSnNaUzB0WW05eVpHVnlMV052YkNCMFpDeGNiaTUwWVdKc1pTMHRZbTl5WkdWeUxXTnZiQ0IwYUNCN1hHNGdJR0p2Y21SbGNpMXNaV1owT2lCMllYSW9MUzFpYjNKa1pYSXBJSFpoY2lndExXZHlZWGxmYkhRcE8xeHVmVnh1WEc0dWRHRmliR1V0TFdKdmNtUmxjaTFqYjJ3Z2RHUTZabWx5YzNRdFkyaHBiR1FzWEc0dWRHRmliR1V0TFdKdmNtUmxjaTFqYjJ3Z2RHZzZabWx5YzNRdFkyaHBiR1FnZTF4dUlDQmliM0prWlhJdGJHVm1kRG9nTUZ4dWZWeHVJaXdpTG5SbGVIUXRiR1ZtZENBZ0lDQWdJQ0FnSUNBZ2V5QjBaWGgwTFdGc2FXZHVPaUJzWldaMElIMWNiaTUwWlhoMExYSnBaMmgwSUNBZ0lDQWdJQ0FnSUhzZ2RHVjRkQzFoYkdsbmJqb2djbWxuYUhRZ2ZWeHVMblJsZUhRdFkyVnVkR1Z5SUNBZ0lDQWdJQ0FnZXlCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJZ2ZWeHVMblJsZUhRdGFuVnpkR2xtZVNBZ0lDQWdJQ0FnZXlCMFpYaDBMV0ZzYVdkdU9pQnFkWE4wYVdaNUlIMWNiaTUwWlhoMExXNXZkM0poY0NBZ0lDQWdJQ0FnSUhzZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNDQjlYRzVjYmk1MFpYaDBMV3h2ZDJWeVkyRnpaU0FnSUNBZ0lIc2dkR1Y0ZEMxMGNtRnVjMlp2Y20wNklHeHZkMlZ5WTJGelpTQjlYRzR1ZEdWNGRDMTFjSEJsY21OaGMyVWdJQ0FnSUNCN0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVZ2ZWeHVMblJsZUhRdFkyRndhWFJoYkdsNlpTQWdJQ0FnZXlCMFpYaDBMWFJ5WVc1elptOXliVG9nWTJGd2FYUmhiR2w2WlNCOVhHNWNiaTUxTFdOc1pXRnlabWw0T21KbFptOXlaU3hjYmk1MUxXTnNaV0Z5Wm1sNE9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdaR2x6Y0d4aGVUb2dkR0ZpYkdVN1hHNTlYRzVjYmk1MUxXTnNaV0Z5Wm1sNE9tRm1kR1Z5SUh0Y2JpQWdZMnhsWVhJNklHSnZkR2c3WEc1OVhHNWNiaTUxTFdKc2IyTnJJSHNnWkdsemNHeGhlVG9nWW14dlkyc2dmVnh1TG5VdGFXSnNiMk5ySUhzZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJJSDFjYmk1MUxXbHViR2x1WlNCN0lHUnBjM0JzWVhrNklHbHViR2x1WlNCOVhHNWNiaTVpYjNKa1pYSmxaQ0I3WEc1Y2RHSnZjbVJsY2pvZ2RtRnlLQzB0WW05eVpHVnlLU0IyWVhJb0xTMW5jbUY1WDJ4MEtUdGNibHgwWW05eVpHVnlMWEpoWkdsMWN6b2dkbUZ5S0MwdFltOXlaR1Z5WDNKaFpHbDFjeWs3WEc1OUlsMTkgKi8iXX0= */